{
  "openapi": "3.0.0",
  "info": {
    "title": "UNIPaaS Platform API",
    "description": "UNIPaaS API for Platforms was implemented in a RESTful state of mind, our API has straight-forward, resource-oriented endpoints and produces standard HTTP response codes to communicate back the result of operations. We comply with most common HTTP standard, such as HTTP verbs, authentication and resource nesting.",
    "version": "1.12",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://sandbox.unipaas.com/platform"
    },
    {
      "url": "https://api.unipaas.com/platform"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "AuthorizeRequest": {
        "type": "object",
        "properties": {
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "master",
                "viewer",
                "developer",
                "onboarding_read",
                "onboarding_write",
                "ewallet_read",
                "websdk_access",
                "payout_write",
                "payout_read",
                "checkout_create",
                "link_read",
                "link_write",
                "public_config_read",
                "notification_read",
                "notification_write",
                "config_read",
                "login_access",
                "direct_debit_write",
                "direct_debit_read",
                "consumer_public_access"
              ]
            }
          },
          "vendorId": {
            "type": "string"
          }
        },
        "required": ["scopes"]
      },
      "AuthorizeResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "number"
          },
          "vendorId": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "master",
                "viewer",
                "developer",
                "onboarding_read",
                "onboarding_write",
                "ewallet_read",
                "websdk_access",
                "payout_write",
                "payout_read",
                "checkout_create",
                "link_read",
                "link_write",
                "public_config_read",
                "notification_read",
                "notification_write",
                "config_read",
                "login_access",
                "direct_debit_write",
                "direct_debit_read",
                "consumer_public_access"
              ]
            }
          }
        },
        "required": ["accessToken", "expiresIn", "vendorId", "scopes"]
      },
      "Category": {
        "type": "string",
        "enum": [
          "FOOD_DELIVERY",
          "DIGITAL_GOODS",
          "ONLINE_SERVICES",
          "TRANSPORTATION",
          "AGRICULTURAL_CO_OP",
          "ARTIST_SUPPLY",
          "MEMBERSHIP_CLUB",
          "CATERERS",
          "CONSTRUCTION_MATERIALS",
          "ENGINEERING_AND_SURVEYING_SERVICES",
          "HEALTH_AND_MEDICAL_SERVICES",
          "TELECOMMUNICATION_SERVICES",
          "INDUSTRIAL_SUPPLIES",
          "MEDIA_ADVERTISING_SERVICES",
          "UTILITIES",
          "FURNITURE_AND_HOME_FURNISHINGS",
          "PROFESSIONAL_SERVICES",
          "MISC_AND_RETAIL_STORES",
          "PERSONAL_SERVICES",
          "WHOLESALE_CLUBS",
          "MANAGEMENT",
          "ARCHITECTURAL_SERVICES",
          "GENERAL_CONTRACTORS",
          "GROCERIES_AND_SUPERMARKETS",
          "ONLINE_RETAIL"
        ]
      },
      "OnboardingType": {
        "type": "string",
        "enum": ["individual", "company"]
      },
      "VendorPayload": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "example": "UNIPaaS"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "country": {
            "type": "string",
            "format": "ISO 3166-1 alpha-2",
            "example": "GB"
          },
          "phone": {
            "type": "string",
            "example": "+447911123456"
          },
          "birthDate": {
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "1980-01-01"
          },
          "serviceDescription": {
            "type": "string",
            "example": "Service description"
          },
          "url": {
            "type": "string",
            "example": "https://platform.com"
          },
          "category": {
            "example": "FOOD_DELIVERY",
            "type": "string",
            "enum": [
              "FOOD_DELIVERY",
              "DIGITAL_GOODS",
              "ONLINE_SERVICES",
              "TRANSPORTATION",
              "AGRICULTURAL_CO_OP",
              "ARTIST_SUPPLY",
              "MEMBERSHIP_CLUB",
              "CATERERS",
              "CONSTRUCTION_MATERIALS",
              "ENGINEERING_AND_SURVEYING_SERVICES",
              "HEALTH_AND_MEDICAL_SERVICES",
              "TELECOMMUNICATION_SERVICES",
              "INDUSTRIAL_SUPPLIES",
              "MEDIA_ADVERTISING_SERVICES",
              "UTILITIES",
              "FURNITURE_AND_HOME_FURNISHINGS",
              "PROFESSIONAL_SERVICES",
              "MISC_AND_RETAIL_STORES",
              "PERSONAL_SERVICES",
              "WHOLESALE_CLUBS",
              "MANAGEMENT",
              "ARCHITECTURAL_SERVICES",
              "GENERAL_CONTRACTORS",
              "GROCERIES_AND_SUPERMARKETS",
              "ONLINE_RETAIL"
            ]
          },
          "type": {
            "example": "individual",
            "type": "string",
            "enum": ["individual", "company"]
          },
          "createOnboardingLink": {
            "type": "boolean",
            "default": false,
            "example": true
          }
        },
        "required": ["firstName", "lastName", "email", "country"]
      },
      "CreatedVendor": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "example": "UNIPaaS"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+447911123456"
          },
          "birthDate": {
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "1980-01-01"
          },
          "serviceDescription": {
            "type": "string",
            "example": "Service description"
          },
          "url": {
            "type": "string",
            "example": "https://platform.com"
          },
          "category": {
            "example": "FOOD_DELIVERY",
            "type": "string",
            "enum": [
              "FOOD_DELIVERY",
              "DIGITAL_GOODS",
              "ONLINE_SERVICES",
              "TRANSPORTATION",
              "AGRICULTURAL_CO_OP",
              "ARTIST_SUPPLY",
              "MEMBERSHIP_CLUB",
              "CATERERS",
              "CONSTRUCTION_MATERIALS",
              "ENGINEERING_AND_SURVEYING_SERVICES",
              "HEALTH_AND_MEDICAL_SERVICES",
              "TELECOMMUNICATION_SERVICES",
              "INDUSTRIAL_SUPPLIES",
              "MEDIA_ADVERTISING_SERVICES",
              "UTILITIES",
              "FURNITURE_AND_HOME_FURNISHINGS",
              "PROFESSIONAL_SERVICES",
              "MISC_AND_RETAIL_STORES",
              "PERSONAL_SERVICES",
              "WHOLESALE_CLUBS",
              "MANAGEMENT",
              "ARCHITECTURAL_SERVICES",
              "GENERAL_CONTRACTORS",
              "GROCERIES_AND_SUPERMARKETS",
              "ONLINE_RETAIL"
            ]
          },
          "type": {
            "example": "individual",
            "type": "string",
            "enum": ["individual", "company"]
          },
          "createOnboardingLink": {
            "type": "boolean",
            "default": false,
            "example": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "acceptPayments": {
            "type": "boolean"
          },
          "receivePayout": {
            "type": "boolean"
          },
          "onboardingLink": {
            "type": "string"
          }
        },
        "required": ["email", "name"]
      },
      "UpdateDescriptor": {
        "type": "object",
        "properties": {
          "descriptor": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "ComponentsSettings": {
        "type": "object",
        "properties": {}
      },
      "PublicConfigurationResponse": {
        "type": "object",
        "properties": {
          "platformName": {
            "type": "string",
            "example": "X-Pay"
          },
          "pages": {
            "type": "object",
            "example": {
              "promoPageUrl": "https://www.google.co.il/",
              "feesPageUrl": "https://www.google.co.il/",
              "payPortalUrl": "https://www.google.co.il/"
            }
          },
          "components": {
            "example": {
              "payPortal": {
                "payments": true
              }
            },
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          }
        },
        "required": ["platformName", "pages", "components"]
      },
      "CreateEwalletBody": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["currency", "name"]
      },
      "Ewallet": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "pendingBalance": {
            "type": "number"
          },
          "payableBalance": {
            "type": "number"
          },
          "reserveBalance": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "merchantName": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["id", "merchantName", "merchantId", "vendorId", "name"]
      },
      "EwalletTransaction": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "pendingBalance": {
            "type": "number"
          },
          "payableBalance": {
            "type": "number"
          },
          "reserveBalance": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "vendorId": {
            "type": "number"
          },
          "fees": {
            "type": "number"
          },
          "transactionId": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "Auth",
              "Sale",
              "Auth3D",
              "Sale3D",
              "Settle",
              "Void",
              "Refund",
              "Auth3D_Challange",
              "Init3D"
            ],
            "default": "Sale"
          },
          "transactionResult": {
            "type": "string"
          },
          "reconciled": {
            "type": "string",
            "enum": ["true", "false", "irrelevant", "unknown"],
            "default": "true"
          },
          "eWalletId": {
            "type": "string"
          },
          "netAmount": {
            "type": "number"
          },
          "pendingAmount": {
            "type": "number"
          },
          "payableAmount": {
            "type": "number"
          },
          "reservedAmount": {
            "type": "number"
          },
          "payoutId": {
            "type": "number"
          },
          "originalAmount": {
            "type": "number"
          },
          "brand": {
            "type": "string"
          },
          "issuerCountry": {
            "type": "string",
            "default": "GB"
          },
          "authorizationId": {
            "type": "string"
          }
        },
        "required": ["id", "transactionType", "reconciled", "issuerCountry"]
      },
      "PayoutPaymentMethods": {
        "type": "string",
        "enum": ["bank_transfer", "visa_direct", "internal_transfer"]
      },
      "PayoutStatus": {
        "type": "string",
        "enum": [
          "initialized",
          "pending",
          "sent",
          "completed",
          "failed",
          "canceled",
          "declined",
          "unknown",
          "in_review"
        ]
      },
      "Payout": {
        "type": "object",
        "properties": {
          "eWalletId": {
            "type": "string"
          },
          "payoutOptionId": {
            "type": "string"
          },
          "payoutMethod": {
            "default": "bank_transfer",
            "type": "string",
            "enum": ["bank_transfer", "visa_direct", "internal_transfer"]
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "default": "GBP"
          },
          "id": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "status": {
            "default": "pending",
            "type": "string",
            "enum": [
              "initialized",
              "pending",
              "sent",
              "completed",
              "failed",
              "canceled",
              "declined",
              "unknown",
              "in_review"
            ]
          },
          "merchantId": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          }
        },
        "required": [
          "eWalletId",
          "payoutOptionId",
          "payoutMethod",
          "currency",
          "id",
          "amount",
          "status",
          "merchantId",
          "vendorId"
        ]
      },
      "CreatePayoutBody": {
        "type": "object",
        "properties": {
          "eWalletId": {
            "type": "string"
          },
          "payoutOptionId": {
            "type": "string"
          },
          "payoutMethod": {
            "default": "bank_transfer",
            "type": "string",
            "enum": ["bank_transfer", "visa_direct", "internal_transfer"]
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "default": "GBP"
          }
        },
        "required": ["eWalletId", "payoutOptionId", "payoutMethod", "currency"]
      },
      "PayoutFrequency": {
        "type": "string",
        "enum": ["daily", "weekly", "monthly"]
      },
      "PayoutConfiguration": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "frequency": {
            "example": "daily",
            "type": "string",
            "enum": ["daily", "weekly", "monthly"]
          },
          "id": {
            "type": "number"
          },
          "merchant_id": {
            "type": "string"
          }
        },
        "required": ["enabled", "frequency", "id", "merchant_id"]
      },
      "CreatePayoutConfigurationBody": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "frequency": {
            "example": "daily",
            "type": "string",
            "enum": ["daily", "weekly", "monthly"]
          }
        },
        "required": ["enabled", "frequency"]
      },
      "PayoutOptionType": {
        "type": "string",
        "enum": ["Card", "Alternative", "Bank Account"]
      },
      "CreateCardAccountBody": {
        "type": "object",
        "properties": {}
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "countr": {
            "type": "string"
          },
          "bankCode": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          }
        }
      },
      "ApmAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "PayoutOption": {
        "type": "object",
        "properties": {
          "payoutOptionType": {
            "example": "Card",
            "type": "string",
            "enum": ["Card", "Alternative", "Bank Account"]
          },
          "cardAccount": {
            "type": "object",
            "properties": {}
          },
          "bankAccount": {
            "type": "object",
            "properties": {
              "accountType": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "countr": {
                "type": "string"
              },
              "bankCode": {
                "type": "string"
              },
              "accountNumber": {
                "type": "string"
              }
            }
          },
          "apmAccount": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        },
        "required": ["payoutOptionType"]
      },
      "PaymentOptionType": {
        "type": "string",
        "enum": ["Card", "Alternative", "Bank Account"]
      },
      "IdentityType": {
        "type": "string",
        "enum": ["consumer", "vendor", "platform"]
      },
      "CreatedPaymentOption": {
        "type": "object",
        "properties": {
          "paymentOptionType": {
            "example": "Card",
            "type": "string",
            "enum": ["Card", "Alternative", "Bank Account"]
          },
          "cardAccount": {
            "type": "object",
            "properties": {}
          },
          "bankAccount": {
            "type": "object",
            "properties": {
              "accountType": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "countr": {
                "type": "string"
              },
              "bankCode": {
                "type": "string"
              },
              "accountNumber": {
                "type": "string"
              }
            }
          },
          "apmAccount": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "identityType": {
            "example": "vendor",
            "type": "string",
            "enum": ["consumer", "vendor", "platform"]
          },
          "identity": {
            "type": "string"
          },
          "paymentOptionId": {
            "type": "string"
          }
        },
        "required": [
          "paymentOptionType",
          "identityType",
          "identity",
          "paymentOptionId"
        ]
      },
      "OnboardingLegacyStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "STARTED",
          "PAY_IN_SUCCESS",
          "PAY_IN_IN_REVIEW",
          "PAY_OUT_IN_REVIEW",
          "PAY_OUT_SUCCESS",
          "REJECTED"
        ]
      },
      "OnboardingStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "STARTED",
          "ACTION_REQUIRED",
          "RESTRICTED",
          "IN_REVIEW",
          "REJECTED",
          "ACCEPT_PAYMENTS",
          "COMPLETED"
        ]
      },
      "OnboardingCompletedIndividual": {
        "type": "object",
        "properties": {
          "status": {
            "example": "PENDING",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "PAY_IN_SUCCESS",
              "PAY_IN_IN_REVIEW",
              "PAY_OUT_IN_REVIEW",
              "PAY_OUT_SUCCESS",
              "REJECTED"
            ]
          },
          "onboardingStatus": {
            "example": "RESTRICTED",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "ACTION_REQUIRED",
              "RESTRICTED",
              "IN_REVIEW",
              "REJECTED",
              "ACCEPT_PAYMENTS",
              "COMPLETED"
            ]
          },
          "acceptPayments": {
            "type": "boolean",
            "example": true
          },
          "receivePayout": {
            "type": "boolean",
            "example": true
          },
          "fields": {
            "example": [
              {
                "alias": "individual.firstName",
                "editable": true,
                "status": "COMPLETED",
                "value": "John",
                "required": true
              },
              {
                "alias": "individual.lastName",
                "editable": true,
                "status": "COMPLETED",
                "value": "Doe",
                "required": true
              },
              {
                "alias": "individual.birthDate",
                "editable": true,
                "status": "COMPLETED",
                "value": "1991-04-02",
                "required": true
              },
              {
                "alias": "individual.email",
                "status": "COMPLETED",
                "value": "messi@example.com",
                "editable": null,
                "required": true
              },
              {
                "alias": "individual.phone",
                "status": "COMPLETED",
                "value": "+447911123456",
                "editable": null,
                "required": true
              },
              {
                "alias": "individual.address",
                "editable": true,
                "status": "COMPLETED",
                "value": {
                  "country": "GB",
                  "city": "London",
                  "state": "England",
                  "houseNumber": "64",
                  "street": "New Cavendish Street",
                  "postCode": "SW1W 0NY"
                },
                "required": true
              },
              {
                "alias": "business.url",
                "editable": true,
                "status": "COMPLETED",
                "value": "example.com",
                "required": true
              },
              {
                "alias": "business.category",
                "editable": true,
                "status": "COMPLETED",
                "value": "FOOD_DELIVERY",
                "required": true
              },
              {
                "alias": "business.serviceDescription",
                "editable": true,
                "status": "COMPLETED",
                "value": "example.com",
                "required": true
              },
              {
                "type": "HTML",
                "code": "\n<ul>\n<li>Please note you can accept payments up to a <strong>total amount of £1500</strong> for a <strong>limited period of 30 days</strong>, while we review and approve your account. </li>\n<li>You be may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of your account and/or a refund of the amounts received. UNIPaaS reserves the right to approve or reject my application accordingly. </li>\n</ul>\n\n\n<br />\n<br />\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n<p>I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/{platformId}/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound by it; </p>\n<p>I consent to the sharing of my documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided by UNIPaaS as stated in the Terms. </p>\n<p>I confirm that I will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>, I understand that breaching this term will lead to immediate termination of my merchant account.</p>\n                ",
                "status": "PENDING",
                "required": true
              },
              {
                "alias": "business.agreement",
                "status": "COMPLETED",
                "value": {
                  "accepted": true,
                  "ipAddress": "1.1.1.1",
                  "publicUrl": "https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/vendors/{vendorId}/signature/{signatureId}/msa.pdf"
                },
                "editable": null,
                "required": true
              },
              {
                "alias": "business.accountHolderName",
                "editable": true,
                "status": "COMPLETED",
                "value": "Doe",
                "required": true
              },
              {
                "alias": "business.bankAccount",
                "status": "COMPLETED",
                "value": "38290008",
                "editable": null,
                "required": true
              },
              {
                "alias": "business.sortCode",
                "status": "COMPLETED",
                "value": "200415",
                "editable": null,
                "required": true
              },
              {
                "alias": "individual.passport",
                "label": "Passport copy",
                "type": "FILE_INPUT",
                "required": false,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null
              },
              {
                "alias": "individual.drivingLicense",
                "label": "Driving license",
                "type": "FILE_INPUT",
                "required": false,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null
              },
              {
                "alias": "business.bankStatement",
                "label": "Upload a copy of your bank statement",
                "type": "FILE_INPUT",
                "required": false,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "status",
          "onboardingStatus",
          "acceptPayments",
          "receivePayout",
          "fields"
        ]
      },
      "OnboardingCompletedCompany": {
        "type": "object",
        "properties": {
          "status": {
            "example": "PAY_OUT_SUCCESS",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "ACTION_REQUIRED",
              "RESTRICTED",
              "IN_REVIEW",
              "REJECTED",
              "ACCEPT_PAYMENTS",
              "COMPLETED"
            ]
          },
          "onboardingStatus": {
            "example": "RESTRICTED",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "ACTION_REQUIRED",
              "RESTRICTED",
              "IN_REVIEW",
              "REJECTED",
              "ACCEPT_PAYMENTS",
              "COMPLETED"
            ]
          },
          "acceptPayments": {
            "type": "boolean",
            "example": true
          },
          "receivePayout": {
            "type": "boolean",
            "example": true
          },
          "fields": {
            "example": [
              {
                "alias": "company.registrationNumber",
                "type": "TEXT_FIELD",
                "label": "Company registration number",
                "editable": true,
                "rules": [
                  {
                    "pattern": "^\\d{8}$",
                    "message": "Registration Number must be exactly 8 digits"
                  }
                ],
                "maxLength": 8,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "company.name",
                "status": "COMPLETED",
                "value": "Bitter Sweet",
                "editable": null,
                "required": true
              },
              {
                "alias": "company.address",
                "label": "Corporate address",
                "editable": true,
                "tooltip": "Please enter a full address, including house number or name",
                "type": "ADDRESS_INPUT",
                "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "company.email",
                "status": "COMPLETED",
                "value": "messi@example.com",
                "editable": null,
                "required": true
              },
              {
                "alias": "company.phone",
                "type": "PHONE",
                "label": "Phone Number",
                "rules": [
                  {
                    "pattern": "^\\+[0-9]{0,14}$",
                    "message": "Invalid Phone number"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.vat",
                "type": "TEXT_FIELD",
                "label": "VAT Number (optional)",
                "editable": true,
                "required": false,
                "rules": [
                  {
                    "pattern": "^\\d{9}$",
                    "message": "VAT Number must be exactly 9 digits"
                  }
                ],
                "maxLength": 8,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null
              },
              {
                "alias": "business.url",
                "type": "TEXT_FIELD",
                "label": "Commercial website URL",
                "editable": true,
                "tooltip": "This should be the website you use to sell your goods or services.\nIt can be your business profile page hosted by your platform’s website",
                "comment": "Please ensure that you have added the website's URL that you are planning to use to sell goods and services.",
                "rules": [
                  {
                    "pattern": "^.+..+$",
                    "message": "Invalid Website URL"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.category",
                "editable": true,
                "status": "COMPLETED",
                "value": "FOOD_DELIVERY",
                "required": true
              },
              {
                "alias": "representative.firstName",
                "editable": true,
                "status": "COMPLETED",
                "value": "Lionel",
                "required": true
              },
              {
                "alias": "representative.lastName",
                "editable": true,
                "status": "COMPLETED",
                "value": "Messi",
                "required": true
              },
              {
                "alias": "representative.birthDate",
                "type": "DATE_PICKER",
                "label": "Date of Birth",
                "min": "1902-02-17",
                "max": "2004-02-17",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.address",
                "type": "ADDRESS_INPUT",
                "label": "Home address",
                "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.nationality",
                "type": "SELECT",
                "label": "Nationality",
                "items": [
                  "Afghan",
                  "Albanian",
                  "Algerian",
                  "Argentinian",
                  "Australian",
                  "Austrian",
                  "Bangladeshi",
                  "Belgian",
                  "Bolivian",
                  "Batswana",
                  "Brazilian",
                  "Bulgarian",
                  "Cambodian",
                  "Cameroonian",
                  "Canadian",
                  "Chilean",
                  "Chinese",
                  "Colombian",
                  "Costa Rican",
                  "Croatian",
                  "Cuban",
                  "Czech",
                  "Danish",
                  "Dominican",
                  "Ecuadorian",
                  "Egyptian",
                  "Salvadorian",
                  "English",
                  "Estonian",
                  "Ethiopian",
                  "Fijian",
                  "Finnish",
                  "French",
                  "German",
                  "Ghanaian",
                  "Greek",
                  "Guatemalan",
                  "Haitian",
                  "Honduran",
                  "Hungarian",
                  "Icelandic",
                  "Indian",
                  "Indonesian",
                  "Iranian",
                  "Iraqi",
                  "Irish",
                  "Israeli",
                  "Italian",
                  "Jamaican",
                  "Japanese",
                  "Jordanian",
                  "Kenyan",
                  "Kuwaiti",
                  "Lao",
                  "Latvian",
                  "Lebanese",
                  "Libyan",
                  "Lithuanian",
                  "Malagasy",
                  "Malaysian",
                  "Malian",
                  "Maltese",
                  "Mexican",
                  "Mongolian",
                  "Moroccan",
                  "Mozambican",
                  "Namibian",
                  "Nepalese",
                  "Dutch",
                  "New Zealand",
                  "Nicaraguan",
                  "Nigerian",
                  "Norwegian",
                  "Pakistani",
                  "Panamanian",
                  "Paraguayan",
                  "Peruvian",
                  "Philippine",
                  "Polish",
                  "Portuguese",
                  "Romanian",
                  "Russian",
                  "Saudi",
                  "Scottish",
                  "Senegalese",
                  "Serbian",
                  "Singaporean",
                  "Slovak",
                  "South African",
                  "Korean",
                  "Spanish",
                  "Sri Lankan",
                  "Sudanese",
                  "Swedish",
                  "Swiss",
                  "Syrian",
                  "Taiwanese",
                  "Tajikistani",
                  "Thai",
                  "Tongan",
                  "Tunisian",
                  "Turkish",
                  "Ukrainian",
                  "Emirati",
                  "British",
                  "American **",
                  "Uruguayan",
                  "Venezuelan",
                  "Vietnamese",
                  "Welsh",
                  "Zambian",
                  "Zimbabwean"
                ],
                "value": "English",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.role",
                "type": "SELECT",
                "label": "Role / Title",
                "items": ["CEO", "CFO", "SMO", "DIRECTOR", "OTHER"],
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.ownershipPercentage",
                "type": "TEXT_FIELD",
                "label": "% ownership of the business entity",
                "tooltip": "If you hold any ownership of the business entity,\nplease insert the percentage. Otherwise type 0",
                "rules": [
                  {
                    "pattern": "^[0-9][0-9]?$|^100$",
                    "message": "Field should be a number between 0-100"
                  }
                ],
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.passport",
                "label": "Passport copy",
                "type": "FILE_INPUT",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.drivingLicense",
                "label": "Driving license",
                "type": "FILE_INPUT",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.isAuthorized",
                "type": "CHECKBOX",
                "label": "I am the duly authorized representative of Bitter Sweet business entity",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "type": "HTML",
                "code": "\n\n\n\n\n\n<ul>\n<li>The Business will be eligible to accept payments up to a <strong>total amount of £2500</strong> for a <strong>limited period of 30 days</strong>,  while we review and approve the account. </li>\n<li>Your business may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of the account and/or a refund of the amounts received. UNIPaaS reserves the right to request additional information and approve or reject your application. </li>\n</ul>\n\n<br />\n<br />\n\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n\n<p>On behalf of the Business, \n<br />\nI represent and undertake that, I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/605c8a4b8b37a82b60f0752d/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound (and have the Business be bound) by it; \n</p>\n\n\n<p>The sharing of documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided as stated in the Terms. </p>\n<p>I confirm that the business will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>.</p>\n\n\n\n\n\n",
                "status": "PENDING",
                "required": true
              },
              {
                "alias": "business.agreement",
                "type": "AGREEMENT",
                "label": "I agree",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.accountHolderName",
                "editable": true,
                "type": "TEXT_FIELD",
                "label": "Bank Account holder name",
                "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.bankAccount",
                "type": "TEXT_FIELD",
                "label": "Account number",
                "comment": "For example: 38290008",
                "rules": [
                  {
                    "pattern": "^[0-9]{8}$",
                    "message": "Bank Account Number must be exactly 8 digits"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.sortCode",
                "type": "TEXT_FIELD",
                "label": "Sort code",
                "comment": "For example: 200415",
                "rules": [
                  {
                    "pattern": "^[0-9]{6}$",
                    "message": "Sort-code must be exactly 6 digits"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "type": "HTML",
                "code": "The following information can be found on your bank statement, or on the account page of your online banking web page or on your mobile banking application.",
                "status": "PENDING",
                "required": true
              },
              {
                "label": "Stakeholders",
                "alias": "company.ultimateBeneficialOwners",
                "type": "STAKEHOLDERS",
                "collapsed": true,
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "company.incorporationDocument",
                "label": "Incorporation Document",
                "type": "FILE_INPUT",
                "viewButton": true,
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.bankStatement",
                "type": "FILE_INPUT",
                "editable": true,
                "label": "Bank Statement or a Voided Cheque",
                "comment": "Please upload a file dated within the past 3 months",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "status",
          "onboardingStatus",
          "acceptPayments",
          "receivePayout",
          "fields"
        ]
      },
      "PendingOnboardingIndividual": {
        "type": "object",
        "properties": {
          "status": {
            "example": "PENDING",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "ACTION_REQUIRED",
              "RESTRICTED",
              "IN_REVIEW",
              "REJECTED",
              "ACCEPT_PAYMENTS",
              "COMPLETED"
            ]
          },
          "fields": {
            "example": [
              {
                "alias": "individual.firstName",
                "editable": true,
                "status": "PENDING",
                "value": null,
                "required": true
              },
              {
                "alias": "individual.lastName",
                "editable": true,
                "status": "PENDING",
                "value": null,
                "required": true
              },
              {
                "alias": "individual.birthDate",
                "type": "DATE_PICKER",
                "label": "Date of Birth",
                "min": "1902-02-17",
                "max": "2004-02-17",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "individual.email",
                "status": "PENDING",
                "value": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "individual.phone",
                "type": "PHONE",
                "label": "Phone Number",
                "rules": [
                  {
                    "pattern": "^\\+[0-9]{0,14}$",
                    "message": "Invalid Phone number"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "individual.address",
                "type": "ADDRESS_INPUT",
                "label": "Address",
                "editable": true,
                "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.url",
                "type": "TEXT_FIELD",
                "label": "Profile URL",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.category",
                "editable": true,
                "status": "COMPLETED",
                "value": "FOOD_DELIVERY",
                "required": true
              },
              {
                "alias": "business.serviceDescription",
                "type": "TEXTAREA",
                "label": "Service Description",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "type": "HTML",
                "code": "\n<ul>\n<li>Please note you can accept payments up to a <strong>total amount of £1500</strong> for a <strong>limited period of 30 days</strong>, while we review and approve your account. </li>\n<li>You be may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of your account and/or a refund of the amounts received. UNIPaaS reserves the right to approve or reject my application accordingly. </li>\n</ul>\n\n\n<br />\n<br />\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n<p>I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/{platformId}/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound by it; </p>\n<p>I consent to the sharing of my documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided by UNIPaaS as stated in the Terms. </p>\n<p>I confirm that I will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>, I understand that breaching this term will lead to immediate termination of my merchant account.</p>\n                ",
                "status": "PENDING",
                "required": true
              },
              {
                "alias": "business.agreement",
                "type": "AGREEMENT",
                "label": "I agree",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.accountHolderName",
                "type": "TEXT_FIELD",
                "label": "Bank Account holder name",
                "editable": true,
                "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.bankAccount",
                "type": "TEXT_FIELD",
                "label": "Your Bank Account Number",
                "comment": "For example: 38290008",
                "rules": [
                  {
                    "pattern": "^[0-9]{8}$",
                    "message": "Bank Account Number must be exactly 8 digits"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.sortCode",
                "type": "TEXT_FIELD",
                "label": "Your Sort-code",
                "comment": "For example: 200415",
                "rules": [
                  {
                    "pattern": "^[0-9]{6}$",
                    "message": "Sort-code must be exactly 6 digits"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "individual.passport",
                "label": "Passport copy",
                "type": "FILE_INPUT",
                "required": false,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null
              },
              {
                "alias": "individual.drivingLicense",
                "label": "Driving license",
                "type": "FILE_INPUT",
                "required": false,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null
              },
              {
                "alias": "business.bankStatement",
                "label": "Upload a copy of your bank statement",
                "type": "FILE_INPUT",
                "required": false,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["status", "fields"]
      },
      "PendingOnboardingCompany": {
        "type": "object",
        "properties": {
          "status": {
            "example": "PENDING",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "ACTION_REQUIRED",
              "RESTRICTED",
              "IN_REVIEW",
              "REJECTED",
              "ACCEPT_PAYMENTS",
              "COMPLETED"
            ]
          },
          "fields": {
            "example": [
              {
                "alias": "company.registrationNumber",
                "type": "TEXT_FIELD",
                "label": "Company registration number",
                "editable": true,
                "rules": [
                  {
                    "pattern": "^\\d{8}$",
                    "message": "Registration Number must be exactly 8 digits"
                  }
                ],
                "maxLength": 8,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "company.name",
                "status": "PENDING",
                "value": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "company.address",
                "label": "Corporate address",
                "editable": true,
                "tooltip": "Please enter a full address, including house number or name",
                "type": "ADDRESS_INPUT",
                "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "company.email",
                "status": "PENDING",
                "value": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "company.phone",
                "type": "PHONE",
                "label": "Phone Number",
                "rules": [
                  {
                    "pattern": "^\\+[0-9]{0,14}$",
                    "message": "Invalid Phone number"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.vat",
                "type": "TEXT_FIELD",
                "label": "VAT Number (optional)",
                "editable": true,
                "required": false,
                "rules": [
                  {
                    "pattern": "^\\d{9}$",
                    "message": "VAT Number must be exactly 9 digits"
                  }
                ],
                "maxLength": 8,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null
              },
              {
                "alias": "business.url",
                "type": "TEXT_FIELD",
                "label": "Commercial website URL",
                "editable": true,
                "tooltip": "This should be the website you use to sell your goods or services.\nIt can be your business profile page hosted by your platform’s website",
                "comment": "Please ensure that you have added the website's URL that you are planning to use to sell goods and services.",
                "rules": [
                  {
                    "pattern": "^.+..+$",
                    "message": "Invalid Website URL"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.category",
                "editable": true,
                "status": "PENDING",
                "value": null,
                "required": true
              },
              {
                "alias": "representative.firstName",
                "editable": true,
                "status": "PENDING",
                "value": null,
                "required": true
              },
              {
                "alias": "representative.lastName",
                "editable": true,
                "status": "PENDING",
                "value": null,
                "required": true
              },
              {
                "alias": "representative.birthDate",
                "type": "DATE_PICKER",
                "label": "Date of Birth",
                "min": "1902-02-17",
                "max": "2004-02-17",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.address",
                "type": "ADDRESS_INPUT",
                "label": "Home address",
                "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.nationality",
                "type": "SELECT",
                "label": "Nationality",
                "items": [
                  "Afghan",
                  "Albanian",
                  "Algerian",
                  "Argentinian",
                  "Australian",
                  "Austrian",
                  "Bangladeshi",
                  "Belgian",
                  "Bolivian",
                  "Batswana",
                  "Brazilian",
                  "Bulgarian",
                  "Cambodian",
                  "Cameroonian",
                  "Canadian",
                  "Chilean",
                  "Chinese",
                  "Colombian",
                  "Costa Rican",
                  "Croatian",
                  "Cuban",
                  "Czech",
                  "Danish",
                  "Dominican",
                  "Ecuadorian",
                  "Egyptian",
                  "Salvadorian",
                  "English",
                  "Estonian",
                  "Ethiopian",
                  "Fijian",
                  "Finnish",
                  "French",
                  "German",
                  "Ghanaian",
                  "Greek",
                  "Guatemalan",
                  "Haitian",
                  "Honduran",
                  "Hungarian",
                  "Icelandic",
                  "Indian",
                  "Indonesian",
                  "Iranian",
                  "Iraqi",
                  "Irish",
                  "Israeli",
                  "Italian",
                  "Jamaican",
                  "Japanese",
                  "Jordanian",
                  "Kenyan",
                  "Kuwaiti",
                  "Lao",
                  "Latvian",
                  "Lebanese",
                  "Libyan",
                  "Lithuanian",
                  "Malagasy",
                  "Malaysian",
                  "Malian",
                  "Maltese",
                  "Mexican",
                  "Mongolian",
                  "Moroccan",
                  "Mozambican",
                  "Namibian",
                  "Nepalese",
                  "Dutch",
                  "New Zealand",
                  "Nicaraguan",
                  "Nigerian",
                  "Norwegian",
                  "Pakistani",
                  "Panamanian",
                  "Paraguayan",
                  "Peruvian",
                  "Philippine",
                  "Polish",
                  "Portuguese",
                  "Romanian",
                  "Russian",
                  "Saudi",
                  "Scottish",
                  "Senegalese",
                  "Serbian",
                  "Singaporean",
                  "Slovak",
                  "South African",
                  "Korean",
                  "Spanish",
                  "Sri Lankan",
                  "Sudanese",
                  "Swedish",
                  "Swiss",
                  "Syrian",
                  "Taiwanese",
                  "Tajikistani",
                  "Thai",
                  "Tongan",
                  "Tunisian",
                  "Turkish",
                  "Ukrainian",
                  "Emirati",
                  "British",
                  "American **",
                  "Uruguayan",
                  "Venezuelan",
                  "Vietnamese",
                  "Welsh",
                  "Zambian",
                  "Zimbabwean"
                ],
                "value": "English",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.role",
                "type": "SELECT",
                "label": "Role / Title",
                "items": ["CEO", "CFO", "SMO", "DIRECTOR", "OTHER"],
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.ownershipPercentage",
                "type": "TEXT_FIELD",
                "label": "% ownership of the business entity",
                "tooltip": "If you hold any ownership of the business entity,\nplease insert the percentage. Otherwise type 0",
                "rules": [
                  {
                    "pattern": "^[0-9][0-9]?$|^100$",
                    "message": "Field should be a number between 0-100"
                  }
                ],
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.passport",
                "label": "Passport copy",
                "type": "FILE_INPUT",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.drivingLicense",
                "label": "Driving license",
                "type": "FILE_INPUT",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "representative.isAuthorized",
                "type": "CHECKBOX",
                "label": "I am the duly authorized representative of Bitter Sweet business entity",
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "type": "HTML",
                "code": "\n\n\n\n\n\n<ul>\n<li>The Business will be eligible to accept payments up to a <strong>total amount of £2500</strong> for a <strong>limited period of 30 days</strong>,  while we review and approve the account. </li>\n<li>Your business may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of the account and/or a refund of the amounts received. UNIPaaS reserves the right to request additional information and approve or reject your application. </li>\n</ul>\n\n<br />\n<br />\n\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n\n<p>On behalf of the Business, \n<br />\nI represent and undertake that, I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/605c8a4b8b37a82b60f0752d/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound (and have the Business be bound) by it; \n</p>\n\n\n<p>The sharing of documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided as stated in the Terms. </p>\n<p>I confirm that the business will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>.</p>\n\n\n\n\n\n",
                "status": "PENDING",
                "required": true
              },
              {
                "alias": "business.agreement",
                "type": "AGREEMENT",
                "label": "I agree",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.accountHolderName",
                "editable": true,
                "type": "TEXT_FIELD",
                "label": "Bank Account holder name",
                "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.bankAccount",
                "type": "TEXT_FIELD",
                "label": "Account number",
                "comment": "For example: 38290008",
                "rules": [
                  {
                    "pattern": "^[0-9]{8}$",
                    "message": "Bank Account Number must be exactly 8 digits"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "alias": "business.sortCode",
                "type": "TEXT_FIELD",
                "label": "Sort code",
                "comment": "For example: 200415",
                "rules": [
                  {
                    "pattern": "^[0-9]{6}$",
                    "message": "Sort-code must be exactly 6 digits"
                  }
                ],
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "editable": null,
                "required": true
              },
              {
                "type": "HTML",
                "code": "The following information can be found on your bank statement, or on the account page of your online banking web page or on your mobile banking application.",
                "status": "PENDING",
                "required": true
              },
              {
                "label": "Stakeholders",
                "alias": "company.ultimateBeneficialOwners",
                "type": "STAKEHOLDERS",
                "collapsed": true,
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "company.incorporationDocument",
                "label": "Incorporation Document",
                "type": "FILE_INPUT",
                "viewButton": true,
                "editable": true,
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              },
              {
                "alias": "business.bankStatement",
                "type": "FILE_INPUT",
                "editable": true,
                "label": "Bank Statement or a Voided Cheque",
                "comment": "Please upload a file dated within the past 3 months",
                "status": "PENDING",
                "completedAt": null,
                "value": null,
                "reason": null,
                "errors": null,
                "required": true
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["status", "fields"]
      },
      "OnboardingApiPayload": {
        "type": "object",
        "properties": {
          "fields": {
            "example": [
              {
                "alias": "individual.email",
                "value": "john.doe@example.com"
              },
              {
                "alias": "individual.phone",
                "value": "+447911123456"
              },
              {
                "alias": "individual.firstName",
                "value": "John"
              },
              {
                "alias": "individual.lastName",
                "value": "Doe"
              },
              {
                "alias": "individual.birthDate",
                "value": "1991-04-02"
              },
              {
                "alias": "individual.address",
                "value": {
                  "country": "GB",
                  "city": "London",
                  "state": "England",
                  "houseNumber": "64",
                  "street": "New Cavendish Street",
                  "postCode": "SW1W 0NY"
                }
              },
              {
                "alias": "business.category",
                "value": "FOOD_DELIVERY"
              },
              {
                "alias": "business.url",
                "value": "example.com"
              },
              {
                "alias": "business.serviceDescription",
                "value": "example.com"
              },
              {
                "alias": "business.accountHolderName",
                "value": "Doe"
              },
              {
                "alias": "business.bankAccount",
                "value": "38290008"
              },
              {
                "alias": "business.sortCode",
                "value": "200415"
              },
              {
                "alias": "business.agreement",
                "value": {
                  "accepted": true,
                  "ipAddress": "1.1.1.1"
                }
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["fields"]
      },
      "RequireOnboardingPayload": {
        "type": "object",
        "properties": {
          "fields": {
            "example": [
              {
                "alias": "individual.email",
                "value": "john.doe@example.com"
              },
              {
                "alias": "individual.phone",
                "value": "+447911123456"
              },
              {
                "alias": "individual.firstName",
                "value": "John"
              },
              {
                "alias": "individual.lastName",
                "value": "Doe"
              },
              {
                "alias": "individual.birthDate",
                "value": "1991-04-02"
              },
              {
                "alias": "individual.address",
                "value": {
                  "country": "GB",
                  "city": "London",
                  "state": "England",
                  "houseNumber": "64",
                  "street": "New Cavendish Street",
                  "postCode": "SW1W 0NY"
                }
              },
              {
                "alias": "business.category",
                "value": "FOOD_DELIVERY"
              },
              {
                "alias": "business.url",
                "value": "example.com"
              },
              {
                "alias": "business.serviceDescription",
                "value": "example.com"
              },
              {
                "alias": "business.accountHolderName",
                "value": "Doe"
              },
              {
                "alias": "business.bankAccount",
                "value": "38290008"
              },
              {
                "alias": "business.sortCode",
                "value": "200415"
              },
              {
                "alias": "business.agreement",
                "value": {
                  "accepted": true,
                  "ipAddress": "1.1.1.1"
                }
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createOnboardingLink": {
            "type": "boolean",
            "example": true
          }
        },
        "required": ["fields"]
      },
      "OnboardingRequired": {
        "type": "object",
        "properties": {
          "onboardingStatus": {
            "example": "ACTION_REQUIRED",
            "type": "string",
            "enum": [
              "PENDING",
              "STARTED",
              "ACTION_REQUIRED",
              "RESTRICTED",
              "IN_REVIEW",
              "REJECTED",
              "ACCEPT_PAYMENTS",
              "COMPLETED"
            ]
          },
          "acceptPayments": {
            "type": "boolean",
            "example": true
          },
          "receivePayout": {
            "type": "boolean",
            "example": false
          },
          "fields": {
            "example": [
              {
                "alias": "business.bankDetails",
                "status": "PENDING",
                "value": "John"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "onboardingStatus",
          "acceptPayments",
          "receivePayout",
          "fields"
        ]
      },
      "Currency": {
        "type": "string",
        "enum": ["USD", "GBP", "EUR"]
      },
      "UOM": {
        "type": "string",
        "enum": [
          "milliseconds",
          "seconds",
          "minutes",
          "hours",
          "days",
          "weeks",
          "months",
          "quarters",
          "years"
        ]
      },
      "PublicCreatePlanDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          },
          "group": {
            "type": "string",
            "maxLength": 100
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100
          },
          "currency": {
            "example": "GBP",
            "type": "string",
            "enum": ["USD", "GBP", "EUR"]
          },
          "period": {
            "type": "number",
            "minimum": 1,
            "exclusiveMinimum": true,
            "example": 12
          },
          "periodUOM": {
            "example": "months",
            "type": "string",
            "enum": [
              "milliseconds",
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months",
              "quarters",
              "years"
            ]
          },
          "setupFee": {
            "type": "object",
            "example": 0
          },
          "autoRenewal": {
            "type": "object",
            "example": false
          }
        },
        "required": [
          "name",
          "description",
          "group",
          "price",
          "currency",
          "period",
          "periodUOM"
        ]
      },
      "PayInPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier/PK"
          },
          "correlationId": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          },
          "group": {
            "type": "string",
            "maxLength": 100
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100
          },
          "currency": {
            "example": "GBP",
            "type": "string",
            "enum": ["USD", "GBP", "EUR"]
          },
          "period": {
            "type": "number",
            "minimum": 1,
            "exclusiveMinimum": true,
            "example": 12
          },
          "periodUOM": {
            "example": "months",
            "type": "string",
            "enum": [
              "milliseconds",
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months",
              "quarters",
              "years"
            ]
          },
          "trialPeriod": {
            "type": "number",
            "minimum": 1,
            "exclusiveMinimum": true,
            "example": 1
          },
          "trialPeriodUOM": {
            "example": "months",
            "type": "string",
            "enum": [
              "milliseconds",
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months",
              "quarters",
              "years"
            ]
          },
          "setupFee": {
            "type": "object",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 1,
            "default": 0
          },
          "isActive": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "featured": {
            "type": "boolean",
            "default": false
          },
          "autoRenewal": {
            "type": "boolean",
            "default": false
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "correlationId",
          "merchantId",
          "vendorId",
          "name",
          "description",
          "group",
          "price",
          "currency",
          "period",
          "periodUOM",
          "trialPeriodUOM",
          "isActive",
          "isArchived",
          "createdBy",
          "updatedBy"
        ]
      },
      "PublicUpdatePlanDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          }
        },
        "required": ["name", "description"]
      },
      "SubscriptionPaymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "internalComment": {
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "methodId": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "expMonth": {
            "type": "string"
          },
          "expYear": {
            "type": "string"
          },
          "initialTransactionId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "isArchived",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "internalComment",
          "deletedAt",
          "methodId",
          "methodType",
          "last4",
          "type",
          "expMonth",
          "expYear",
          "initialTransactionId"
        ]
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "trial",
          "pending_pause",
          "paused",
          "expired",
          "pending_cancellation",
          "cancelled",
          "action_required"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "internalComment": {
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "planId": {
            "type": "number"
          },
          "identifier": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "costumerId": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "isActive": {
                "type": "boolean"
              },
              "isArchived": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "createdBy": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "internalComment": {
                "type": "string"
              },
              "deletedAt": {
                "format": "date-time",
                "type": "string"
              },
              "methodId": {
                "type": "string"
              },
              "methodType": {
                "type": "string"
              },
              "last4": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "expMonth": {
                "type": "string"
              },
              "expYear": {
                "type": "string"
              },
              "initialTransactionId": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "isActive",
              "isArchived",
              "createdAt",
              "createdBy",
              "updatedAt",
              "updatedBy",
              "internalComment",
              "deletedAt",
              "methodId",
              "methodType",
              "last4",
              "type",
              "expMonth",
              "expYear",
              "initialTransactionId"
            ]
          },
          "paymentMethodId": {
            "type": "number"
          },
          "parent": {
            "$ref": "#/components/schemas/Subscription"
          },
          "price": {
            "type": "number"
          },
          "outstandingBalance": {
            "type": "number"
          },
          "setupFee": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "period": {
            "type": "number"
          },
          "periodUOM": {
            "example": "days",
            "type": "string",
            "enum": [
              "milliseconds",
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months",
              "quarters",
              "years"
            ]
          },
          "trialPeriod": {
            "type": "number"
          },
          "trialPeriodUOM": {
            "example": "days",
            "type": "string",
            "enum": [
              "milliseconds",
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months",
              "quarters",
              "years"
            ]
          },
          "trialStart": {
            "format": "date-time",
            "type": "string"
          },
          "trialEnd": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "example": "active",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "trial",
              "pending_pause",
              "paused",
              "expired",
              "pending_cancellation",
              "cancelled",
              "action_required"
            ]
          },
          "taxable": {
            "type": "boolean"
          },
          "taxProfileId": {
            "type": "string"
          },
          "nextBillingOn": {
            "format": "date-time",
            "type": "string"
          },
          "isInBillingRetry": {
            "type": "boolean"
          },
          "nextBillingRetryOn": {
            "format": "date-time",
            "type": "string"
          },
          "billingRetryCount": {
            "type": "number"
          },
          "autoRenewal": {
            "type": "boolean"
          },
          "startedOn": {
            "format": "date-time",
            "type": "string"
          },
          "endsOn": {
            "format": "date-time",
            "type": "string"
          },
          "pausedAt": {
            "format": "date-time",
            "type": "string"
          },
          "pauseExtension": {
            "type": "number"
          },
          "pauseExtensionUOM": {
            "example": "days",
            "type": "string",
            "enum": [
              "milliseconds",
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months",
              "quarters",
              "years"
            ]
          }
        },
        "required": [
          "id",
          "isActive",
          "isArchived",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "internalComment",
          "deletedAt",
          "planId",
          "identifier",
          "merchantId",
          "vendorId",
          "costumerId",
          "poNumber",
          "paymentMethod",
          "paymentMethodId",
          "parent",
          "price",
          "outstandingBalance",
          "setupFee",
          "currency",
          "period",
          "periodUOM",
          "trialPeriod",
          "trialPeriodUOM",
          "trialStart",
          "trialEnd",
          "status",
          "taxable",
          "taxProfileId",
          "nextBillingOn",
          "isInBillingRetry",
          "nextBillingRetryOn",
          "billingRetryCount",
          "autoRenewal",
          "startedOn",
          "endsOn",
          "pausedAt",
          "pauseExtension",
          "pauseExtensionUOM"
        ]
      },
      "PublicPauseSubscriptionDto": {
        "type": "object",
        "properties": {
          "startDatetime": {
            "type": "string",
            "example": "2021-01-01 15:30"
          },
          "endDatetime": {
            "type": "string",
            "example": "2021-01-10 12:30"
          }
        },
        "required": ["startDatetime", "endDatetime"]
      },
      "Item": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 256
          },
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100
          },
          "vendorId": {
            "type": "string"
          },
          "platformFee": {
            "type": "number",
            "description": "percentage fee",
            "minimum": 0,
            "maxLength": 100,
            "example": 10
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "fundingAmount": {
            "type": "number"
          }
        },
        "required": ["name", "amount"]
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        },
        "required": ["id"]
      },
      "Address": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "maxLength": 256
          },
          "lastName": {
            "type": "string",
            "maxLength": 256
          },
          "city": {
            "type": "string",
            "example": "London",
            "description": "City, district, suburb, town, or village."
          },
          "country": {
            "type": "string",
            "format": "ISO 3166-1 alpha-2",
            "example": "GB",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)."
          },
          "line1": {
            "type": "string",
            "example": "64 New Cavendish Street",
            "description": "Street, PO Box, or company name."
          },
          "line2": {
            "type": "string",
            "description": "Apartment, suite, unit, or building."
          },
          "postalCode": {
            "type": "string",
            "example": "W1G 8TB",
            "description": "ZIP or postal code."
          },
          "state": {
            "type": "string",
            "description": "State, county, province, or region."
          }
        },
        "required": ["city", "country", "line1", "postalCode"]
      },
      "DisablePaymentMethods": {
        "type": "object",
        "properties": {
          "disableCard": {
            "type": "boolean",
            "default": false,
            "example": false
          },
          "disablePayByBank": {
            "type": "boolean",
            "default": false,
            "example": false
          }
        }
      },
      "CreateCheckoutBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100,
            "multipleOf": 0.01
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "country": {
            "type": "string",
            "format": "ISO 3166-1 alpha-2",
            "example": "GB"
          },
          "vendorId": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "maxLength": 256
          },
          "lastName": {
            "type": "string",
            "maxLength": 256
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "format": "phone"
          },
          "orderId": {
            "type": "string",
            "maxLength": 256
          },
          "reference": {
            "type": "string",
            "maxLength": 256
          },
          "description": {
            "type": "string",
            "maxLength": 256
          },
          "successfulPaymentRedirect": {
            "type": "string",
            "maxLength": 256,
            "format": "uri",
            "example": "https://platform.com/redirect"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256
                },
                "amount": {
                  "type": "number",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "example": 100
                },
                "vendorId": {
                  "type": "string"
                },
                "platformFee": {
                  "type": "number",
                  "description": "percentage fee",
                  "minimum": 0,
                  "maxLength": 100,
                  "example": 10
                },
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "fundingAmount": {
                  "type": "number"
                }
              },
              "required": ["name", "amount"]
            }
          },
          "invoiceUrl": {
            "type": "string",
            "example": "http://yourcompany.com/invoice.pdf"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "example": "2020-10-13"
          },
          "vatAmount": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "plans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              },
              "required": ["id"]
            }
          },
          "billingAddress": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "maxLength": 256
              },
              "lastName": {
                "type": "string",
                "maxLength": 256
              },
              "city": {
                "type": "string",
                "example": "London",
                "description": "City, district, suburb, town, or village."
              },
              "country": {
                "type": "string",
                "format": "ISO 3166-1 alpha-2",
                "example": "GB",
                "description": "Two-letter country code (ISO 3166-1 alpha-2)."
              },
              "line1": {
                "type": "string",
                "example": "64 New Cavendish Street",
                "description": "Street, PO Box, or company name."
              },
              "line2": {
                "type": "string",
                "description": "Apartment, suite, unit, or building."
              },
              "postalCode": {
                "type": "string",
                "example": "W1G 8TB",
                "description": "ZIP or postal code."
              },
              "state": {
                "type": "string",
                "description": "State, county, province, or region."
              }
            },
            "required": ["city", "country", "line1", "postalCode"]
          },
          "shippingSameAsBilling": {
            "type": "boolean"
          },
          "shippingAddress": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "maxLength": 256
              },
              "lastName": {
                "type": "string",
                "maxLength": 256
              },
              "city": {
                "type": "string",
                "example": "London",
                "description": "City, district, suburb, town, or village."
              },
              "country": {
                "type": "string",
                "format": "ISO 3166-1 alpha-2",
                "example": "GB",
                "description": "Two-letter country code (ISO 3166-1 alpha-2)."
              },
              "line1": {
                "type": "string",
                "example": "64 New Cavendish Street",
                "description": "Street, PO Box, or company name."
              },
              "line2": {
                "type": "string",
                "description": "Apartment, suite, unit, or building."
              },
              "postalCode": {
                "type": "string",
                "example": "W1G 8TB",
                "description": "ZIP or postal code."
              },
              "state": {
                "type": "string",
                "description": "State, county, province, or region."
              }
            },
            "required": ["city", "country", "line1", "postalCode"]
          },
          "disablePaymentMethods": {
            "type": "object",
            "properties": {
              "disableCard": {
                "type": "boolean",
                "default": false,
                "example": false
              },
              "disablePayByBank": {
                "type": "boolean",
                "default": false,
                "example": false
              }
            }
          },
          "vposLinkId": {
            "type": "string",
            "maxLength": 256
          }
        },
        "required": ["amount", "currency", "country", "email"]
      },
      "CheckoutStatuses": {
        "type": "string",
        "enum": ["open", "pending", "unpaid", "expired", "paid", "declined"]
      },
      "Shopper": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["email"]
      },
      "CreatedCheckout": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100,
            "multipleOf": 0.01
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "country": {
            "type": "string",
            "format": "ISO 3166-1 alpha-2",
            "example": "GB"
          },
          "vendorId": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "maxLength": 256
          },
          "lastName": {
            "type": "string",
            "maxLength": 256
          },
          "phone": {
            "type": "string",
            "format": "phone"
          },
          "orderId": {
            "type": "string",
            "maxLength": 256
          },
          "reference": {
            "type": "string",
            "maxLength": 256
          },
          "description": {
            "type": "string",
            "maxLength": 256
          },
          "successfulPaymentRedirect": {
            "type": "string",
            "maxLength": 256,
            "format": "uri",
            "example": "https://platform.com/redirect"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256
                },
                "amount": {
                  "type": "number",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "example": 100
                },
                "vendorId": {
                  "type": "string"
                },
                "platformFee": {
                  "type": "number",
                  "description": "percentage fee",
                  "minimum": 0,
                  "maxLength": 100,
                  "example": 10
                },
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "fundingAmount": {
                  "type": "number"
                }
              },
              "required": ["name", "amount"]
            }
          },
          "invoiceUrl": {
            "type": "string",
            "example": "http://yourcompany.com/invoice.pdf"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "example": "2020-10-13"
          },
          "vatAmount": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "plans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              },
              "required": ["id"]
            }
          },
          "billingAddress": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "maxLength": 256
              },
              "lastName": {
                "type": "string",
                "maxLength": 256
              },
              "city": {
                "type": "string",
                "example": "London",
                "description": "City, district, suburb, town, or village."
              },
              "country": {
                "type": "string",
                "format": "ISO 3166-1 alpha-2",
                "example": "GB",
                "description": "Two-letter country code (ISO 3166-1 alpha-2)."
              },
              "line1": {
                "type": "string",
                "example": "64 New Cavendish Street",
                "description": "Street, PO Box, or company name."
              },
              "line2": {
                "type": "string",
                "description": "Apartment, suite, unit, or building."
              },
              "postalCode": {
                "type": "string",
                "example": "W1G 8TB",
                "description": "ZIP or postal code."
              },
              "state": {
                "type": "string",
                "description": "State, county, province, or region."
              }
            },
            "required": ["city", "country", "line1", "postalCode"]
          },
          "shippingSameAsBilling": {
            "type": "boolean"
          },
          "shippingAddress": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "maxLength": 256
              },
              "lastName": {
                "type": "string",
                "maxLength": 256
              },
              "city": {
                "type": "string",
                "example": "London",
                "description": "City, district, suburb, town, or village."
              },
              "country": {
                "type": "string",
                "format": "ISO 3166-1 alpha-2",
                "example": "GB",
                "description": "Two-letter country code (ISO 3166-1 alpha-2)."
              },
              "line1": {
                "type": "string",
                "example": "64 New Cavendish Street",
                "description": "Street, PO Box, or company name."
              },
              "line2": {
                "type": "string",
                "description": "Apartment, suite, unit, or building."
              },
              "postalCode": {
                "type": "string",
                "example": "W1G 8TB",
                "description": "ZIP or postal code."
              },
              "state": {
                "type": "string",
                "description": "State, county, province, or region."
              }
            },
            "required": ["city", "country", "line1", "postalCode"]
          },
          "disablePaymentMethods": {
            "type": "object",
            "properties": {
              "disableCard": {
                "type": "boolean",
                "default": false,
                "example": false
              },
              "disablePayByBank": {
                "type": "boolean",
                "default": false,
                "example": false
              }
            }
          },
          "vposLinkId": {
            "type": "string",
            "maxLength": 256
          },
          "_id": {
            "type": "string"
          },
          "status": {
            "default": "open",
            "type": "string",
            "enum": ["open", "pending", "unpaid", "expired", "paid", "declined"]
          },
          "sessionToken": {
            "type": "string"
          },
          "shopper": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": ["email"]
          },
          "shortLink": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "country",
          "_id",
          "status",
          "sessionToken",
          "shopper",
          "shortLink",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateTokenBody": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "format": "ISO 3166-1 alpha-2",
            "example": "GB"
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["country", "email"]
      },
      "CreatedToken": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          }
        },
        "required": ["sessionToken"]
      },
      "CreatePaymentOptionBody": {
        "type": "object",
        "properties": {
          "paymentOptionType": {
            "example": "Card",
            "type": "string",
            "enum": ["Card", "Alternative", "Bank Account"]
          },
          "cardAccount": {
            "type": "object",
            "properties": {}
          },
          "bankAccount": {
            "type": "object",
            "properties": {
              "accountType": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "countr": {
                "type": "string"
              },
              "bankCode": {
                "type": "string"
              },
              "accountNumber": {
                "type": "string"
              }
            }
          },
          "apmAccount": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        },
        "required": ["paymentOptionType"]
      },
      "Consumer": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "shippingAddress": {
            "type": "object"
          },
          "billingAddress": {
            "type": "object"
          }
        },
        "required": ["_id", "phone", "firstName", "lastName", "email"]
      },
      "Recurring": {
        "type": "object",
        "properties": {
          "isRecurring": {
            "type": "boolean"
          },
          "initialAuthorizationId": {
            "type": "string"
          }
        },
        "required": ["isRecurring"]
      },
      "CreatePayInBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100,
            "multipleOf": 0.01
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "orderId": {
            "type": "string",
            "maxLength": 256
          },
          "paymentOption": {
            "type": "object",
            "properties": {
              "paymentOptionType": {
                "example": "Card",
                "type": "string",
                "enum": ["Card", "Alternative", "Bank Account"]
              },
              "cardAccount": {
                "type": "object",
                "properties": {}
              },
              "bankAccount": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "countr": {
                    "type": "string"
                  },
                  "bankCode": {
                    "type": "string"
                  },
                  "accountNumber": {
                    "type": "string"
                  }
                }
              },
              "apmAccount": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "required": ["paymentOptionType"]
          },
          "paymentOptionId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256
                },
                "amount": {
                  "type": "number",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "example": 100
                },
                "vendorId": {
                  "type": "string"
                },
                "platformFee": {
                  "type": "number",
                  "description": "percentage fee",
                  "minimum": 0,
                  "maxLength": 100,
                  "example": 10
                },
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "fundingAmount": {
                  "type": "number"
                }
              },
              "required": ["name", "amount"]
            }
          },
          "recurring": {
            "type": "object",
            "properties": {
              "isRecurring": {
                "type": "boolean"
              },
              "initialAuthorizationId": {
                "type": "string"
              }
            },
            "required": ["isRecurring"]
          }
        },
        "required": ["amount", "currency", "consumer"]
      },
      "AuthorizationStatus": {
        "type": "string",
        "enum": ["Authorized", "Captured", "Voided", "Refunded"]
      },
      "TransactionStatus": {
        "type": "string",
        "enum": ["Approved", "Declined", "Error", "Pending"]
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "authorizationId": {
            "type": "string"
          },
          "authorizationStatus": {
            "example": "Captured",
            "type": "string",
            "enum": ["Authorized", "Captured", "Voided", "Refunded"]
          },
          "currency": {
            "example": "GBP",
            "type": "string",
            "enum": ["USD", "GBP", "EUR"]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256
                },
                "amount": {
                  "type": "number",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "example": 100
                },
                "vendorId": {
                  "type": "string"
                },
                "platformFee": {
                  "type": "number",
                  "description": "percentage fee",
                  "minimum": 0,
                  "maxLength": 100,
                  "example": 10
                },
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "fundingAmount": {
                  "type": "number"
                }
              },
              "required": ["name", "amount"]
            }
          },
          "orderId": {
            "type": "string"
          },
          "paymentOption": {
            "type": "object",
            "properties": {
              "paymentOptionType": {
                "example": "Card",
                "type": "string",
                "enum": ["Card", "Alternative", "Bank Account"]
              },
              "cardAccount": {
                "type": "object",
                "properties": {}
              },
              "bankAccount": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "countr": {
                    "type": "string"
                  },
                  "bankCode": {
                    "type": "string"
                  },
                  "accountNumber": {
                    "type": "string"
                  }
                }
              },
              "apmAccount": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "identityType": {
                "example": "vendor",
                "type": "string",
                "enum": ["consumer", "vendor", "platform"]
              },
              "identity": {
                "type": "string"
              },
              "paymentOptionId": {
                "type": "string"
              }
            },
            "required": [
              "paymentOptionType",
              "identityType",
              "identity",
              "paymentOptionId"
            ]
          },
          "status": {
            "example": "Approved",
            "type": "string",
            "enum": ["Approved", "Declined", "Error", "Pending"]
          },
          "amount": {
            "type": "number",
            "example": 100
          },
          "transactionId": {
            "type": "string"
          }
        },
        "required": [
          "authorizationId",
          "authorizationStatus",
          "currency",
          "status",
          "amount",
          "transactionId"
        ]
      },
      "AuthorizationCaptureBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100,
            "multipleOf": 0.01
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256
                },
                "amount": {
                  "type": "number",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "example": 100
                },
                "vendorId": {
                  "type": "string"
                },
                "platformFee": {
                  "type": "number",
                  "description": "percentage fee",
                  "minimum": 0,
                  "maxLength": 100,
                  "example": 10
                },
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "fundingAmount": {
                  "type": "number"
                }
              },
              "required": ["name", "amount"]
            }
          }
        },
        "required": ["amount"]
      },
      "AuthorizationOperationBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 100,
            "multipleOf": 0.01
          }
        },
        "required": ["amount"]
      },
      "AvailablePaymentMethods": {
        "type": "object",
        "properties": {}
      },
      "Validity": {
        "type": "string",
        "enum": ["valid", "invalid"]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "merchantId": {
            "type": "string"
          },
          "sellerId": {
            "type": "string"
          },
          "webhookName": {
            "type": "string",
            "example": "ewallet/create"
          },
          "validity": {
            "example": "valid",
            "type": "string",
            "enum": ["valid", "invalid"]
          },
          "email": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "merchantId",
          "sellerId",
          "webhookName",
          "validity",
          "email",
          "url"
        ]
      },
      "CreateWebhookBody": {
        "type": "object",
        "properties": {
          "webhookName": {
            "type": "string",
            "enum": [
              "authorization/update",
              "ewallet/create",
              "payout/update",
              "onboarding/update",
              "plan/create",
              "plan/update",
              "subscription/create",
              "subscription/update",
              "subscription/chargeSuccess",
              "subscription/chargeFailure",
              "ewalletTransaction/create",
              "notification/create"
            ],
            "example": "authorization/update"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "url": {
            "type": "string"
          }
        },
        "required": ["webhookName", "email", "url"]
      },
      "UpdateWebhookBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "validity": {
            "example": "valid",
            "type": "string",
            "enum": ["valid", "invalid"]
          }
        },
        "required": ["email", "url", "validity"]
      },
      "LinkStatus": {
        "type": "string",
        "enum": ["created", "opened", "disabled"]
      },
      "Link": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string"
          },
          "status": {
            "example": "created",
            "type": "string",
            "enum": ["created", "opened", "disabled"]
          },
          "vendorId": {
            "type": "string",
            "example": "5fba355e857efefdb5ae3cd1"
          },
          "views": {
            "example": ["onboarding"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "refreshUrl": {
            "type": "string"
          },
          "returnUrl": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-06-16T15:34:19.536Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-06-16T15:36:19.536Z"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "example": "2021-06-17T15:34:19.536Z"
          }
        },
        "required": ["uniqueId", "status", "vendorId", "views", "createdAt"]
      },
      "SendLinkPayload": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "platformName": {
            "type": "string"
          }
        },
        "required": ["type"]
      },
      "PublicCreateLinkDto": {
        "type": "object",
        "properties": {
          "views": {
            "example": ["onboarding"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["views"]
      },
      "VolumeReportResponse": {
        "type": "object",
        "properties": {
          "volumes": {
            "example": [
              {
                "amount": 100,
                "date": "1980-01-01"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "type": "number",
            "example": 100
          }
        },
        "required": ["volumes", "total"]
      },
      "RevenueReportResponse": {
        "type": "object",
        "properties": {
          "revenues": {
            "example": [
              {
                "amount": 100,
                "date": "1980-01-01"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "type": "number",
            "example": 100
          }
        },
        "required": ["revenues", "total"]
      },
      "BalanceReportResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "example": [
              {
                "id": "1",
                "merchantId": "111111111111",
                "sellerId": "111111111111",
                "currency": "GBP",
                "payableBalance": 100,
                "pendingBalance": 100,
                "reservedBalance": 100,
                "createdAt": "1980-01-01T00:00:00.000Z"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["balance"]
      },
      "VendorReportResponse": {
        "type": "object",
        "properties": {
          "vendors": {
            "example": [
              {
                "status": "CREATED",
                "count": 9,
                "percentage": 100
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overallConversion": {
            "type": "number",
            "example": 0.6
          }
        },
        "required": ["vendors", "overallConversion"]
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "eWalletId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "creditedVendorId": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "initialized",
              "pending",
              "collected",
              "sent",
              "completed",
              "failed",
              "canceled"
            ],
            "example": "collected",
            "default": "collected"
          },
          "merchantId": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          }
        },
        "required": [
          "eWalletId",
          "amount",
          "currency",
          "creditedVendorId",
          "status",
          "merchantId",
          "vendorId"
        ]
      },
      "CreateTransferBody": {
        "type": "object",
        "properties": {
          "eWalletId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "GBP", "EUR"],
            "example": "GBP",
            "default": "GBP"
          },
          "creditedVendorId": {
            "type": "string"
          }
        },
        "required": ["eWalletId", "amount", "currency", "creditedVendorId"]
      },
      "PaymentStatus": {
        "type": "string",
        "enum": ["Charged", "Settled", "PaidIntoBank"]
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "Auth",
          "Sale",
          "Auth3D",
          "Sale3D",
          "Settle",
          "Capture",
          "Void",
          "Refund",
          "Auth3D_Challange",
          "Init3D",
          "Funding",
          "Payout",
          "Transfer",
          "Chargeback",
          "Cancel Chargeback"
        ]
      },
      "ListNotification": {
        "type": "object",
        "properties": {
          "items": {
            "example": [
              {
                "id": "624c567dfcb8145744c7a881",
                "vendorId": "6384b75fc661567cd8b337b5",
                "merchantId": "6384b75fc66156798567898a",
                "group": "onboarding",
                "subject": "You have reached 50% of your limit for accepting payments.",
                "body": "You have reached 50% (750GBP) of your limit for accepting payments.\\nProvide additional details about your business in order to payout funds and lift any account limitations.",
                "message": "You have reached 50% of your limit for accepting payments, please complete the onboarding process",
                "actions": [
                  {
                    "text": "Call to action",
                    "payload": {
                      "action": "onboarding",
                      "method": "link"
                    }
                  }
                ],
                "status": "read",
                "importance": "low",
                "createdAt": "2022-12-04T14:41:46.410Z",
                "updatedAt": "2022-12-04T14:41:46.410Z"
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "total": {
            "type": "number",
            "example": 1
          }
        },
        "required": ["items", "total"]
      },
      "UpdateReadNotifications": {
        "type": "object",
        "properties": {
          "notificationIds": {
            "example": [52341, 56123, 123, 5232],
            "type": "array"
          }
        },
        "required": ["notificationIds"]
      },
      "NotificationSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "624c567dfcb8145744c7a881"
          },
          "vendorId": {
            "type": "string",
            "example": "6384b75fc661567cd8b337b5"
          },
          "merchantId": {
            "type": "string",
            "example": "6384b75fc66156798567898a"
          },
          "settings": {
            "type": "object",
            "example": {
              "numberShowNotification": 5,
              "textOpenFullView": "See all Notifications",
              "popupBubbleNotification": true,
              "popupBubbleNotificationTime": 30,
              "refreshInterval": 3600,
              "disable": {
                "byGroup": [],
                "byImportance": [],
                "allNotifications": false
              }
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "vendorId",
          "merchantId",
          "settings",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateVendorNotificationSettings": {
        "type": "object",
        "properties": {
          "disable": {
            "type": "object",
            "example": {
              "disable": {
                "byGroup": [],
                "byImportance": [],
                "allNotifications": false
              }
            }
          },
          "numberShowNotification": {
            "type": "number"
          },
          "popupBubbleNotification": {
            "type": "boolean"
          },
          "popupBubbleNotificationTime": {
            "type": "number"
          },
          "refreshInterval": {
            "type": "number"
          },
          "textOpenFullView": {
            "type": "string"
          }
        },
        "required": [
          "disable",
          "numberShowNotification",
          "popupBubbleNotification",
          "popupBubbleNotificationTime",
          "refreshInterval",
          "textOpenFullView"
        ]
      },
      "NotificationTemplateResponse": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "required": ["subject", "body"]
      },
      "ListInvoice": {
        "type": "object",
        "properties": {
          "items": {
            "example": [
              {
                "id": "6391fd42a38e34b15b118d9b",
                "vendorId": "6384b75fc661567cd8b337b5",
                "merchantId": "6384b75fc66156798567898a",
                "currency": "GBP",
                "totalAmount": 99.5,
                "reference": "INV-123456",
                "publicUrl": "http://yourcompany.com/invoice.pdf",
                "invoiceObject": {},
                "lineItems": [
                  {
                    "description": "line 1",
                    "unitPrice": 10.6,
                    "quantity": 3
                  },
                  {
                    "description": "line 2",
                    "unitPrice": 19.3,
                    "quantity": 1
                  }
                ],
                "customer": {
                  "id": "1234",
                  "email": "test@gmail.com",
                  "phone": "+447975777666"
                },
                "paymentStatus": "unpaid",
                "isRecurring": true,
                "subscriptionId": "12312312",
                "dueDate": "2022-12-04T08:55:28.544Z",
                "createdAt": "2022-12-04T08:55:28.544Z",
                "updatedAt": "2022-12-04T08:55:28.544Z"
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "total": {
            "example": [
              {
                "count": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          }
        },
        "required": ["items", "total"]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": ["email"]
      },
      "paymentStatus": {
        "type": "string",
        "enum": [
          "unpaid",
          "paid",
          "partially_paid",
          "refunded",
          "partially_refunded"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6391fd42a38e34b15b118d9b"
          },
          "vendorId": {
            "type": "string",
            "example": "6384b75fc661567cd8b337b5"
          },
          "merchantId": {
            "type": "string",
            "example": "6384b75fc66156798567898a"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "totalAmount": {
            "type": "number",
            "example": 99.5
          },
          "totalPaid": {
            "type": "number",
            "example": 99.5
          },
          "vatAmount": {
            "type": "number",
            "example": 19.9
          },
          "reference": {
            "type": "string",
            "example": "INV-123456"
          },
          "publicUrl": {
            "type": "string",
            "example": "http://yourcompany.com/invoice.pdf"
          },
          "lineItems": {
            "example": [
              {
                "description": "line 1",
                "unitPrice": 10.6,
                "quantity": 3
              },
              {
                "description": "line 2",
                "unitPrice": 19.3,
                "quantity": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "invoiceObject": {
            "type": "object",
            "description": "Raw Invoice Object",
            "example": {}
          },
          "isRecurring": {
            "type": "boolean",
            "example": false
          },
          "subscriptionId": {
            "type": "string"
          },
          "customer": {
            "example": {
              "id": "1234",
              "reference": "CUS-01",
              "email": "test@gmail.com",
              "phone": "+447975777666"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            ]
          },
          "paymentStatus": {
            "example": "unpaid",
            "type": "string",
            "enum": [
              "unpaid",
              "paid",
              "partially_paid",
              "refunded",
              "partially_refunded"
            ]
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "vendorId",
          "merchantId",
          "currency",
          "totalAmount",
          "totalPaid",
          "vatAmount",
          "reference",
          "publicUrl",
          "lineItems",
          "invoiceObject",
          "isRecurring",
          "customer",
          "paymentStatus",
          "dueDate",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateVendorInvoice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "totalAmount": {
            "type": "number",
            "example": 99.5
          },
          "totalPaid": {
            "type": "number",
            "example": 99.5
          },
          "reference": {
            "type": "string",
            "example": "INV-1234"
          },
          "vatAmount": {
            "type": "number",
            "example": 19.9
          },
          "publicUrl": {
            "type": "string",
            "example": "http://yourcompany.com/invoice.pdf"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "paymentStatus": {
            "example": "unpaid",
            "type": "string",
            "enum": [
              "unpaid",
              "paid",
              "partially_paid",
              "refunded",
              "partially_refunded"
            ]
          },
          "lineItems": {
            "example": [
              {
                "description": "line 1",
                "unitPrice": 10.6,
                "quantity": 3
              },
              {
                "description": "line 2",
                "unitPrice": 19.3,
                "quantity": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "invoiceObject": {
            "type": "object",
            "description": "Raw Invoice Object",
            "example": {}
          },
          "isRecurring": {
            "type": "boolean",
            "example": false
          },
          "subscriptionId": {
            "type": "string"
          },
          "batchId": {
            "type": "string",
            "example": "a90ab923-a80a-4b40-b29c-e83d94faa36c"
          },
          "customer": {
            "example": {
              "reference": "customer-ref-1",
              "id": "1234",
              "email": "test@gmail.com",
              "phone": "+447975777666"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            ]
          },
          "paymentMethods": {
            "example": ["directDebit"],
            "type": "array",
            "items": {
              "type": "array"
            }
          }
        },
        "required": [
          "currency",
          "totalAmount",
          "reference",
          "paymentStatus",
          "lineItems",
          "invoiceObject",
          "isRecurring",
          "customer"
        ]
      },
      "UpdateVendorInvoice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "totalAmount": {
            "type": "number",
            "example": 99.5
          },
          "totalPaid": {
            "type": "number",
            "example": 99.5
          },
          "vatAmount": {
            "type": "number",
            "example": 12.23
          },
          "publicUrl": {
            "type": "string",
            "example": "http://yourcompany.com/invoice.pdf"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "lineItems": {
            "example": [
              {
                "description": "line 1",
                "unitPrice": 10.6,
                "quantity": 3
              },
              {
                "description": "line 2",
                "unitPrice": 19.3,
                "quantity": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "invoiceObject": {
            "type": "object",
            "description": "Raw Invoice Object",
            "example": {}
          },
          "paymentStatus": {
            "example": "unpaid",
            "type": "string",
            "enum": [
              "unpaid",
              "paid",
              "partially_paid",
              "refunded",
              "partially_refunded"
            ]
          },
          "isRecurring": {
            "type": "boolean",
            "example": false
          },
          "subscriptionId": {
            "type": "string"
          },
          "batchId": {
            "type": "string",
            "example": "a90ab923-a80a-4b40-b29c-e83d94faa36c"
          },
          "customer": {
            "type": "object",
            "example": {
              "id": "1234",
              "email": "test@gmail.com",
              "phone": "+447975777666"
            }
          }
        }
      },
      "ConsumerCreatePayload": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "referenceConsumer": {
            "type": "object"
          }
        },
        "required": ["name", "email", "referenceConsumer"]
      },
      "IConsumerPayload": {
        "type": "object",
        "properties": {}
      },
      "MandateCreatePayload": {
        "type": "object",
        "properties": {
          "consumer": {
            "example": {
              "name": "John Doe",
              "email": "jdoe@mail.com",
              "reference": "123456789"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "createMandateLink": {
            "type": "boolean",
            "example": true
          }
        },
        "required": ["consumer", "createMandateLink"]
      },
      "MandateSendPayload": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "linkId": {
            "type": "string"
          }
        },
        "required": ["subject", "body", "linkId"]
      },
      "IConsumer": {
        "type": "object",
        "properties": {}
      },
      "IPaymentOption": {
        "type": "object",
        "properties": {}
      },
      "ICommitMandatePayload": {
        "type": "object",
        "properties": {
          "consumer": {
            "example": {
              "firstName": "John",
              "lastName": "Doe",
              "middleName": "A",
              "companyName": "Company",
              "address": {
                "formattedAddress": "2-20 Western Rd, London NW10 7LW, UK",
                "country": "GB",
                "city": "London",
                "state": "England",
                "postCode": "NW10 7LW"
              },
              "phone": "+44929929229"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "paymentOption": {
            "example": {
              "bankAccount": {
                "name": "John Doe",
                "bankCode": "200415",
                "accountNumber": "38290008"
              }
            },
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          }
        },
        "required": ["consumer", "paymentOption"]
      },
      "UpsertCheckoutConfigRequest": {
        "type": "object",
        "properties": {
          "customer": {
            "example": {
              "id": "1234",
              "reference": "CUS-01",
              "email": "test@gmail.com",
              "phone": "+447975777666"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            ]
          },
          "paymentMethods": {
            "type": "array",
            "example": ["directDebit"],
            "items": {
              "type": "string",
              "enum": ["apm", "bankTransfer", "creditCard", "directDebit"]
            }
          }
        },
        "required": ["customer", "paymentMethods"]
      }
    }
  },
  "paths": {
    "/authorize": {
      "post": {
        "operationId": "AuthController_authorize",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "master",
                        "viewer",
                        "developer",
                        "onboarding_read",
                        "onboarding_write",
                        "ewallet_read",
                        "websdk_access",
                        "payout_write",
                        "payout_read",
                        "checkout_create",
                        "link_read",
                        "link_write",
                        "public_config_read",
                        "notification_read",
                        "notification_write",
                        "config_read",
                        "login_access",
                        "direct_debit_write",
                        "direct_debit_read",
                        "consumer_public_access"
                      ]
                    }
                  },
                  "vendorId": {
                    "type": "string"
                  }
                },
                "required": ["scopes"]
              },
              "examples": {
                "onboarding-ui": {
                  "value": {
                    "scopes": ["onboarding_write"],
                    "vendorId": "string"
                  }
                },
                "ewallet-ui": {
                  "value": {
                    "scopes": [
                      "ewallet_read",
                      "payout_write",
                      "link_read",
                      "link_write"
                    ],
                    "vendorId": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "master",
                          "viewer",
                          "developer",
                          "onboarding_read",
                          "onboarding_write",
                          "ewallet_read",
                          "websdk_access",
                          "payout_write",
                          "payout_read",
                          "checkout_create",
                          "link_read",
                          "link_write",
                          "public_config_read",
                          "notification_read",
                          "notification_write",
                          "config_read",
                          "login_access",
                          "direct_debit_write",
                          "direct_debit_read",
                          "consumer_public_access"
                        ]
                      }
                    }
                  },
                  "required": ["accessToken", "expiresIn", "vendorId", "scopes"]
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "tags": ["Authentication"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors": {
      "post": {
        "operationId": "VendorController_createVendor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "businessName": {
                    "type": "string",
                    "example": "UNIPaaS"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "country": {
                    "type": "string",
                    "format": "ISO 3166-1 alpha-2",
                    "example": "GB"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+447911123456"
                  },
                  "birthDate": {
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "example": "1980-01-01"
                  },
                  "serviceDescription": {
                    "type": "string",
                    "example": "Service description"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://platform.com"
                  },
                  "category": {
                    "example": "FOOD_DELIVERY",
                    "type": "string",
                    "enum": [
                      "FOOD_DELIVERY",
                      "DIGITAL_GOODS",
                      "ONLINE_SERVICES",
                      "TRANSPORTATION",
                      "AGRICULTURAL_CO_OP",
                      "ARTIST_SUPPLY",
                      "MEMBERSHIP_CLUB",
                      "CATERERS",
                      "CONSTRUCTION_MATERIALS",
                      "ENGINEERING_AND_SURVEYING_SERVICES",
                      "HEALTH_AND_MEDICAL_SERVICES",
                      "TELECOMMUNICATION_SERVICES",
                      "INDUSTRIAL_SUPPLIES",
                      "MEDIA_ADVERTISING_SERVICES",
                      "UTILITIES",
                      "FURNITURE_AND_HOME_FURNISHINGS",
                      "PROFESSIONAL_SERVICES",
                      "MISC_AND_RETAIL_STORES",
                      "PERSONAL_SERVICES",
                      "WHOLESALE_CLUBS",
                      "MANAGEMENT",
                      "ARCHITECTURAL_SERVICES",
                      "GENERAL_CONTRACTORS",
                      "GROCERIES_AND_SUPERMARKETS",
                      "ONLINE_RETAIL"
                    ]
                  },
                  "type": {
                    "example": "individual",
                    "type": "string",
                    "enum": ["individual", "company"]
                  },
                  "createOnboardingLink": {
                    "type": "boolean",
                    "default": false,
                    "example": true
                  }
                },
                "required": ["firstName", "lastName", "email", "country"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "businessName": {
                      "type": "string",
                      "example": "UNIPaaS"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+447911123456"
                    },
                    "birthDate": {
                      "type": "string",
                      "format": "YYYY-MM-DD",
                      "example": "1980-01-01"
                    },
                    "serviceDescription": {
                      "type": "string",
                      "example": "Service description"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://platform.com"
                    },
                    "category": {
                      "example": "FOOD_DELIVERY",
                      "type": "string",
                      "enum": [
                        "FOOD_DELIVERY",
                        "DIGITAL_GOODS",
                        "ONLINE_SERVICES",
                        "TRANSPORTATION",
                        "AGRICULTURAL_CO_OP",
                        "ARTIST_SUPPLY",
                        "MEMBERSHIP_CLUB",
                        "CATERERS",
                        "CONSTRUCTION_MATERIALS",
                        "ENGINEERING_AND_SURVEYING_SERVICES",
                        "HEALTH_AND_MEDICAL_SERVICES",
                        "TELECOMMUNICATION_SERVICES",
                        "INDUSTRIAL_SUPPLIES",
                        "MEDIA_ADVERTISING_SERVICES",
                        "UTILITIES",
                        "FURNITURE_AND_HOME_FURNISHINGS",
                        "PROFESSIONAL_SERVICES",
                        "MISC_AND_RETAIL_STORES",
                        "PERSONAL_SERVICES",
                        "WHOLESALE_CLUBS",
                        "MANAGEMENT",
                        "ARCHITECTURAL_SERVICES",
                        "GENERAL_CONTRACTORS",
                        "GROCERIES_AND_SUPERMARKETS",
                        "ONLINE_RETAIL"
                      ]
                    },
                    "type": {
                      "example": "individual",
                      "type": "string",
                      "enum": ["individual", "company"]
                    },
                    "createOnboardingLink": {
                      "type": "boolean",
                      "default": false,
                      "example": true
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "acceptPayments": {
                      "type": "boolean"
                    },
                    "receivePayout": {
                      "type": "boolean"
                    },
                    "onboardingLink": {
                      "type": "string"
                    }
                  },
                  "required": ["email", "name"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorController_getAllVendor",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "businessName": {
                        "type": "string",
                        "example": "UNIPaaS"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+447911123456"
                      },
                      "birthDate": {
                        "type": "string",
                        "format": "YYYY-MM-DD",
                        "example": "1980-01-01"
                      },
                      "serviceDescription": {
                        "type": "string",
                        "example": "Service description"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://platform.com"
                      },
                      "category": {
                        "example": "FOOD_DELIVERY",
                        "type": "string",
                        "enum": [
                          "FOOD_DELIVERY",
                          "DIGITAL_GOODS",
                          "ONLINE_SERVICES",
                          "TRANSPORTATION",
                          "AGRICULTURAL_CO_OP",
                          "ARTIST_SUPPLY",
                          "MEMBERSHIP_CLUB",
                          "CATERERS",
                          "CONSTRUCTION_MATERIALS",
                          "ENGINEERING_AND_SURVEYING_SERVICES",
                          "HEALTH_AND_MEDICAL_SERVICES",
                          "TELECOMMUNICATION_SERVICES",
                          "INDUSTRIAL_SUPPLIES",
                          "MEDIA_ADVERTISING_SERVICES",
                          "UTILITIES",
                          "FURNITURE_AND_HOME_FURNISHINGS",
                          "PROFESSIONAL_SERVICES",
                          "MISC_AND_RETAIL_STORES",
                          "PERSONAL_SERVICES",
                          "WHOLESALE_CLUBS",
                          "MANAGEMENT",
                          "ARCHITECTURAL_SERVICES",
                          "GENERAL_CONTRACTORS",
                          "GROCERIES_AND_SUPERMARKETS",
                          "ONLINE_RETAIL"
                        ]
                      },
                      "type": {
                        "example": "individual",
                        "type": "string",
                        "enum": ["individual", "company"]
                      },
                      "createOnboardingLink": {
                        "type": "boolean",
                        "default": false,
                        "example": true
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "acceptPayments": {
                        "type": "boolean"
                      },
                      "receivePayout": {
                        "type": "boolean"
                      },
                      "onboardingLink": {
                        "type": "string"
                      }
                    },
                    "required": ["email", "name"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}": {
      "get": {
        "operationId": "VendorController_getVendorById",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "businessName": {
                      "type": "string",
                      "example": "UNIPaaS"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+447911123456"
                    },
                    "birthDate": {
                      "type": "string",
                      "format": "YYYY-MM-DD",
                      "example": "1980-01-01"
                    },
                    "serviceDescription": {
                      "type": "string",
                      "example": "Service description"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://platform.com"
                    },
                    "category": {
                      "example": "FOOD_DELIVERY",
                      "type": "string",
                      "enum": [
                        "FOOD_DELIVERY",
                        "DIGITAL_GOODS",
                        "ONLINE_SERVICES",
                        "TRANSPORTATION",
                        "AGRICULTURAL_CO_OP",
                        "ARTIST_SUPPLY",
                        "MEMBERSHIP_CLUB",
                        "CATERERS",
                        "CONSTRUCTION_MATERIALS",
                        "ENGINEERING_AND_SURVEYING_SERVICES",
                        "HEALTH_AND_MEDICAL_SERVICES",
                        "TELECOMMUNICATION_SERVICES",
                        "INDUSTRIAL_SUPPLIES",
                        "MEDIA_ADVERTISING_SERVICES",
                        "UTILITIES",
                        "FURNITURE_AND_HOME_FURNISHINGS",
                        "PROFESSIONAL_SERVICES",
                        "MISC_AND_RETAIL_STORES",
                        "PERSONAL_SERVICES",
                        "WHOLESALE_CLUBS",
                        "MANAGEMENT",
                        "ARCHITECTURAL_SERVICES",
                        "GENERAL_CONTRACTORS",
                        "GROCERIES_AND_SUPERMARKETS",
                        "ONLINE_RETAIL"
                      ]
                    },
                    "type": {
                      "example": "individual",
                      "type": "string",
                      "enum": ["individual", "company"]
                    },
                    "createOnboardingLink": {
                      "type": "boolean",
                      "default": false,
                      "example": true
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "acceptPayments": {
                      "type": "boolean"
                    },
                    "receivePayout": {
                      "type": "boolean"
                    },
                    "onboardingLink": {
                      "type": "string"
                    }
                  },
                  "required": ["email", "name"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/settings/descriptor": {
      "patch": {
        "operationId": "VendorController_updateDescriptor",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "descriptor": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "descriptor": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/public-settings": {
      "get": {
        "operationId": "VendorController_getPublicConfiguration",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "platformName": {
                        "type": "string",
                        "example": "X-Pay"
                      },
                      "pages": {
                        "type": "object",
                        "example": {
                          "promoPageUrl": "https://www.google.co.il/",
                          "feesPageUrl": "https://www.google.co.il/",
                          "payPortalUrl": "https://www.google.co.il/"
                        }
                      },
                      "components": {
                        "example": {
                          "payPortal": {
                            "payments": true
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {}
                          }
                        ]
                      }
                    },
                    "required": ["platformName", "pages", "components"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/ewallets": {
      "post": {
        "operationId": "VendorEwalletController_createEwallet",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "example": "GBP",
                    "default": "GBP"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["currency", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "pendingBalance": {
                      "type": "number"
                    },
                    "payableBalance": {
                      "type": "number"
                    },
                    "reserveBalance": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "merchantName",
                    "merchantId",
                    "vendorId",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorEwalletController_getEwallet",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "pendingBalance": {
                        "type": "number"
                      },
                      "payableBalance": {
                        "type": "number"
                      },
                      "reserveBalance": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "merchantName": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "merchantName",
                      "merchantId",
                      "vendorId",
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/ewallets/transactions": {
      "get": {
        "operationId": "VendorEwalletController_getEwalletTransactionsByVendorId",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"],
                        "example": "GBP",
                        "default": "GBP"
                      },
                      "pendingBalance": {
                        "type": "number"
                      },
                      "payableBalance": {
                        "type": "number"
                      },
                      "reserveBalance": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "vendorId": {
                        "type": "number"
                      },
                      "fees": {
                        "type": "number"
                      },
                      "transactionId": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "transactionType": {
                        "type": "string",
                        "enum": [
                          "Auth",
                          "Sale",
                          "Auth3D",
                          "Sale3D",
                          "Settle",
                          "Void",
                          "Refund",
                          "Auth3D_Challange",
                          "Init3D"
                        ],
                        "default": "Sale"
                      },
                      "transactionResult": {
                        "type": "string"
                      },
                      "reconciled": {
                        "type": "string",
                        "enum": ["true", "false", "irrelevant", "unknown"],
                        "default": "true"
                      },
                      "eWalletId": {
                        "type": "string"
                      },
                      "netAmount": {
                        "type": "number"
                      },
                      "pendingAmount": {
                        "type": "number"
                      },
                      "payableAmount": {
                        "type": "number"
                      },
                      "reservedAmount": {
                        "type": "number"
                      },
                      "payoutId": {
                        "type": "number"
                      },
                      "originalAmount": {
                        "type": "number"
                      },
                      "brand": {
                        "type": "string"
                      },
                      "issuerCountry": {
                        "type": "string",
                        "default": "GB"
                      },
                      "authorizationId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "transactionType",
                      "reconciled",
                      "issuerCountry"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/ewallets/{ewalletId}/transactions": {
      "get": {
        "operationId": "VendorEwalletController_getEwalletTransactions",
        "parameters": [
          {
            "name": "ewalletId",
            "required": true,
            "in": "path",
            "schema": {}
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"],
                        "example": "GBP",
                        "default": "GBP"
                      },
                      "pendingBalance": {
                        "type": "number"
                      },
                      "payableBalance": {
                        "type": "number"
                      },
                      "reserveBalance": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "vendorId": {
                        "type": "number"
                      },
                      "fees": {
                        "type": "number"
                      },
                      "transactionId": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "transactionType": {
                        "type": "string",
                        "enum": [
                          "Auth",
                          "Sale",
                          "Auth3D",
                          "Sale3D",
                          "Settle",
                          "Void",
                          "Refund",
                          "Auth3D_Challange",
                          "Init3D"
                        ],
                        "default": "Sale"
                      },
                      "transactionResult": {
                        "type": "string"
                      },
                      "reconciled": {
                        "type": "string",
                        "enum": ["true", "false", "irrelevant", "unknown"],
                        "default": "true"
                      },
                      "eWalletId": {
                        "type": "string"
                      },
                      "netAmount": {
                        "type": "number"
                      },
                      "pendingAmount": {
                        "type": "number"
                      },
                      "payableAmount": {
                        "type": "number"
                      },
                      "reservedAmount": {
                        "type": "number"
                      },
                      "payoutId": {
                        "type": "number"
                      },
                      "originalAmount": {
                        "type": "number"
                      },
                      "brand": {
                        "type": "string"
                      },
                      "issuerCountry": {
                        "type": "string",
                        "default": "GB"
                      },
                      "authorizationId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "transactionType",
                      "reconciled",
                      "issuerCountry"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payouts": {
      "get": {
        "operationId": "VendorPayoutController_getPayouts",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eWalletId": {
                        "type": "string"
                      },
                      "payoutOptionId": {
                        "type": "string"
                      },
                      "payoutMethod": {
                        "default": "bank_transfer",
                        "type": "string",
                        "enum": [
                          "bank_transfer",
                          "visa_direct",
                          "internal_transfer"
                        ]
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"],
                        "default": "GBP"
                      },
                      "id": {
                        "type": "number"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "status": {
                        "default": "pending",
                        "type": "string",
                        "enum": [
                          "initialized",
                          "pending",
                          "sent",
                          "completed",
                          "failed",
                          "canceled",
                          "declined",
                          "unknown",
                          "in_review"
                        ]
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "eWalletId",
                      "payoutOptionId",
                      "payoutMethod",
                      "currency",
                      "id",
                      "amount",
                      "status",
                      "merchantId",
                      "vendorId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "VendorPayoutController_createPayout",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eWalletId": {
                    "type": "string"
                  },
                  "payoutOptionId": {
                    "type": "string"
                  },
                  "payoutMethod": {
                    "default": "bank_transfer",
                    "type": "string",
                    "enum": [
                      "bank_transfer",
                      "visa_direct",
                      "internal_transfer"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "default": "GBP"
                  }
                },
                "required": [
                  "eWalletId",
                  "payoutOptionId",
                  "payoutMethod",
                  "currency"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payouts/configuration": {
      "get": {
        "operationId": "VendorPayoutController_getVendorPayoutConfiguration",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "frequency": {
                      "example": "daily",
                      "type": "string",
                      "enum": ["daily", "weekly", "monthly"]
                    },
                    "id": {
                      "type": "number"
                    },
                    "merchant_id": {
                      "type": "string"
                    }
                  },
                  "required": ["enabled", "frequency", "id", "merchant_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "VendorPayoutController_deleteVendorPayoutConfiguration",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "frequency": {
                      "example": "daily",
                      "type": "string",
                      "enum": ["daily", "weekly", "monthly"]
                    },
                    "id": {
                      "type": "number"
                    },
                    "merchant_id": {
                      "type": "string"
                    }
                  },
                  "required": ["enabled", "frequency", "id", "merchant_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "VendorPayoutController_setVendorPayoutConfiguration",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "frequency": {
                    "example": "daily",
                    "type": "string",
                    "enum": ["daily", "weekly", "monthly"]
                  }
                },
                "required": ["enabled", "frequency"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "frequency": {
                      "example": "daily",
                      "type": "string",
                      "enum": ["daily", "weekly", "monthly"]
                    },
                    "id": {
                      "type": "number"
                    },
                    "merchant_id": {
                      "type": "string"
                    }
                  },
                  "required": ["enabled", "frequency", "id", "merchant_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payouts/{payoutId}/commit": {
      "post": {
        "operationId": "VendorPayoutController_commitPayout",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          },
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payouts/{payoutId}/cancel": {
      "post": {
        "operationId": "VendorPayoutController_cancelPayout",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          },
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payouts/{payoutId}/drillthrough": {
      "get": {
        "operationId": "VendorPayoutController_drillThroughPayout",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          },
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payout-options": {
      "get": {
        "operationId": "VendorPayoutOptionsController_getPayoutOptions",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "payoutOptionType": {
                        "example": "Card",
                        "type": "string",
                        "enum": ["Card", "Alternative", "Bank Account"]
                      },
                      "cardAccount": {
                        "type": "object",
                        "properties": {}
                      },
                      "bankAccount": {
                        "type": "object",
                        "properties": {
                          "accountType": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countr": {
                            "type": "string"
                          },
                          "bankCode": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string"
                          }
                        }
                      },
                      "apmAccount": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": ["payoutOptionType"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payment-options/available": {
      "get": {
        "operationId": "VendorPaymentOptionsController_getAvailablePaymentOptions",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payment-options": {
      "get": {
        "operationId": "VendorPaymentOptionsController_getPaymentOptions",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "paymentOptionType": {
                        "example": "Card",
                        "type": "string",
                        "enum": ["Card", "Alternative", "Bank Account"]
                      },
                      "cardAccount": {
                        "type": "object",
                        "properties": {}
                      },
                      "bankAccount": {
                        "type": "object",
                        "properties": {
                          "accountType": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countr": {
                            "type": "string"
                          },
                          "bankCode": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string"
                          }
                        }
                      },
                      "apmAccount": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "identityType": {
                        "example": "vendor",
                        "type": "string",
                        "enum": ["consumer", "vendor", "platform"]
                      },
                      "identity": {
                        "type": "string"
                      },
                      "paymentOptionId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "paymentOptionType",
                      "identityType",
                      "identity",
                      "paymentOptionId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ewallets": {
      "post": {
        "operationId": "EwalletController_createEwallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "example": "GBP",
                    "default": "GBP"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["currency", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "pendingBalance": {
                      "type": "number"
                    },
                    "payableBalance": {
                      "type": "number"
                    },
                    "reserveBalance": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "merchantName",
                    "merchantId",
                    "vendorId",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["eWallet"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "EwalletController_getEwallet",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "pendingBalance": {
                        "type": "number"
                      },
                      "payableBalance": {
                        "type": "number"
                      },
                      "reserveBalance": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "merchantName": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "merchantName",
                      "merchantId",
                      "vendorId",
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["eWallet"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ewallets/{ewalletId}": {
      "get": {
        "operationId": "EwalletController_getEwalletById",
        "parameters": [
          {
            "name": "ewalletId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "pendingBalance": {
                        "type": "number"
                      },
                      "payableBalance": {
                        "type": "number"
                      },
                      "reserveBalance": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "merchantName": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "merchantName",
                      "merchantId",
                      "vendorId",
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["eWallet"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ewallets/{ewalletId}/transactions": {
      "get": {
        "operationId": "EwalletController_getEwalletTransactions",
        "parameters": [
          {
            "name": "ewalletId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"],
                        "example": "GBP",
                        "default": "GBP"
                      },
                      "pendingBalance": {
                        "type": "number"
                      },
                      "payableBalance": {
                        "type": "number"
                      },
                      "reserveBalance": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "vendorId": {
                        "type": "number"
                      },
                      "fees": {
                        "type": "number"
                      },
                      "transactionId": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "transactionType": {
                        "type": "string",
                        "enum": [
                          "Auth",
                          "Sale",
                          "Auth3D",
                          "Sale3D",
                          "Settle",
                          "Void",
                          "Refund",
                          "Auth3D_Challange",
                          "Init3D"
                        ],
                        "default": "Sale"
                      },
                      "transactionResult": {
                        "type": "string"
                      },
                      "reconciled": {
                        "type": "string",
                        "enum": ["true", "false", "irrelevant", "unknown"],
                        "default": "true"
                      },
                      "eWalletId": {
                        "type": "string"
                      },
                      "netAmount": {
                        "type": "number"
                      },
                      "pendingAmount": {
                        "type": "number"
                      },
                      "payableAmount": {
                        "type": "number"
                      },
                      "reservedAmount": {
                        "type": "number"
                      },
                      "payoutId": {
                        "type": "number"
                      },
                      "originalAmount": {
                        "type": "number"
                      },
                      "brand": {
                        "type": "string"
                      },
                      "issuerCountry": {
                        "type": "string",
                        "default": "GB"
                      },
                      "authorizationId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "transactionType",
                      "reconciled",
                      "issuerCountry"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["eWallet"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payment-options": {
      "get": {
        "operationId": "PaymentOptionsController_getPaymentOptions",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "paymentOptionType": {
                        "example": "Card",
                        "type": "string",
                        "enum": ["Card", "Alternative", "Bank Account"]
                      },
                      "cardAccount": {
                        "type": "object",
                        "properties": {}
                      },
                      "bankAccount": {
                        "type": "object",
                        "properties": {
                          "accountType": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countr": {
                            "type": "string"
                          },
                          "bankCode": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string"
                          }
                        }
                      },
                      "apmAccount": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "identityType": {
                        "example": "vendor",
                        "type": "string",
                        "enum": ["consumer", "vendor", "platform"]
                      },
                      "identity": {
                        "type": "string"
                      },
                      "paymentOptionId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "paymentOptionType",
                      "identityType",
                      "identity",
                      "paymentOptionId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payment Option"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payouts": {
      "get": {
        "operationId": "PayoutController_getPayouts",
        "parameters": [
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "example": "GBP",
            "schema": {}
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "initialized",
                  "pending",
                  "sent",
                  "completed",
                  "failed",
                  "canceled",
                  "declined",
                  "unknown",
                  "in_review"
                ]
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "example": "DESC",
            "schema": {}
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 3,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eWalletId": {
                        "type": "string"
                      },
                      "payoutOptionId": {
                        "type": "string"
                      },
                      "payoutMethod": {
                        "default": "bank_transfer",
                        "type": "string",
                        "enum": [
                          "bank_transfer",
                          "visa_direct",
                          "internal_transfer"
                        ]
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"],
                        "default": "GBP"
                      },
                      "id": {
                        "type": "number"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "status": {
                        "default": "pending",
                        "type": "string",
                        "enum": [
                          "initialized",
                          "pending",
                          "sent",
                          "completed",
                          "failed",
                          "canceled",
                          "declined",
                          "unknown",
                          "in_review"
                        ]
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "eWalletId",
                      "payoutOptionId",
                      "payoutMethod",
                      "currency",
                      "id",
                      "amount",
                      "status",
                      "merchantId",
                      "vendorId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PayoutController_createPayout",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eWalletId": {
                    "type": "string"
                  },
                  "payoutOptionId": {
                    "type": "string"
                  },
                  "payoutMethod": {
                    "default": "bank_transfer",
                    "type": "string",
                    "enum": [
                      "bank_transfer",
                      "visa_direct",
                      "internal_transfer"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "default": "GBP"
                  }
                },
                "required": [
                  "eWalletId",
                  "payoutOptionId",
                  "payoutMethod",
                  "currency"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payouts/{payoutId}/commit": {
      "post": {
        "operationId": "PayoutController_commitPayout",
        "parameters": [
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payouts/{payoutId}/cancel": {
      "post": {
        "operationId": "PayoutController_cancelPayout",
        "parameters": [
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payouts/configuration": {
      "get": {
        "operationId": "PayoutController_getPayoutConfiguration",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "frequency": {
                      "example": "daily",
                      "type": "string",
                      "enum": ["daily", "weekly", "monthly"]
                    },
                    "id": {
                      "type": "number"
                    },
                    "merchant_id": {
                      "type": "string"
                    }
                  },
                  "required": ["enabled", "frequency", "id", "merchant_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PayoutController_deletePayoutConfiguration",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "frequency": {
                      "example": "daily",
                      "type": "string",
                      "enum": ["daily", "weekly", "monthly"]
                    },
                    "id": {
                      "type": "number"
                    },
                    "merchant_id": {
                      "type": "string"
                    }
                  },
                  "required": ["enabled", "frequency", "id", "merchant_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PayoutController_setPayoutConfiguration",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "frequency": {
                    "example": "daily",
                    "type": "string",
                    "enum": ["daily", "weekly", "monthly"]
                  }
                },
                "required": ["enabled", "frequency"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "frequency": {
                      "example": "daily",
                      "type": "string",
                      "enum": ["daily", "weekly", "monthly"]
                    },
                    "id": {
                      "type": "number"
                    },
                    "merchant_id": {
                      "type": "string"
                    }
                  },
                  "required": ["enabled", "frequency", "id", "merchant_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payouts/{payoutId}": {
      "get": {
        "operationId": "PayoutController_getPayoutById",
        "parameters": [
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payouts/{payoutId}/drillthrough": {
      "get": {
        "operationId": "PayoutController_drillThroughPayout",
        "parameters": [
          {
            "name": "payoutId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "payoutOptionId": {
                      "type": "string"
                    },
                    "payoutMethod": {
                      "default": "bank_transfer",
                      "type": "string",
                      "enum": [
                        "bank_transfer",
                        "visa_direct",
                        "internal_transfer"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "default": "GBP"
                    },
                    "id": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "default": "pending",
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "sent",
                        "completed",
                        "failed",
                        "canceled",
                        "declined",
                        "unknown",
                        "in_review"
                      ]
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "payoutOptionId",
                    "payoutMethod",
                    "currency",
                    "id",
                    "amount",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/onboarding/file": {
      "post": {
        "operationId": "OnboardingController_postAndSubmitFile",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "alias": {
                    "type": "string",
                    "example": "individual.passport"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PENDING",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "PAY_IN_SUCCESS",
                            "PAY_IN_IN_REVIEW",
                            "PAY_OUT_IN_REVIEW",
                            "PAY_OUT_SUCCESS",
                            "REJECTED"
                          ]
                        },
                        "onboardingStatus": {
                          "example": "RESTRICTED",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "acceptPayments": {
                          "type": "boolean",
                          "example": true
                        },
                        "receivePayout": {
                          "type": "boolean",
                          "example": true
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "individual.firstName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "John",
                              "required": true
                            },
                            {
                              "alias": "individual.lastName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Doe",
                              "required": true
                            },
                            {
                              "alias": "individual.birthDate",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "1991-04-02",
                              "required": true
                            },
                            {
                              "alias": "individual.email",
                              "status": "COMPLETED",
                              "value": "messi@example.com",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.phone",
                              "status": "COMPLETED",
                              "value": "+447911123456",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.address",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": {
                                "country": "GB",
                                "city": "London",
                                "state": "England",
                                "houseNumber": "64",
                                "street": "New Cavendish Street",
                                "postCode": "SW1W 0NY"
                              },
                              "required": true
                            },
                            {
                              "alias": "business.url",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "example.com",
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "FOOD_DELIVERY",
                              "required": true
                            },
                            {
                              "alias": "business.serviceDescription",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "example.com",
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n<ul>\n<li>Please note you can accept payments up to a <strong>total amount of £1500</strong> for a <strong>limited period of 30 days</strong>, while we review and approve your account. </li>\n<li>You be may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of your account and/or a refund of the amounts received. UNIPaaS reserves the right to approve or reject my application accordingly. </li>\n</ul>\n\n\n<br />\n<br />\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n<p>I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/{platformId}/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound by it; </p>\n<p>I consent to the sharing of my documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided by UNIPaaS as stated in the Terms. </p>\n<p>I confirm that I will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>, I understand that breaching this term will lead to immediate termination of my merchant account.</p>\n                ",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "status": "COMPLETED",
                              "value": {
                                "accepted": true,
                                "ipAddress": "1.1.1.1",
                                "publicUrl": "https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/vendors/{vendorId}/signature/{signatureId}/msa.pdf"
                              },
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Doe",
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "status": "COMPLETED",
                              "value": "38290008",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "status": "COMPLETED",
                              "value": "200415",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "individual.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "business.bankStatement",
                              "label": "Upload a copy of your bank statement",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "status",
                        "onboardingStatus",
                        "acceptPayments",
                        "receivePayout",
                        "fields"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PAY_OUT_SUCCESS",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "onboardingStatus": {
                          "example": "RESTRICTED",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "acceptPayments": {
                          "type": "boolean",
                          "example": true
                        },
                        "receivePayout": {
                          "type": "boolean",
                          "example": true
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "company.registrationNumber",
                              "type": "TEXT_FIELD",
                              "label": "Company registration number",
                              "editable": true,
                              "rules": [
                                {
                                  "pattern": "^\\d{8}$",
                                  "message": "Registration Number must be exactly 8 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.name",
                              "status": "COMPLETED",
                              "value": "Bitter Sweet",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.address",
                              "label": "Corporate address",
                              "editable": true,
                              "tooltip": "Please enter a full address, including house number or name",
                              "type": "ADDRESS_INPUT",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.email",
                              "status": "COMPLETED",
                              "value": "messi@example.com",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.phone",
                              "type": "PHONE",
                              "label": "Phone Number",
                              "rules": [
                                {
                                  "pattern": "^\\+[0-9]{0,14}$",
                                  "message": "Invalid Phone number"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.vat",
                              "type": "TEXT_FIELD",
                              "label": "VAT Number (optional)",
                              "editable": true,
                              "required": false,
                              "rules": [
                                {
                                  "pattern": "^\\d{9}$",
                                  "message": "VAT Number must be exactly 9 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null
                            },
                            {
                              "alias": "business.url",
                              "type": "TEXT_FIELD",
                              "label": "Commercial website URL",
                              "editable": true,
                              "tooltip": "This should be the website you use to sell your goods or services.\nIt can be your business profile page hosted by your platform’s website",
                              "comment": "Please ensure that you have added the website's URL that you are planning to use to sell goods and services.",
                              "rules": [
                                {
                                  "pattern": "^.+..+$",
                                  "message": "Invalid Website URL"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "FOOD_DELIVERY",
                              "required": true
                            },
                            {
                              "alias": "representative.firstName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Lionel",
                              "required": true
                            },
                            {
                              "alias": "representative.lastName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Messi",
                              "required": true
                            },
                            {
                              "alias": "representative.birthDate",
                              "type": "DATE_PICKER",
                              "label": "Date of Birth",
                              "min": "1902-02-17",
                              "max": "2004-02-17",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.address",
                              "type": "ADDRESS_INPUT",
                              "label": "Home address",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.nationality",
                              "type": "SELECT",
                              "label": "Nationality",
                              "items": [
                                "Afghan",
                                "Albanian",
                                "Algerian",
                                "Argentinian",
                                "Australian",
                                "Austrian",
                                "Bangladeshi",
                                "Belgian",
                                "Bolivian",
                                "Batswana",
                                "Brazilian",
                                "Bulgarian",
                                "Cambodian",
                                "Cameroonian",
                                "Canadian",
                                "Chilean",
                                "Chinese",
                                "Colombian",
                                "Costa Rican",
                                "Croatian",
                                "Cuban",
                                "Czech",
                                "Danish",
                                "Dominican",
                                "Ecuadorian",
                                "Egyptian",
                                "Salvadorian",
                                "English",
                                "Estonian",
                                "Ethiopian",
                                "Fijian",
                                "Finnish",
                                "French",
                                "German",
                                "Ghanaian",
                                "Greek",
                                "Guatemalan",
                                "Haitian",
                                "Honduran",
                                "Hungarian",
                                "Icelandic",
                                "Indian",
                                "Indonesian",
                                "Iranian",
                                "Iraqi",
                                "Irish",
                                "Israeli",
                                "Italian",
                                "Jamaican",
                                "Japanese",
                                "Jordanian",
                                "Kenyan",
                                "Kuwaiti",
                                "Lao",
                                "Latvian",
                                "Lebanese",
                                "Libyan",
                                "Lithuanian",
                                "Malagasy",
                                "Malaysian",
                                "Malian",
                                "Maltese",
                                "Mexican",
                                "Mongolian",
                                "Moroccan",
                                "Mozambican",
                                "Namibian",
                                "Nepalese",
                                "Dutch",
                                "New Zealand",
                                "Nicaraguan",
                                "Nigerian",
                                "Norwegian",
                                "Pakistani",
                                "Panamanian",
                                "Paraguayan",
                                "Peruvian",
                                "Philippine",
                                "Polish",
                                "Portuguese",
                                "Romanian",
                                "Russian",
                                "Saudi",
                                "Scottish",
                                "Senegalese",
                                "Serbian",
                                "Singaporean",
                                "Slovak",
                                "South African",
                                "Korean",
                                "Spanish",
                                "Sri Lankan",
                                "Sudanese",
                                "Swedish",
                                "Swiss",
                                "Syrian",
                                "Taiwanese",
                                "Tajikistani",
                                "Thai",
                                "Tongan",
                                "Tunisian",
                                "Turkish",
                                "Ukrainian",
                                "Emirati",
                                "British",
                                "American **",
                                "Uruguayan",
                                "Venezuelan",
                                "Vietnamese",
                                "Welsh",
                                "Zambian",
                                "Zimbabwean"
                              ],
                              "value": "English",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.role",
                              "type": "SELECT",
                              "label": "Role / Title",
                              "items": [
                                "CEO",
                                "CFO",
                                "SMO",
                                "DIRECTOR",
                                "OTHER"
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.ownershipPercentage",
                              "type": "TEXT_FIELD",
                              "label": "% ownership of the business entity",
                              "tooltip": "If you hold any ownership of the business entity,\nplease insert the percentage. Otherwise type 0",
                              "rules": [
                                {
                                  "pattern": "^[0-9][0-9]?$|^100$",
                                  "message": "Field should be a number between 0-100"
                                }
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.isAuthorized",
                              "type": "CHECKBOX",
                              "label": "I am the duly authorized representative of Bitter Sweet business entity",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n\n\n\n\n\n<ul>\n<li>The Business will be eligible to accept payments up to a <strong>total amount of £2500</strong> for a <strong>limited period of 30 days</strong>,  while we review and approve the account. </li>\n<li>Your business may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of the account and/or a refund of the amounts received. UNIPaaS reserves the right to request additional information and approve or reject your application. </li>\n</ul>\n\n<br />\n<br />\n\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n\n<p>On behalf of the Business, \n<br />\nI represent and undertake that, I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/605c8a4b8b37a82b60f0752d/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound (and have the Business be bound) by it; \n</p>\n\n\n<p>The sharing of documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided as stated in the Terms. </p>\n<p>I confirm that the business will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>.</p>\n\n\n\n\n\n",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "type": "AGREEMENT",
                              "label": "I agree",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "editable": true,
                              "type": "TEXT_FIELD",
                              "label": "Bank Account holder name",
                              "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "type": "TEXT_FIELD",
                              "label": "Account number",
                              "comment": "For example: 38290008",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{8}$",
                                  "message": "Bank Account Number must be exactly 8 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "type": "TEXT_FIELD",
                              "label": "Sort code",
                              "comment": "For example: 200415",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{6}$",
                                  "message": "Sort-code must be exactly 6 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "The following information can be found on your bank statement, or on the account page of your online banking web page or on your mobile banking application.",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "label": "Stakeholders",
                              "alias": "company.ultimateBeneficialOwners",
                              "type": "STAKEHOLDERS",
                              "collapsed": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.incorporationDocument",
                              "label": "Incorporation Document",
                              "type": "FILE_INPUT",
                              "viewButton": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankStatement",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "label": "Bank Statement or a Voided Cheque",
                              "comment": "Please upload a file dated within the past 3 months",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "status",
                        "onboardingStatus",
                        "acceptPayments",
                        "receivePayout",
                        "fields"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Onboarding"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/onboarding": {
      "get": {
        "operationId": "OnboardingController_getOnboardingFlatForms",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PENDING",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "individual.firstName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "individual.lastName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "individual.birthDate",
                              "type": "DATE_PICKER",
                              "label": "Date of Birth",
                              "min": "1902-02-17",
                              "max": "2004-02-17",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "individual.email",
                              "status": "PENDING",
                              "value": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.phone",
                              "type": "PHONE",
                              "label": "Phone Number",
                              "rules": [
                                {
                                  "pattern": "^\\+[0-9]{0,14}$",
                                  "message": "Invalid Phone number"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.address",
                              "type": "ADDRESS_INPUT",
                              "label": "Address",
                              "editable": true,
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.url",
                              "type": "TEXT_FIELD",
                              "label": "Profile URL",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "FOOD_DELIVERY",
                              "required": true
                            },
                            {
                              "alias": "business.serviceDescription",
                              "type": "TEXTAREA",
                              "label": "Service Description",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n<ul>\n<li>Please note you can accept payments up to a <strong>total amount of £1500</strong> for a <strong>limited period of 30 days</strong>, while we review and approve your account. </li>\n<li>You be may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of your account and/or a refund of the amounts received. UNIPaaS reserves the right to approve or reject my application accordingly. </li>\n</ul>\n\n\n<br />\n<br />\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n<p>I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/{platformId}/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound by it; </p>\n<p>I consent to the sharing of my documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided by UNIPaaS as stated in the Terms. </p>\n<p>I confirm that I will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>, I understand that breaching this term will lead to immediate termination of my merchant account.</p>\n                ",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "type": "AGREEMENT",
                              "label": "I agree",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "type": "TEXT_FIELD",
                              "label": "Bank Account holder name",
                              "editable": true,
                              "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "type": "TEXT_FIELD",
                              "label": "Your Bank Account Number",
                              "comment": "For example: 38290008",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{8}$",
                                  "message": "Bank Account Number must be exactly 8 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "type": "TEXT_FIELD",
                              "label": "Your Sort-code",
                              "comment": "For example: 200415",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{6}$",
                                  "message": "Sort-code must be exactly 6 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "individual.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "business.bankStatement",
                              "label": "Upload a copy of your bank statement",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["status", "fields"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PENDING",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "company.registrationNumber",
                              "type": "TEXT_FIELD",
                              "label": "Company registration number",
                              "editable": true,
                              "rules": [
                                {
                                  "pattern": "^\\d{8}$",
                                  "message": "Registration Number must be exactly 8 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.name",
                              "status": "PENDING",
                              "value": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.address",
                              "label": "Corporate address",
                              "editable": true,
                              "tooltip": "Please enter a full address, including house number or name",
                              "type": "ADDRESS_INPUT",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.email",
                              "status": "PENDING",
                              "value": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.phone",
                              "type": "PHONE",
                              "label": "Phone Number",
                              "rules": [
                                {
                                  "pattern": "^\\+[0-9]{0,14}$",
                                  "message": "Invalid Phone number"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.vat",
                              "type": "TEXT_FIELD",
                              "label": "VAT Number (optional)",
                              "editable": true,
                              "required": false,
                              "rules": [
                                {
                                  "pattern": "^\\d{9}$",
                                  "message": "VAT Number must be exactly 9 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null
                            },
                            {
                              "alias": "business.url",
                              "type": "TEXT_FIELD",
                              "label": "Commercial website URL",
                              "editable": true,
                              "tooltip": "This should be the website you use to sell your goods or services.\nIt can be your business profile page hosted by your platform’s website",
                              "comment": "Please ensure that you have added the website's URL that you are planning to use to sell goods and services.",
                              "rules": [
                                {
                                  "pattern": "^.+..+$",
                                  "message": "Invalid Website URL"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "representative.firstName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "representative.lastName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "representative.birthDate",
                              "type": "DATE_PICKER",
                              "label": "Date of Birth",
                              "min": "1902-02-17",
                              "max": "2004-02-17",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.address",
                              "type": "ADDRESS_INPUT",
                              "label": "Home address",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.nationality",
                              "type": "SELECT",
                              "label": "Nationality",
                              "items": [
                                "Afghan",
                                "Albanian",
                                "Algerian",
                                "Argentinian",
                                "Australian",
                                "Austrian",
                                "Bangladeshi",
                                "Belgian",
                                "Bolivian",
                                "Batswana",
                                "Brazilian",
                                "Bulgarian",
                                "Cambodian",
                                "Cameroonian",
                                "Canadian",
                                "Chilean",
                                "Chinese",
                                "Colombian",
                                "Costa Rican",
                                "Croatian",
                                "Cuban",
                                "Czech",
                                "Danish",
                                "Dominican",
                                "Ecuadorian",
                                "Egyptian",
                                "Salvadorian",
                                "English",
                                "Estonian",
                                "Ethiopian",
                                "Fijian",
                                "Finnish",
                                "French",
                                "German",
                                "Ghanaian",
                                "Greek",
                                "Guatemalan",
                                "Haitian",
                                "Honduran",
                                "Hungarian",
                                "Icelandic",
                                "Indian",
                                "Indonesian",
                                "Iranian",
                                "Iraqi",
                                "Irish",
                                "Israeli",
                                "Italian",
                                "Jamaican",
                                "Japanese",
                                "Jordanian",
                                "Kenyan",
                                "Kuwaiti",
                                "Lao",
                                "Latvian",
                                "Lebanese",
                                "Libyan",
                                "Lithuanian",
                                "Malagasy",
                                "Malaysian",
                                "Malian",
                                "Maltese",
                                "Mexican",
                                "Mongolian",
                                "Moroccan",
                                "Mozambican",
                                "Namibian",
                                "Nepalese",
                                "Dutch",
                                "New Zealand",
                                "Nicaraguan",
                                "Nigerian",
                                "Norwegian",
                                "Pakistani",
                                "Panamanian",
                                "Paraguayan",
                                "Peruvian",
                                "Philippine",
                                "Polish",
                                "Portuguese",
                                "Romanian",
                                "Russian",
                                "Saudi",
                                "Scottish",
                                "Senegalese",
                                "Serbian",
                                "Singaporean",
                                "Slovak",
                                "South African",
                                "Korean",
                                "Spanish",
                                "Sri Lankan",
                                "Sudanese",
                                "Swedish",
                                "Swiss",
                                "Syrian",
                                "Taiwanese",
                                "Tajikistani",
                                "Thai",
                                "Tongan",
                                "Tunisian",
                                "Turkish",
                                "Ukrainian",
                                "Emirati",
                                "British",
                                "American **",
                                "Uruguayan",
                                "Venezuelan",
                                "Vietnamese",
                                "Welsh",
                                "Zambian",
                                "Zimbabwean"
                              ],
                              "value": "English",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.role",
                              "type": "SELECT",
                              "label": "Role / Title",
                              "items": [
                                "CEO",
                                "CFO",
                                "SMO",
                                "DIRECTOR",
                                "OTHER"
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.ownershipPercentage",
                              "type": "TEXT_FIELD",
                              "label": "% ownership of the business entity",
                              "tooltip": "If you hold any ownership of the business entity,\nplease insert the percentage. Otherwise type 0",
                              "rules": [
                                {
                                  "pattern": "^[0-9][0-9]?$|^100$",
                                  "message": "Field should be a number between 0-100"
                                }
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.isAuthorized",
                              "type": "CHECKBOX",
                              "label": "I am the duly authorized representative of Bitter Sweet business entity",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n\n\n\n\n\n<ul>\n<li>The Business will be eligible to accept payments up to a <strong>total amount of £2500</strong> for a <strong>limited period of 30 days</strong>,  while we review and approve the account. </li>\n<li>Your business may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of the account and/or a refund of the amounts received. UNIPaaS reserves the right to request additional information and approve or reject your application. </li>\n</ul>\n\n<br />\n<br />\n\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n\n<p>On behalf of the Business, \n<br />\nI represent and undertake that, I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/605c8a4b8b37a82b60f0752d/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound (and have the Business be bound) by it; \n</p>\n\n\n<p>The sharing of documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided as stated in the Terms. </p>\n<p>I confirm that the business will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>.</p>\n\n\n\n\n\n",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "type": "AGREEMENT",
                              "label": "I agree",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "editable": true,
                              "type": "TEXT_FIELD",
                              "label": "Bank Account holder name",
                              "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "type": "TEXT_FIELD",
                              "label": "Account number",
                              "comment": "For example: 38290008",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{8}$",
                                  "message": "Bank Account Number must be exactly 8 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "type": "TEXT_FIELD",
                              "label": "Sort code",
                              "comment": "For example: 200415",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{6}$",
                                  "message": "Sort-code must be exactly 6 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "The following information can be found on your bank statement, or on the account page of your online banking web page or on your mobile banking application.",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "label": "Stakeholders",
                              "alias": "company.ultimateBeneficialOwners",
                              "type": "STAKEHOLDERS",
                              "collapsed": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.incorporationDocument",
                              "label": "Incorporation Document",
                              "type": "FILE_INPUT",
                              "viewButton": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankStatement",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "label": "Bank Statement or a Voided Cheque",
                              "comment": "Please upload a file dated within the past 3 months",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["status", "fields"]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Onboarding"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "OnboardingController_postOnboardingFlatForms",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fields": {
                    "example": [
                      {
                        "alias": "individual.email",
                        "value": "john.doe@example.com"
                      },
                      {
                        "alias": "individual.phone",
                        "value": "+447911123456"
                      },
                      {
                        "alias": "individual.firstName",
                        "value": "John"
                      },
                      {
                        "alias": "individual.lastName",
                        "value": "Doe"
                      },
                      {
                        "alias": "individual.birthDate",
                        "value": "1991-04-02"
                      },
                      {
                        "alias": "individual.address",
                        "value": {
                          "country": "GB",
                          "city": "London",
                          "state": "England",
                          "houseNumber": "64",
                          "street": "New Cavendish Street",
                          "postCode": "SW1W 0NY"
                        }
                      },
                      {
                        "alias": "business.category",
                        "value": "FOOD_DELIVERY"
                      },
                      {
                        "alias": "business.url",
                        "value": "example.com"
                      },
                      {
                        "alias": "business.serviceDescription",
                        "value": "example.com"
                      },
                      {
                        "alias": "business.accountHolderName",
                        "value": "Doe"
                      },
                      {
                        "alias": "business.bankAccount",
                        "value": "38290008"
                      },
                      {
                        "alias": "business.sortCode",
                        "value": "200415"
                      },
                      {
                        "alias": "business.agreement",
                        "value": {
                          "accepted": true,
                          "ipAddress": "1.1.1.1"
                        }
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["fields"]
              },
              "examples": {
                "individual": {
                  "value": {
                    "fields": [
                      {
                        "alias": "individual.email",
                        "value": "john.doe@example.com"
                      },
                      {
                        "alias": "individual.phone",
                        "value": "+447911123456"
                      },
                      {
                        "alias": "individual.firstName",
                        "value": "John"
                      },
                      {
                        "alias": "individual.lastName",
                        "value": "Doe"
                      },
                      {
                        "alias": "individual.birthDate",
                        "value": "1991-04-02"
                      },
                      {
                        "alias": "individual.address",
                        "value": {
                          "country": "GB",
                          "city": "London",
                          "state": "England",
                          "houseNumber": "64",
                          "street": "New Cavendish Street",
                          "postCode": "SW1W 0NY"
                        }
                      },
                      {
                        "alias": "business.category",
                        "value": "FOOD_DELIVERY"
                      },
                      {
                        "alias": "business.url",
                        "value": "example.com"
                      },
                      {
                        "alias": "business.serviceDescription",
                        "value": "example.com"
                      },
                      {
                        "alias": "business.accountHolderName",
                        "value": "Doe"
                      },
                      {
                        "alias": "business.bankAccount",
                        "value": "38290008"
                      },
                      {
                        "alias": "business.sortCode",
                        "value": "200415"
                      },
                      {
                        "alias": "business.agreement",
                        "value": {
                          "accepted": true,
                          "ipAddress": "1.1.1.1"
                        }
                      }
                    ]
                  }
                },
                "company": {
                  "value": {
                    "fields": [
                      {
                        "alias": "company.email",
                        "value": "john.doe@example.com"
                      },
                      {
                        "alias": "company.phone",
                        "value": "+447911123456"
                      },
                      {
                        "alias": "representative.firstName",
                        "value": "John"
                      },
                      {
                        "alias": "representative.lastName",
                        "value": "Doe"
                      },
                      {
                        "alias": "company.name",
                        "value": "Better Delivery"
                      },
                      {
                        "alias": "company.address",
                        "value": {
                          "country": "GB",
                          "city": "London",
                          "state": "England",
                          "houseNumber": "64",
                          "street": "New Cavendish Street",
                          "postCode": "SW1W 0NY"
                        }
                      },
                      {
                        "alias": "business.category",
                        "value": "FOOD_DELIVERY"
                      },
                      {
                        "alias": "business.agreement",
                        "value": {
                          "accepted": true,
                          "ipAddress": "1.1.1.1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PENDING",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "PAY_IN_SUCCESS",
                            "PAY_IN_IN_REVIEW",
                            "PAY_OUT_IN_REVIEW",
                            "PAY_OUT_SUCCESS",
                            "REJECTED"
                          ]
                        },
                        "onboardingStatus": {
                          "example": "RESTRICTED",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "acceptPayments": {
                          "type": "boolean",
                          "example": true
                        },
                        "receivePayout": {
                          "type": "boolean",
                          "example": true
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "individual.firstName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "John",
                              "required": true
                            },
                            {
                              "alias": "individual.lastName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Doe",
                              "required": true
                            },
                            {
                              "alias": "individual.birthDate",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "1991-04-02",
                              "required": true
                            },
                            {
                              "alias": "individual.email",
                              "status": "COMPLETED",
                              "value": "messi@example.com",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.phone",
                              "status": "COMPLETED",
                              "value": "+447911123456",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.address",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": {
                                "country": "GB",
                                "city": "London",
                                "state": "England",
                                "houseNumber": "64",
                                "street": "New Cavendish Street",
                                "postCode": "SW1W 0NY"
                              },
                              "required": true
                            },
                            {
                              "alias": "business.url",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "example.com",
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "FOOD_DELIVERY",
                              "required": true
                            },
                            {
                              "alias": "business.serviceDescription",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "example.com",
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n<ul>\n<li>Please note you can accept payments up to a <strong>total amount of £1500</strong> for a <strong>limited period of 30 days</strong>, while we review and approve your account. </li>\n<li>You be may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of your account and/or a refund of the amounts received. UNIPaaS reserves the right to approve or reject my application accordingly. </li>\n</ul>\n\n\n<br />\n<br />\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n<p>I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/{platformId}/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound by it; </p>\n<p>I consent to the sharing of my documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided by UNIPaaS as stated in the Terms. </p>\n<p>I confirm that I will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>, I understand that breaching this term will lead to immediate termination of my merchant account.</p>\n                ",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "status": "COMPLETED",
                              "value": {
                                "accepted": true,
                                "ipAddress": "1.1.1.1",
                                "publicUrl": "https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/vendors/{vendorId}/signature/{signatureId}/msa.pdf"
                              },
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Doe",
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "status": "COMPLETED",
                              "value": "38290008",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "status": "COMPLETED",
                              "value": "200415",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "individual.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "business.bankStatement",
                              "label": "Upload a copy of your bank statement",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "status",
                        "onboardingStatus",
                        "acceptPayments",
                        "receivePayout",
                        "fields"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PAY_OUT_SUCCESS",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "onboardingStatus": {
                          "example": "RESTRICTED",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "acceptPayments": {
                          "type": "boolean",
                          "example": true
                        },
                        "receivePayout": {
                          "type": "boolean",
                          "example": true
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "company.registrationNumber",
                              "type": "TEXT_FIELD",
                              "label": "Company registration number",
                              "editable": true,
                              "rules": [
                                {
                                  "pattern": "^\\d{8}$",
                                  "message": "Registration Number must be exactly 8 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.name",
                              "status": "COMPLETED",
                              "value": "Bitter Sweet",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.address",
                              "label": "Corporate address",
                              "editable": true,
                              "tooltip": "Please enter a full address, including house number or name",
                              "type": "ADDRESS_INPUT",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.email",
                              "status": "COMPLETED",
                              "value": "messi@example.com",
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.phone",
                              "type": "PHONE",
                              "label": "Phone Number",
                              "rules": [
                                {
                                  "pattern": "^\\+[0-9]{0,14}$",
                                  "message": "Invalid Phone number"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.vat",
                              "type": "TEXT_FIELD",
                              "label": "VAT Number (optional)",
                              "editable": true,
                              "required": false,
                              "rules": [
                                {
                                  "pattern": "^\\d{9}$",
                                  "message": "VAT Number must be exactly 9 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null
                            },
                            {
                              "alias": "business.url",
                              "type": "TEXT_FIELD",
                              "label": "Commercial website URL",
                              "editable": true,
                              "tooltip": "This should be the website you use to sell your goods or services.\nIt can be your business profile page hosted by your platform’s website",
                              "comment": "Please ensure that you have added the website's URL that you are planning to use to sell goods and services.",
                              "rules": [
                                {
                                  "pattern": "^.+..+$",
                                  "message": "Invalid Website URL"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "FOOD_DELIVERY",
                              "required": true
                            },
                            {
                              "alias": "representative.firstName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Lionel",
                              "required": true
                            },
                            {
                              "alias": "representative.lastName",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "Messi",
                              "required": true
                            },
                            {
                              "alias": "representative.birthDate",
                              "type": "DATE_PICKER",
                              "label": "Date of Birth",
                              "min": "1902-02-17",
                              "max": "2004-02-17",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.address",
                              "type": "ADDRESS_INPUT",
                              "label": "Home address",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.nationality",
                              "type": "SELECT",
                              "label": "Nationality",
                              "items": [
                                "Afghan",
                                "Albanian",
                                "Algerian",
                                "Argentinian",
                                "Australian",
                                "Austrian",
                                "Bangladeshi",
                                "Belgian",
                                "Bolivian",
                                "Batswana",
                                "Brazilian",
                                "Bulgarian",
                                "Cambodian",
                                "Cameroonian",
                                "Canadian",
                                "Chilean",
                                "Chinese",
                                "Colombian",
                                "Costa Rican",
                                "Croatian",
                                "Cuban",
                                "Czech",
                                "Danish",
                                "Dominican",
                                "Ecuadorian",
                                "Egyptian",
                                "Salvadorian",
                                "English",
                                "Estonian",
                                "Ethiopian",
                                "Fijian",
                                "Finnish",
                                "French",
                                "German",
                                "Ghanaian",
                                "Greek",
                                "Guatemalan",
                                "Haitian",
                                "Honduran",
                                "Hungarian",
                                "Icelandic",
                                "Indian",
                                "Indonesian",
                                "Iranian",
                                "Iraqi",
                                "Irish",
                                "Israeli",
                                "Italian",
                                "Jamaican",
                                "Japanese",
                                "Jordanian",
                                "Kenyan",
                                "Kuwaiti",
                                "Lao",
                                "Latvian",
                                "Lebanese",
                                "Libyan",
                                "Lithuanian",
                                "Malagasy",
                                "Malaysian",
                                "Malian",
                                "Maltese",
                                "Mexican",
                                "Mongolian",
                                "Moroccan",
                                "Mozambican",
                                "Namibian",
                                "Nepalese",
                                "Dutch",
                                "New Zealand",
                                "Nicaraguan",
                                "Nigerian",
                                "Norwegian",
                                "Pakistani",
                                "Panamanian",
                                "Paraguayan",
                                "Peruvian",
                                "Philippine",
                                "Polish",
                                "Portuguese",
                                "Romanian",
                                "Russian",
                                "Saudi",
                                "Scottish",
                                "Senegalese",
                                "Serbian",
                                "Singaporean",
                                "Slovak",
                                "South African",
                                "Korean",
                                "Spanish",
                                "Sri Lankan",
                                "Sudanese",
                                "Swedish",
                                "Swiss",
                                "Syrian",
                                "Taiwanese",
                                "Tajikistani",
                                "Thai",
                                "Tongan",
                                "Tunisian",
                                "Turkish",
                                "Ukrainian",
                                "Emirati",
                                "British",
                                "American **",
                                "Uruguayan",
                                "Venezuelan",
                                "Vietnamese",
                                "Welsh",
                                "Zambian",
                                "Zimbabwean"
                              ],
                              "value": "English",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.role",
                              "type": "SELECT",
                              "label": "Role / Title",
                              "items": [
                                "CEO",
                                "CFO",
                                "SMO",
                                "DIRECTOR",
                                "OTHER"
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.ownershipPercentage",
                              "type": "TEXT_FIELD",
                              "label": "% ownership of the business entity",
                              "tooltip": "If you hold any ownership of the business entity,\nplease insert the percentage. Otherwise type 0",
                              "rules": [
                                {
                                  "pattern": "^[0-9][0-9]?$|^100$",
                                  "message": "Field should be a number between 0-100"
                                }
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.isAuthorized",
                              "type": "CHECKBOX",
                              "label": "I am the duly authorized representative of Bitter Sweet business entity",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n\n\n\n\n\n<ul>\n<li>The Business will be eligible to accept payments up to a <strong>total amount of £2500</strong> for a <strong>limited period of 30 days</strong>,  while we review and approve the account. </li>\n<li>Your business may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of the account and/or a refund of the amounts received. UNIPaaS reserves the right to request additional information and approve or reject your application. </li>\n</ul>\n\n<br />\n<br />\n\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n\n<p>On behalf of the Business, \n<br />\nI represent and undertake that, I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/605c8a4b8b37a82b60f0752d/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound (and have the Business be bound) by it; \n</p>\n\n\n<p>The sharing of documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided as stated in the Terms. </p>\n<p>I confirm that the business will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>.</p>\n\n\n\n\n\n",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "type": "AGREEMENT",
                              "label": "I agree",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "editable": true,
                              "type": "TEXT_FIELD",
                              "label": "Bank Account holder name",
                              "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "type": "TEXT_FIELD",
                              "label": "Account number",
                              "comment": "For example: 38290008",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{8}$",
                                  "message": "Bank Account Number must be exactly 8 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "type": "TEXT_FIELD",
                              "label": "Sort code",
                              "comment": "For example: 200415",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{6}$",
                                  "message": "Sort-code must be exactly 6 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "The following information can be found on your bank statement, or on the account page of your online banking web page or on your mobile banking application.",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "label": "Stakeholders",
                              "alias": "company.ultimateBeneficialOwners",
                              "type": "STAKEHOLDERS",
                              "collapsed": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.incorporationDocument",
                              "label": "Incorporation Document",
                              "type": "FILE_INPUT",
                              "viewButton": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankStatement",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "label": "Bank Statement or a Voided Cheque",
                              "comment": "Please upload a file dated within the past 3 months",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "status",
                        "onboardingStatus",
                        "acceptPayments",
                        "receivePayout",
                        "fields"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Onboarding"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/overview": {
      "get": {
        "operationId": "OnboardingController_getOnboardingOverview",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PENDING",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "individual.firstName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "individual.lastName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "individual.birthDate",
                              "type": "DATE_PICKER",
                              "label": "Date of Birth",
                              "min": "1902-02-17",
                              "max": "2004-02-17",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "individual.email",
                              "status": "PENDING",
                              "value": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.phone",
                              "type": "PHONE",
                              "label": "Phone Number",
                              "rules": [
                                {
                                  "pattern": "^\\+[0-9]{0,14}$",
                                  "message": "Invalid Phone number"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.address",
                              "type": "ADDRESS_INPUT",
                              "label": "Address",
                              "editable": true,
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.url",
                              "type": "TEXT_FIELD",
                              "label": "Profile URL",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "COMPLETED",
                              "value": "FOOD_DELIVERY",
                              "required": true
                            },
                            {
                              "alias": "business.serviceDescription",
                              "type": "TEXTAREA",
                              "label": "Service Description",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n<ul>\n<li>Please note you can accept payments up to a <strong>total amount of £1500</strong> for a <strong>limited period of 30 days</strong>, while we review and approve your account. </li>\n<li>You be may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of your account and/or a refund of the amounts received. UNIPaaS reserves the right to approve or reject my application accordingly. </li>\n</ul>\n\n\n<br />\n<br />\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n<p>I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/{platformId}/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound by it; </p>\n<p>I consent to the sharing of my documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided by UNIPaaS as stated in the Terms. </p>\n<p>I confirm that I will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>, I understand that breaching this term will lead to immediate termination of my merchant account.</p>\n                ",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "type": "AGREEMENT",
                              "label": "I agree",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "type": "TEXT_FIELD",
                              "label": "Bank Account holder name",
                              "editable": true,
                              "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "type": "TEXT_FIELD",
                              "label": "Your Bank Account Number",
                              "comment": "For example: 38290008",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{8}$",
                                  "message": "Bank Account Number must be exactly 8 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "type": "TEXT_FIELD",
                              "label": "Your Sort-code",
                              "comment": "For example: 200415",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{6}$",
                                  "message": "Sort-code must be exactly 6 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "individual.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "individual.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            },
                            {
                              "alias": "business.bankStatement",
                              "label": "Upload a copy of your bank statement",
                              "type": "FILE_INPUT",
                              "required": false,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["status", "fields"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "example": "PENDING",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "STARTED",
                            "ACTION_REQUIRED",
                            "RESTRICTED",
                            "IN_REVIEW",
                            "REJECTED",
                            "ACCEPT_PAYMENTS",
                            "COMPLETED"
                          ]
                        },
                        "fields": {
                          "example": [
                            {
                              "alias": "company.registrationNumber",
                              "type": "TEXT_FIELD",
                              "label": "Company registration number",
                              "editable": true,
                              "rules": [
                                {
                                  "pattern": "^\\d{8}$",
                                  "message": "Registration Number must be exactly 8 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.name",
                              "status": "PENDING",
                              "value": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.address",
                              "label": "Corporate address",
                              "editable": true,
                              "tooltip": "Please enter a full address, including house number or name",
                              "type": "ADDRESS_INPUT",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.email",
                              "status": "PENDING",
                              "value": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "company.phone",
                              "type": "PHONE",
                              "label": "Phone Number",
                              "rules": [
                                {
                                  "pattern": "^\\+[0-9]{0,14}$",
                                  "message": "Invalid Phone number"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.vat",
                              "type": "TEXT_FIELD",
                              "label": "VAT Number (optional)",
                              "editable": true,
                              "required": false,
                              "rules": [
                                {
                                  "pattern": "^\\d{9}$",
                                  "message": "VAT Number must be exactly 9 digits"
                                }
                              ],
                              "maxLength": 8,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null
                            },
                            {
                              "alias": "business.url",
                              "type": "TEXT_FIELD",
                              "label": "Commercial website URL",
                              "editable": true,
                              "tooltip": "This should be the website you use to sell your goods or services.\nIt can be your business profile page hosted by your platform’s website",
                              "comment": "Please ensure that you have added the website's URL that you are planning to use to sell goods and services.",
                              "rules": [
                                {
                                  "pattern": "^.+..+$",
                                  "message": "Invalid Website URL"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.category",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "representative.firstName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "representative.lastName",
                              "editable": true,
                              "status": "PENDING",
                              "value": null,
                              "required": true
                            },
                            {
                              "alias": "representative.birthDate",
                              "type": "DATE_PICKER",
                              "label": "Date of Birth",
                              "min": "1902-02-17",
                              "max": "2004-02-17",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.address",
                              "type": "ADDRESS_INPUT",
                              "label": "Home address",
                              "comment": "Example: 15 George Eliot, London WC2N 5DU, UK",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.nationality",
                              "type": "SELECT",
                              "label": "Nationality",
                              "items": [
                                "Afghan",
                                "Albanian",
                                "Algerian",
                                "Argentinian",
                                "Australian",
                                "Austrian",
                                "Bangladeshi",
                                "Belgian",
                                "Bolivian",
                                "Batswana",
                                "Brazilian",
                                "Bulgarian",
                                "Cambodian",
                                "Cameroonian",
                                "Canadian",
                                "Chilean",
                                "Chinese",
                                "Colombian",
                                "Costa Rican",
                                "Croatian",
                                "Cuban",
                                "Czech",
                                "Danish",
                                "Dominican",
                                "Ecuadorian",
                                "Egyptian",
                                "Salvadorian",
                                "English",
                                "Estonian",
                                "Ethiopian",
                                "Fijian",
                                "Finnish",
                                "French",
                                "German",
                                "Ghanaian",
                                "Greek",
                                "Guatemalan",
                                "Haitian",
                                "Honduran",
                                "Hungarian",
                                "Icelandic",
                                "Indian",
                                "Indonesian",
                                "Iranian",
                                "Iraqi",
                                "Irish",
                                "Israeli",
                                "Italian",
                                "Jamaican",
                                "Japanese",
                                "Jordanian",
                                "Kenyan",
                                "Kuwaiti",
                                "Lao",
                                "Latvian",
                                "Lebanese",
                                "Libyan",
                                "Lithuanian",
                                "Malagasy",
                                "Malaysian",
                                "Malian",
                                "Maltese",
                                "Mexican",
                                "Mongolian",
                                "Moroccan",
                                "Mozambican",
                                "Namibian",
                                "Nepalese",
                                "Dutch",
                                "New Zealand",
                                "Nicaraguan",
                                "Nigerian",
                                "Norwegian",
                                "Pakistani",
                                "Panamanian",
                                "Paraguayan",
                                "Peruvian",
                                "Philippine",
                                "Polish",
                                "Portuguese",
                                "Romanian",
                                "Russian",
                                "Saudi",
                                "Scottish",
                                "Senegalese",
                                "Serbian",
                                "Singaporean",
                                "Slovak",
                                "South African",
                                "Korean",
                                "Spanish",
                                "Sri Lankan",
                                "Sudanese",
                                "Swedish",
                                "Swiss",
                                "Syrian",
                                "Taiwanese",
                                "Tajikistani",
                                "Thai",
                                "Tongan",
                                "Tunisian",
                                "Turkish",
                                "Ukrainian",
                                "Emirati",
                                "British",
                                "American **",
                                "Uruguayan",
                                "Venezuelan",
                                "Vietnamese",
                                "Welsh",
                                "Zambian",
                                "Zimbabwean"
                              ],
                              "value": "English",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.role",
                              "type": "SELECT",
                              "label": "Role / Title",
                              "items": [
                                "CEO",
                                "CFO",
                                "SMO",
                                "DIRECTOR",
                                "OTHER"
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.ownershipPercentage",
                              "type": "TEXT_FIELD",
                              "label": "% ownership of the business entity",
                              "tooltip": "If you hold any ownership of the business entity,\nplease insert the percentage. Otherwise type 0",
                              "rules": [
                                {
                                  "pattern": "^[0-9][0-9]?$|^100$",
                                  "message": "Field should be a number between 0-100"
                                }
                              ],
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.passport",
                              "label": "Passport copy",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.drivingLicense",
                              "label": "Driving license",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "representative.isAuthorized",
                              "type": "CHECKBOX",
                              "label": "I am the duly authorized representative of Bitter Sweet business entity",
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "\n\n\n\n\n\n<ul>\n<li>The Business will be eligible to accept payments up to a <strong>total amount of £2500</strong> for a <strong>limited period of 30 days</strong>,  while we review and approve the account. </li>\n<li>Your business may be required to provide additional information and documents as part of the verification process. </li>\n<li>Failure to provide the required information shall result in suspension of the account and/or a refund of the amounts received. UNIPaaS reserves the right to request additional information and approve or reject your application. </li>\n</ul>\n\n<br />\n<br />\n\n<p>Here are some requierments form our legal department that you need to confirm: </p>\n\n<p>On behalf of the Business, \n<br />\nI represent and undertake that, I have fully read, understood and hereby accept the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/platforms/605c8a4b8b37a82b60f0752d/msa.html\">UNIPaaS Merchant Services Terms</a> (“Terms”) for the use of its payments services and agree to be bound (and have the Business be bound) by it; \n</p>\n\n\n<p>The sharing of documents and information with UNIPaaS, its affiliates and its third parties’ providers necessary for the payments services provided as stated in the Terms. </p>\n<p>I confirm that the business will NOT sell any of the <a href=\"https://unipaas-static-documents.s3.eu-west-1.amazonaws.com/prohibited-list.html\" target=\"_blank\">prohibited items</a>.</p>\n\n\n\n\n\n",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "alias": "business.agreement",
                              "type": "AGREEMENT",
                              "label": "I agree",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.accountHolderName",
                              "editable": true,
                              "type": "TEXT_FIELD",
                              "label": "Bank Account holder name",
                              "tooltip": "Enter the full name of the business entity that is associated with the bank account",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankAccount",
                              "type": "TEXT_FIELD",
                              "label": "Account number",
                              "comment": "For example: 38290008",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{8}$",
                                  "message": "Bank Account Number must be exactly 8 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "alias": "business.sortCode",
                              "type": "TEXT_FIELD",
                              "label": "Sort code",
                              "comment": "For example: 200415",
                              "rules": [
                                {
                                  "pattern": "^[0-9]{6}$",
                                  "message": "Sort-code must be exactly 6 digits"
                                }
                              ],
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "editable": null,
                              "required": true
                            },
                            {
                              "type": "HTML",
                              "code": "The following information can be found on your bank statement, or on the account page of your online banking web page or on your mobile banking application.",
                              "status": "PENDING",
                              "required": true
                            },
                            {
                              "label": "Stakeholders",
                              "alias": "company.ultimateBeneficialOwners",
                              "type": "STAKEHOLDERS",
                              "collapsed": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "company.incorporationDocument",
                              "label": "Incorporation Document",
                              "type": "FILE_INPUT",
                              "viewButton": true,
                              "editable": true,
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            },
                            {
                              "alias": "business.bankStatement",
                              "type": "FILE_INPUT",
                              "editable": true,
                              "label": "Bank Statement or a Voided Cheque",
                              "comment": "Please upload a file dated within the past 3 months",
                              "status": "PENDING",
                              "completedAt": null,
                              "value": null,
                              "reason": null,
                              "errors": null,
                              "required": true
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["status", "fields"]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Onboarding"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/onboarding/require": {
      "post": {
        "operationId": "OnboardingController_requireOnboardingAction",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fields": {
                    "example": [
                      {
                        "alias": "individual.email",
                        "value": "john.doe@example.com"
                      },
                      {
                        "alias": "individual.phone",
                        "value": "+447911123456"
                      },
                      {
                        "alias": "individual.firstName",
                        "value": "John"
                      },
                      {
                        "alias": "individual.lastName",
                        "value": "Doe"
                      },
                      {
                        "alias": "individual.birthDate",
                        "value": "1991-04-02"
                      },
                      {
                        "alias": "individual.address",
                        "value": {
                          "country": "GB",
                          "city": "London",
                          "state": "England",
                          "houseNumber": "64",
                          "street": "New Cavendish Street",
                          "postCode": "SW1W 0NY"
                        }
                      },
                      {
                        "alias": "business.category",
                        "value": "FOOD_DELIVERY"
                      },
                      {
                        "alias": "business.url",
                        "value": "example.com"
                      },
                      {
                        "alias": "business.serviceDescription",
                        "value": "example.com"
                      },
                      {
                        "alias": "business.accountHolderName",
                        "value": "Doe"
                      },
                      {
                        "alias": "business.bankAccount",
                        "value": "38290008"
                      },
                      {
                        "alias": "business.sortCode",
                        "value": "200415"
                      },
                      {
                        "alias": "business.agreement",
                        "value": {
                          "accepted": true,
                          "ipAddress": "1.1.1.1"
                        }
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "createOnboardingLink": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": ["fields"]
              },
              "examples": {
                "individual": {
                  "value": {
                    "createOnboardingLink": true,
                    "fields": [
                      {
                        "alias": "business.bankDetails"
                      }
                    ]
                  }
                },
                "company": {
                  "value": {
                    "createOnboardingLink": true,
                    "fields": [
                      {
                        "alias": "business.bankAccount"
                      },
                      {
                        "alias": "business.sortCode"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "onboardingStatus": {
                      "example": "ACTION_REQUIRED",
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "STARTED",
                        "ACTION_REQUIRED",
                        "RESTRICTED",
                        "IN_REVIEW",
                        "REJECTED",
                        "ACCEPT_PAYMENTS",
                        "COMPLETED"
                      ]
                    },
                    "acceptPayments": {
                      "type": "boolean",
                      "example": true
                    },
                    "receivePayout": {
                      "type": "boolean",
                      "example": false
                    },
                    "fields": {
                      "example": [
                        {
                          "alias": "business.bankDetails",
                          "status": "PENDING",
                          "value": "John"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "onboardingStatus",
                    "acceptPayments",
                    "receivePayout",
                    "fields"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Onboarding"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans": {
      "post": {
        "operationId": "PayInPlanController_createPayInPlan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "group": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "price": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 100
                  },
                  "currency": {
                    "example": "GBP",
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"]
                  },
                  "period": {
                    "type": "number",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "example": 12
                  },
                  "periodUOM": {
                    "example": "months",
                    "type": "string",
                    "enum": [
                      "milliseconds",
                      "seconds",
                      "minutes",
                      "hours",
                      "days",
                      "weeks",
                      "months",
                      "quarters",
                      "years"
                    ]
                  },
                  "setupFee": {
                    "type": "object",
                    "example": 0
                  },
                  "autoRenewal": {
                    "type": "object",
                    "example": false
                  }
                },
                "required": [
                  "name",
                  "description",
                  "group",
                  "price",
                  "currency",
                  "period",
                  "periodUOM"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier/PK"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "group": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "period": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 12
                    },
                    "periodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "trialPeriod": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 1
                    },
                    "trialPeriodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "setupFee": {
                      "type": "object",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 1,
                      "default": 0
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "featured": {
                      "type": "boolean",
                      "default": false
                    },
                    "autoRenewal": {
                      "type": "boolean",
                      "default": false
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "updatedBy": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "correlationId",
                    "merchantId",
                    "vendorId",
                    "name",
                    "description",
                    "group",
                    "price",
                    "currency",
                    "period",
                    "periodUOM",
                    "trialPeriodUOM",
                    "isActive",
                    "isArchived",
                    "createdBy",
                    "updatedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PayInPlanController_getPayInPlans",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier/PK"
                      },
                      "correlationId": {
                        "type": "string"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 500
                      },
                      "group": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "price": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "example": 100
                      },
                      "currency": {
                        "example": "GBP",
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"]
                      },
                      "period": {
                        "type": "number",
                        "minimum": 1,
                        "exclusiveMinimum": true,
                        "example": 12
                      },
                      "periodUOM": {
                        "example": "months",
                        "type": "string",
                        "enum": [
                          "milliseconds",
                          "seconds",
                          "minutes",
                          "hours",
                          "days",
                          "weeks",
                          "months",
                          "quarters",
                          "years"
                        ]
                      },
                      "trialPeriod": {
                        "type": "number",
                        "minimum": 1,
                        "exclusiveMinimum": true,
                        "example": 1
                      },
                      "trialPeriodUOM": {
                        "example": "months",
                        "type": "string",
                        "enum": [
                          "milliseconds",
                          "seconds",
                          "minutes",
                          "hours",
                          "days",
                          "weeks",
                          "months",
                          "quarters",
                          "years"
                        ]
                      },
                      "setupFee": {
                        "type": "object",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "example": 1,
                        "default": 0
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "isArchived": {
                        "type": "boolean"
                      },
                      "featured": {
                        "type": "boolean",
                        "default": false
                      },
                      "autoRenewal": {
                        "type": "boolean",
                        "default": false
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "updatedBy": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "correlationId",
                      "merchantId",
                      "vendorId",
                      "name",
                      "description",
                      "group",
                      "price",
                      "currency",
                      "period",
                      "periodUOM",
                      "trialPeriodUOM",
                      "isActive",
                      "isArchived",
                      "createdBy",
                      "updatedBy"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}": {
      "get": {
        "operationId": "PayInPlanController_getPayInPlan",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier/PK"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "group": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "period": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 12
                    },
                    "periodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "trialPeriod": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 1
                    },
                    "trialPeriodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "setupFee": {
                      "type": "object",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 1,
                      "default": 0
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "featured": {
                      "type": "boolean",
                      "default": false
                    },
                    "autoRenewal": {
                      "type": "boolean",
                      "default": false
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "updatedBy": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "correlationId",
                    "merchantId",
                    "vendorId",
                    "name",
                    "description",
                    "group",
                    "price",
                    "currency",
                    "period",
                    "periodUOM",
                    "trialPeriodUOM",
                    "isActive",
                    "isArchived",
                    "createdBy",
                    "updatedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "PayInPlanController_updatePayInPlan",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  }
                },
                "required": ["name", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier/PK"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "group": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "period": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 12
                    },
                    "periodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "trialPeriod": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 1
                    },
                    "trialPeriodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "setupFee": {
                      "type": "object",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 1,
                      "default": 0
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "featured": {
                      "type": "boolean",
                      "default": false
                    },
                    "autoRenewal": {
                      "type": "boolean",
                      "default": false
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "updatedBy": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "correlationId",
                    "merchantId",
                    "vendorId",
                    "name",
                    "description",
                    "group",
                    "price",
                    "currency",
                    "period",
                    "periodUOM",
                    "trialPeriodUOM",
                    "isActive",
                    "isArchived",
                    "createdBy",
                    "updatedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PayInPlanController_deletePayInPlan",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/activate": {
      "post": {
        "operationId": "PayInPlanController_activatePayInPlan",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier/PK"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "group": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "period": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 12
                    },
                    "periodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "trialPeriod": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 1
                    },
                    "trialPeriodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "setupFee": {
                      "type": "object",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 1,
                      "default": 0
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "featured": {
                      "type": "boolean",
                      "default": false
                    },
                    "autoRenewal": {
                      "type": "boolean",
                      "default": false
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "updatedBy": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "correlationId",
                    "merchantId",
                    "vendorId",
                    "name",
                    "description",
                    "group",
                    "price",
                    "currency",
                    "period",
                    "periodUOM",
                    "trialPeriodUOM",
                    "isActive",
                    "isArchived",
                    "createdBy",
                    "updatedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/deactivate": {
      "post": {
        "operationId": "PayInPlanController_deactivatePayInPlan",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier/PK"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "group": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "period": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 12
                    },
                    "periodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "trialPeriod": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 1
                    },
                    "trialPeriodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "setupFee": {
                      "type": "object",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 1,
                      "default": 0
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "featured": {
                      "type": "boolean",
                      "default": false
                    },
                    "autoRenewal": {
                      "type": "boolean",
                      "default": false
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "updatedBy": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "correlationId",
                    "merchantId",
                    "vendorId",
                    "name",
                    "description",
                    "group",
                    "price",
                    "currency",
                    "period",
                    "periodUOM",
                    "trialPeriodUOM",
                    "isActive",
                    "isArchived",
                    "createdBy",
                    "updatedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/archive": {
      "post": {
        "operationId": "PayInPlanController_archivePayInPlan",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier/PK"
                    },
                    "correlationId": {
                      "type": "string"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "group": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "period": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 12
                    },
                    "periodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "trialPeriod": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "example": 1
                    },
                    "trialPeriodUOM": {
                      "example": "months",
                      "type": "string",
                      "enum": [
                        "milliseconds",
                        "seconds",
                        "minutes",
                        "hours",
                        "days",
                        "weeks",
                        "months",
                        "quarters",
                        "years"
                      ]
                    },
                    "setupFee": {
                      "type": "object",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 1,
                      "default": 0
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "featured": {
                      "type": "boolean",
                      "default": false
                    },
                    "autoRenewal": {
                      "type": "boolean",
                      "default": false
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "updatedBy": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "correlationId",
                    "merchantId",
                    "vendorId",
                    "name",
                    "description",
                    "group",
                    "price",
                    "currency",
                    "period",
                    "periodUOM",
                    "trialPeriodUOM",
                    "isActive",
                    "isArchived",
                    "createdBy",
                    "updatedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/subscriptions": {
      "get": {
        "operationId": "PayInPlanController_getPayInPlanSubscriptions",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/subscriptions/{subscriptionId}": {
      "get": {
        "operationId": "PayInPlanController_getPayInPlanSubscriptionById",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/subscriptions/{subscriptionId}/pause": {
      "post": {
        "operationId": "PayInPlanController_pausePayInPlanSubscription",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDatetime": {
                    "type": "string",
                    "example": "2021-01-01 15:30"
                  },
                  "endDatetime": {
                    "type": "string",
                    "example": "2021-01-10 12:30"
                  }
                },
                "required": ["startDatetime", "endDatetime"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/subscriptions/{subscriptionId}/resume": {
      "post": {
        "operationId": "PayInPlanController_resumePayInPlanSubscription",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/plans/{planId}/subscriptions/{subscriptionId}/cancel": {
      "post": {
        "operationId": "PayInPlanController_cancelPayInPlanSubscription",
        "parameters": [
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Recurring"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/checkout": {
      "post": {
        "operationId": "WebSdkPayInController_createCheckout",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 100,
                    "multipleOf": 0.01
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "example": "GBP",
                    "default": "GBP"
                  },
                  "country": {
                    "type": "string",
                    "format": "ISO 3166-1 alpha-2",
                    "example": "GB"
                  },
                  "vendorId": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "lastName": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "format": "phone"
                  },
                  "orderId": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "reference": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "successfulPaymentRedirect": {
                    "type": "string",
                    "maxLength": 256,
                    "format": "uri",
                    "example": "https://platform.com/redirect"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 100
                        },
                        "vendorId": {
                          "type": "string"
                        },
                        "platformFee": {
                          "type": "number",
                          "description": "percentage fee",
                          "minimum": 0,
                          "maxLength": 100,
                          "example": 10
                        },
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "fundingAmount": {
                          "type": "number"
                        }
                      },
                      "required": ["name", "amount"]
                    }
                  },
                  "invoiceUrl": {
                    "type": "string",
                    "example": "http://yourcompany.com/invoice.pdf"
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2020-10-13"
                  },
                  "vatAmount": {
                    "type": "number"
                  },
                  "metadata": {
                    "type": "object"
                  },
                  "plans": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      },
                      "required": ["id"]
                    }
                  },
                  "billingAddress": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "maxLength": 256
                      },
                      "lastName": {
                        "type": "string",
                        "maxLength": 256
                      },
                      "city": {
                        "type": "string",
                        "example": "London",
                        "description": "City, district, suburb, town, or village."
                      },
                      "country": {
                        "type": "string",
                        "format": "ISO 3166-1 alpha-2",
                        "example": "GB",
                        "description": "Two-letter country code (ISO 3166-1 alpha-2)."
                      },
                      "line1": {
                        "type": "string",
                        "example": "64 New Cavendish Street",
                        "description": "Street, PO Box, or company name."
                      },
                      "line2": {
                        "type": "string",
                        "description": "Apartment, suite, unit, or building."
                      },
                      "postalCode": {
                        "type": "string",
                        "example": "W1G 8TB",
                        "description": "ZIP or postal code."
                      },
                      "state": {
                        "type": "string",
                        "description": "State, county, province, or region."
                      }
                    },
                    "required": ["city", "country", "line1", "postalCode"]
                  },
                  "shippingSameAsBilling": {
                    "type": "boolean"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "maxLength": 256
                      },
                      "lastName": {
                        "type": "string",
                        "maxLength": 256
                      },
                      "city": {
                        "type": "string",
                        "example": "London",
                        "description": "City, district, suburb, town, or village."
                      },
                      "country": {
                        "type": "string",
                        "format": "ISO 3166-1 alpha-2",
                        "example": "GB",
                        "description": "Two-letter country code (ISO 3166-1 alpha-2)."
                      },
                      "line1": {
                        "type": "string",
                        "example": "64 New Cavendish Street",
                        "description": "Street, PO Box, or company name."
                      },
                      "line2": {
                        "type": "string",
                        "description": "Apartment, suite, unit, or building."
                      },
                      "postalCode": {
                        "type": "string",
                        "example": "W1G 8TB",
                        "description": "ZIP or postal code."
                      },
                      "state": {
                        "type": "string",
                        "description": "State, county, province, or region."
                      }
                    },
                    "required": ["city", "country", "line1", "postalCode"]
                  },
                  "disablePaymentMethods": {
                    "type": "object",
                    "properties": {
                      "disableCard": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                      },
                      "disablePayByBank": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                      }
                    }
                  },
                  "vposLinkId": {
                    "type": "string",
                    "maxLength": 256
                  }
                },
                "required": ["amount", "currency", "country", "email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "example": 100,
                      "multipleOf": 0.01
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "example": "GBP",
                      "default": "GBP"
                    },
                    "country": {
                      "type": "string",
                      "format": "ISO 3166-1 alpha-2",
                      "example": "GB"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "lastName": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "phone": {
                      "type": "string",
                      "format": "phone"
                    },
                    "orderId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "reference": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "successfulPaymentRedirect": {
                      "type": "string",
                      "maxLength": 256,
                      "format": "uri",
                      "example": "https://platform.com/redirect"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 100
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "platformFee": {
                            "type": "number",
                            "description": "percentage fee",
                            "minimum": 0,
                            "maxLength": 100,
                            "example": 10
                          },
                          "description": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "fundingAmount": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "amount"]
                      }
                    },
                    "invoiceUrl": {
                      "type": "string",
                      "example": "http://yourcompany.com/invoice.pdf"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2020-10-13"
                    },
                    "vatAmount": {
                      "type": "number"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          }
                        },
                        "required": ["id"]
                      }
                    },
                    "billingAddress": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "lastName": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "city": {
                          "type": "string",
                          "example": "London",
                          "description": "City, district, suburb, town, or village."
                        },
                        "country": {
                          "type": "string",
                          "format": "ISO 3166-1 alpha-2",
                          "example": "GB",
                          "description": "Two-letter country code (ISO 3166-1 alpha-2)."
                        },
                        "line1": {
                          "type": "string",
                          "example": "64 New Cavendish Street",
                          "description": "Street, PO Box, or company name."
                        },
                        "line2": {
                          "type": "string",
                          "description": "Apartment, suite, unit, or building."
                        },
                        "postalCode": {
                          "type": "string",
                          "example": "W1G 8TB",
                          "description": "ZIP or postal code."
                        },
                        "state": {
                          "type": "string",
                          "description": "State, county, province, or region."
                        }
                      },
                      "required": ["city", "country", "line1", "postalCode"]
                    },
                    "shippingSameAsBilling": {
                      "type": "boolean"
                    },
                    "shippingAddress": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "lastName": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "city": {
                          "type": "string",
                          "example": "London",
                          "description": "City, district, suburb, town, or village."
                        },
                        "country": {
                          "type": "string",
                          "format": "ISO 3166-1 alpha-2",
                          "example": "GB",
                          "description": "Two-letter country code (ISO 3166-1 alpha-2)."
                        },
                        "line1": {
                          "type": "string",
                          "example": "64 New Cavendish Street",
                          "description": "Street, PO Box, or company name."
                        },
                        "line2": {
                          "type": "string",
                          "description": "Apartment, suite, unit, or building."
                        },
                        "postalCode": {
                          "type": "string",
                          "example": "W1G 8TB",
                          "description": "ZIP or postal code."
                        },
                        "state": {
                          "type": "string",
                          "description": "State, county, province, or region."
                        }
                      },
                      "required": ["city", "country", "line1", "postalCode"]
                    },
                    "disablePaymentMethods": {
                      "type": "object",
                      "properties": {
                        "disableCard": {
                          "type": "boolean",
                          "default": false,
                          "example": false
                        },
                        "disablePayByBank": {
                          "type": "boolean",
                          "default": false,
                          "example": false
                        }
                      }
                    },
                    "vposLinkId": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "_id": {
                      "type": "string"
                    },
                    "status": {
                      "default": "open",
                      "type": "string",
                      "enum": [
                        "open",
                        "pending",
                        "unpaid",
                        "expired",
                        "paid",
                        "declined"
                      ]
                    },
                    "sessionToken": {
                      "type": "string"
                    },
                    "shopper": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "required": ["email"]
                    },
                    "shortLink": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "amount",
                    "currency",
                    "country",
                    "_id",
                    "status",
                    "sessionToken",
                    "shopper",
                    "shortLink",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/token": {
      "post": {
        "operationId": "WebSdkPayInController_createToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "format": "ISO 3166-1 alpha-2",
                    "example": "GB"
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "example": "GBP",
                    "default": "GBP"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["country", "email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionToken": {
                      "type": "string"
                    }
                  },
                  "required": ["sessionToken"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins": {
      "post": {
        "operationId": "WebSdkPayInController_createPayIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 100,
                    "multipleOf": 0.01
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "example": "GBP",
                    "default": "GBP"
                  },
                  "orderId": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "paymentOption": {
                    "type": "object",
                    "properties": {
                      "paymentOptionType": {
                        "example": "Card",
                        "type": "string",
                        "enum": ["Card", "Alternative", "Bank Account"]
                      },
                      "cardAccount": {
                        "type": "object",
                        "properties": {}
                      },
                      "bankAccount": {
                        "type": "object",
                        "properties": {
                          "accountType": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countr": {
                            "type": "string"
                          },
                          "bankCode": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string"
                          }
                        }
                      },
                      "apmAccount": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": ["paymentOptionType"]
                  },
                  "paymentOptionId": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 100
                        },
                        "vendorId": {
                          "type": "string"
                        },
                        "platformFee": {
                          "type": "number",
                          "description": "percentage fee",
                          "minimum": 0,
                          "maxLength": 100,
                          "example": 10
                        },
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "fundingAmount": {
                          "type": "number"
                        }
                      },
                      "required": ["name", "amount"]
                    }
                  },
                  "recurring": {
                    "type": "object",
                    "properties": {
                      "isRecurring": {
                        "type": "boolean"
                      },
                      "initialAuthorizationId": {
                        "type": "string"
                      }
                    },
                    "required": ["isRecurring"]
                  }
                },
                "required": ["amount", "currency", "consumer"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationId": {
                      "type": "string"
                    },
                    "authorizationStatus": {
                      "example": "Captured",
                      "type": "string",
                      "enum": ["Authorized", "Captured", "Voided", "Refunded"]
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 100
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "platformFee": {
                            "type": "number",
                            "description": "percentage fee",
                            "minimum": 0,
                            "maxLength": 100,
                            "example": 10
                          },
                          "description": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "fundingAmount": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "amount"]
                      }
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "paymentOption": {
                      "type": "object",
                      "properties": {
                        "paymentOptionType": {
                          "example": "Card",
                          "type": "string",
                          "enum": ["Card", "Alternative", "Bank Account"]
                        },
                        "cardAccount": {
                          "type": "object",
                          "properties": {}
                        },
                        "bankAccount": {
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "countr": {
                              "type": "string"
                            },
                            "bankCode": {
                              "type": "string"
                            },
                            "accountNumber": {
                              "type": "string"
                            }
                          }
                        },
                        "apmAccount": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "identityType": {
                          "example": "vendor",
                          "type": "string",
                          "enum": ["consumer", "vendor", "platform"]
                        },
                        "identity": {
                          "type": "string"
                        },
                        "paymentOptionId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "paymentOptionType",
                        "identityType",
                        "identity",
                        "paymentOptionId"
                      ]
                    },
                    "status": {
                      "example": "Approved",
                      "type": "string",
                      "enum": ["Approved", "Declined", "Error", "Pending"]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorizationId",
                    "authorizationStatus",
                    "currency",
                    "status",
                    "amount",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/{authorizationId}": {
      "get": {
        "operationId": "WebSdkPayInController_getPayIn",
        "parameters": [
          {
            "name": "authorizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationId": {
                      "type": "string"
                    },
                    "authorizationStatus": {
                      "example": "Captured",
                      "type": "string",
                      "enum": ["Authorized", "Captured", "Voided", "Refunded"]
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 100
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "platformFee": {
                            "type": "number",
                            "description": "percentage fee",
                            "minimum": 0,
                            "maxLength": 100,
                            "example": 10
                          },
                          "description": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "fundingAmount": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "amount"]
                      }
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "paymentOption": {
                      "type": "object",
                      "properties": {
                        "paymentOptionType": {
                          "example": "Card",
                          "type": "string",
                          "enum": ["Card", "Alternative", "Bank Account"]
                        },
                        "cardAccount": {
                          "type": "object",
                          "properties": {}
                        },
                        "bankAccount": {
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "countr": {
                              "type": "string"
                            },
                            "bankCode": {
                              "type": "string"
                            },
                            "accountNumber": {
                              "type": "string"
                            }
                          }
                        },
                        "apmAccount": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "identityType": {
                          "example": "vendor",
                          "type": "string",
                          "enum": ["consumer", "vendor", "platform"]
                        },
                        "identity": {
                          "type": "string"
                        },
                        "paymentOptionId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "paymentOptionType",
                        "identityType",
                        "identity",
                        "paymentOptionId"
                      ]
                    },
                    "status": {
                      "example": "Approved",
                      "type": "string",
                      "enum": ["Approved", "Declined", "Error", "Pending"]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorizationId",
                    "authorizationStatus",
                    "currency",
                    "status",
                    "amount",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/{authorizationId}/capture": {
      "post": {
        "operationId": "WebSdkPayInController_payInCapture",
        "parameters": [
          {
            "name": "authorizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 100,
                    "multipleOf": 0.01
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 256
                        },
                        "amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "example": 100
                        },
                        "vendorId": {
                          "type": "string"
                        },
                        "platformFee": {
                          "type": "number",
                          "description": "percentage fee",
                          "minimum": 0,
                          "maxLength": 100,
                          "example": 10
                        },
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "fundingAmount": {
                          "type": "number"
                        }
                      },
                      "required": ["name", "amount"]
                    }
                  }
                },
                "required": ["amount"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationId": {
                      "type": "string"
                    },
                    "authorizationStatus": {
                      "example": "Captured",
                      "type": "string",
                      "enum": ["Authorized", "Captured", "Voided", "Refunded"]
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 100
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "platformFee": {
                            "type": "number",
                            "description": "percentage fee",
                            "minimum": 0,
                            "maxLength": 100,
                            "example": 10
                          },
                          "description": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "fundingAmount": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "amount"]
                      }
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "paymentOption": {
                      "type": "object",
                      "properties": {
                        "paymentOptionType": {
                          "example": "Card",
                          "type": "string",
                          "enum": ["Card", "Alternative", "Bank Account"]
                        },
                        "cardAccount": {
                          "type": "object",
                          "properties": {}
                        },
                        "bankAccount": {
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "countr": {
                              "type": "string"
                            },
                            "bankCode": {
                              "type": "string"
                            },
                            "accountNumber": {
                              "type": "string"
                            }
                          }
                        },
                        "apmAccount": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "identityType": {
                          "example": "vendor",
                          "type": "string",
                          "enum": ["consumer", "vendor", "platform"]
                        },
                        "identity": {
                          "type": "string"
                        },
                        "paymentOptionId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "paymentOptionType",
                        "identityType",
                        "identity",
                        "paymentOptionId"
                      ]
                    },
                    "status": {
                      "example": "Approved",
                      "type": "string",
                      "enum": ["Approved", "Declined", "Error", "Pending"]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorizationId",
                    "authorizationStatus",
                    "currency",
                    "status",
                    "amount",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/{authorizationId}/void": {
      "post": {
        "operationId": "WebSdkPayInController_payInVoid",
        "parameters": [
          {
            "name": "authorizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationId": {
                      "type": "string"
                    },
                    "authorizationStatus": {
                      "example": "Captured",
                      "type": "string",
                      "enum": ["Authorized", "Captured", "Voided", "Refunded"]
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 100
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "platformFee": {
                            "type": "number",
                            "description": "percentage fee",
                            "minimum": 0,
                            "maxLength": 100,
                            "example": 10
                          },
                          "description": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "fundingAmount": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "amount"]
                      }
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "paymentOption": {
                      "type": "object",
                      "properties": {
                        "paymentOptionType": {
                          "example": "Card",
                          "type": "string",
                          "enum": ["Card", "Alternative", "Bank Account"]
                        },
                        "cardAccount": {
                          "type": "object",
                          "properties": {}
                        },
                        "bankAccount": {
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "countr": {
                              "type": "string"
                            },
                            "bankCode": {
                              "type": "string"
                            },
                            "accountNumber": {
                              "type": "string"
                            }
                          }
                        },
                        "apmAccount": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "identityType": {
                          "example": "vendor",
                          "type": "string",
                          "enum": ["consumer", "vendor", "platform"]
                        },
                        "identity": {
                          "type": "string"
                        },
                        "paymentOptionId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "paymentOptionType",
                        "identityType",
                        "identity",
                        "paymentOptionId"
                      ]
                    },
                    "status": {
                      "example": "Approved",
                      "type": "string",
                      "enum": ["Approved", "Declined", "Error", "Pending"]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorizationId",
                    "authorizationStatus",
                    "currency",
                    "status",
                    "amount",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/pay-ins/{authorizationId}/refund": {
      "post": {
        "operationId": "WebSdkPayInController_payInRefund",
        "parameters": [
          {
            "name": "authorizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "example": 100,
                    "multipleOf": 0.01
                  }
                },
                "required": ["amount"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authorizationId": {
                      "type": "string"
                    },
                    "authorizationStatus": {
                      "example": "Captured",
                      "type": "string",
                      "enum": ["Authorized", "Captured", "Voided", "Refunded"]
                    },
                    "currency": {
                      "example": "GBP",
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "example": 100
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "platformFee": {
                            "type": "number",
                            "description": "percentage fee",
                            "minimum": 0,
                            "maxLength": 100,
                            "example": 10
                          },
                          "description": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "fundingAmount": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "amount"]
                      }
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "paymentOption": {
                      "type": "object",
                      "properties": {
                        "paymentOptionType": {
                          "example": "Card",
                          "type": "string",
                          "enum": ["Card", "Alternative", "Bank Account"]
                        },
                        "cardAccount": {
                          "type": "object",
                          "properties": {}
                        },
                        "bankAccount": {
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "countr": {
                              "type": "string"
                            },
                            "bankCode": {
                              "type": "string"
                            },
                            "accountNumber": {
                              "type": "string"
                            }
                          }
                        },
                        "apmAccount": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "identityType": {
                          "example": "vendor",
                          "type": "string",
                          "enum": ["consumer", "vendor", "platform"]
                        },
                        "identity": {
                          "type": "string"
                        },
                        "paymentOptionId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "paymentOptionType",
                        "identityType",
                        "identity",
                        "paymentOptionId"
                      ]
                    },
                    "status": {
                      "example": "Approved",
                      "type": "string",
                      "enum": ["Approved", "Declined", "Error", "Pending"]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorizationId",
                    "authorizationStatus",
                    "currency",
                    "status",
                    "amount",
                    "transactionId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["PayIn"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payment-methods/available": {
      "get": {
        "operationId": "VendorPaymentMethodController_getAvailablePaymentMethods",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/payout-options": {
      "get": {
        "operationId": "PayoutOptionsController_getPayoutOptions",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "payoutOptionType": {
                        "example": "Card",
                        "type": "string",
                        "enum": ["Card", "Alternative", "Bank Account"]
                      },
                      "cardAccount": {
                        "type": "object",
                        "properties": {}
                      },
                      "bankAccount": {
                        "type": "object",
                        "properties": {
                          "accountType": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "countr": {
                            "type": "string"
                          },
                          "bankCode": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string"
                          }
                        }
                      },
                      "apmAccount": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": ["payoutOptionType"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Payout Option"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "operationId": "WebhookController_getWebhooks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "sellerId": {
                        "type": "string"
                      },
                      "webhookName": {
                        "type": "string",
                        "example": "ewallet/create"
                      },
                      "validity": {
                        "example": "valid",
                        "type": "string",
                        "enum": ["valid", "invalid"]
                      },
                      "email": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "merchantId",
                      "sellerId",
                      "webhookName",
                      "validity",
                      "email",
                      "url"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Webhook"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "WebhookController_createWebhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhookName": {
                    "type": "string",
                    "enum": [
                      "authorization/update",
                      "ewallet/create",
                      "payout/update",
                      "onboarding/update",
                      "plan/create",
                      "plan/update",
                      "subscription/create",
                      "subscription/update",
                      "subscription/chargeSuccess",
                      "subscription/chargeFailure",
                      "ewalletTransaction/create",
                      "notification/create"
                    ],
                    "example": "authorization/update"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": ["webhookName", "email", "url"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "sellerId": {
                      "type": "string"
                    },
                    "webhookName": {
                      "type": "string",
                      "example": "ewallet/create"
                    },
                    "validity": {
                      "example": "valid",
                      "type": "string",
                      "enum": ["valid", "invalid"]
                    },
                    "email": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "merchantId",
                    "sellerId",
                    "webhookName",
                    "validity",
                    "email",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Webhook"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "operationId": "WebhookController_getWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "sellerId": {
                        "type": "string"
                      },
                      "webhookName": {
                        "type": "string",
                        "example": "ewallet/create"
                      },
                      "validity": {
                        "example": "valid",
                        "type": "string",
                        "enum": ["valid", "invalid"]
                      },
                      "email": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "merchantId",
                      "sellerId",
                      "webhookName",
                      "validity",
                      "email",
                      "url"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Webhook"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "WebhookController_updateWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "validity": {
                    "example": "valid",
                    "type": "string",
                    "enum": ["valid", "invalid"]
                  }
                },
                "required": ["email", "url", "validity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "sellerId": {
                      "type": "string"
                    },
                    "webhookName": {
                      "type": "string",
                      "example": "ewallet/create"
                    },
                    "validity": {
                      "example": "valid",
                      "type": "string",
                      "enum": ["valid", "invalid"]
                    },
                    "email": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "merchantId",
                    "sellerId",
                    "webhookName",
                    "validity",
                    "email",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Webhook"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "WebhookController_deleteWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "sellerId": {
                      "type": "string"
                    },
                    "webhookName": {
                      "type": "string",
                      "example": "ewallet/create"
                    },
                    "validity": {
                      "example": "valid",
                      "type": "string",
                      "enum": ["valid", "invalid"]
                    },
                    "email": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "merchantId",
                    "sellerId",
                    "webhookName",
                    "validity",
                    "email",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Webhook"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/configuration/public-configurations": {
      "get": {
        "operationId": "ConfigurationController_getPublicConfiguration",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "platformName": {
                        "type": "string",
                        "example": "X-Pay"
                      },
                      "pages": {
                        "type": "object",
                        "example": {
                          "promoPageUrl": "https://www.google.co.il/",
                          "feesPageUrl": "https://www.google.co.il/",
                          "payPortalUrl": "https://www.google.co.il/"
                        }
                      },
                      "components": {
                        "example": {
                          "payPortal": {
                            "payments": true
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {}
                          }
                        ]
                      }
                    },
                    "required": ["platformName", "pages", "components"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Configuration"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/links/{linkId}": {
      "get": {
        "operationId": "PublicLinkController_getLink",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uniqueId": {
                      "type": "string"
                    },
                    "status": {
                      "example": "created",
                      "type": "string",
                      "enum": ["created", "opened", "disabled"]
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "5fba355e857efefdb5ae3cd1"
                    },
                    "views": {
                      "example": ["onboarding"],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "refreshUrl": {
                      "type": "string"
                    },
                    "returnUrl": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:34:19.536Z"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:36:19.536Z"
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-17T15:34:19.536Z"
                    }
                  },
                  "required": [
                    "uniqueId",
                    "status",
                    "vendorId",
                    "views",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Link"]
      },
      "delete": {
        "operationId": "PublicLinkController_disableLink",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uniqueId": {
                      "type": "string"
                    },
                    "status": {
                      "example": "created",
                      "type": "string",
                      "enum": ["created", "opened", "disabled"]
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "5fba355e857efefdb5ae3cd1"
                    },
                    "views": {
                      "example": ["onboarding"],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "refreshUrl": {
                      "type": "string"
                    },
                    "returnUrl": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:34:19.536Z"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:36:19.536Z"
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-17T15:34:19.536Z"
                    }
                  },
                  "required": [
                    "uniqueId",
                    "status",
                    "vendorId",
                    "views",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Link"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/links/{linkId}/tokens": {
      "get": {
        "operationId": "PublicLinkController_getTokens",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refreshToken",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Link"]
      }
    },
    "/links/{linkId}/tokens/login": {
      "get": {
        "operationId": "PublicLinkController_getLoginToken",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Link"]
      }
    },
    "/links/{linkId}/send": {
      "post": {
        "operationId": "PublicLinkController_sendLink",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "platformName": {
                    "type": "string"
                  }
                },
                "required": ["type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Link"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/links": {
      "get": {
        "operationId": "VendorLinkController_getLinks",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["created", "opened", "disabled"]
              }
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["onboarding", "payout", "vpos", "direct_debit"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uniqueId": {
                      "type": "string"
                    },
                    "status": {
                      "example": "created",
                      "type": "string",
                      "enum": ["created", "opened", "disabled"]
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "5fba355e857efefdb5ae3cd1"
                    },
                    "views": {
                      "example": ["onboarding"],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "refreshUrl": {
                      "type": "string"
                    },
                    "returnUrl": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:34:19.536Z"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:36:19.536Z"
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-17T15:34:19.536Z"
                    }
                  },
                  "required": [
                    "uniqueId",
                    "status",
                    "vendorId",
                    "views",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "VendorLinkController_createLink",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "views": {
                    "example": ["onboarding"],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["views"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uniqueId": {
                      "type": "string"
                    },
                    "status": {
                      "example": "created",
                      "type": "string",
                      "enum": ["created", "opened", "disabled"]
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "5fba355e857efefdb5ae3cd1"
                    },
                    "views": {
                      "example": ["onboarding"],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "refreshUrl": {
                      "type": "string"
                    },
                    "returnUrl": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:34:19.536Z"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-16T15:36:19.536Z"
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2021-06-17T15:34:19.536Z"
                    }
                  },
                  "required": [
                    "uniqueId",
                    "status",
                    "vendorId",
                    "views",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/volume": {
      "get": {
        "operationId": "ReportController_getVolume",
        "parameters": [
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "example": "2023-07-19T10:11:44.916Z",
            "schema": {}
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "example": "2023-07-12T10:11:44.916Z",
            "schema": {}
          },
          {
            "name": "currency",
            "required": true,
            "in": "query",
            "example": "GBP",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "volumes": {
                      "example": [
                        {
                          "amount": 100,
                          "date": "1980-01-01"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    }
                  },
                  "required": ["volumes", "total"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Reports"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/revenue": {
      "get": {
        "operationId": "ReportController_getRevenue",
        "parameters": [
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "example": "2023-07-19T10:11:44.916Z",
            "schema": {}
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "example": "2023-07-12T10:11:44.916Z",
            "schema": {}
          },
          {
            "name": "currency",
            "required": true,
            "in": "query",
            "example": "GBP",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "revenues": {
                      "example": [
                        {
                          "amount": 100,
                          "date": "1980-01-01"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    }
                  },
                  "required": ["revenues", "total"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Reports"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/revenue/vendors": {
      "get": {
        "operationId": "ReportController_getVendorRevenue",
        "parameters": [
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "example": "2023-07-19T10:11:44.916Z",
            "schema": {}
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "example": "2023-07-12T10:11:44.916Z",
            "schema": {}
          },
          {
            "name": "currency",
            "required": true,
            "in": "query",
            "example": "GBP",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "revenues": {
                      "example": [
                        {
                          "amount": 100,
                          "date": "1980-01-01"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    }
                  },
                  "required": ["revenues", "total"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Reports"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/balance": {
      "get": {
        "operationId": "ReportController_getBalance",
        "parameters": [
          {
            "name": "currency",
            "required": true,
            "in": "query",
            "example": "GBP",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "example": [
                        {
                          "id": "1",
                          "merchantId": "111111111111",
                          "sellerId": "111111111111",
                          "currency": "GBP",
                          "payableBalance": 100,
                          "pendingBalance": 100,
                          "reservedBalance": 100,
                          "createdAt": "1980-01-01T00:00:00.000Z"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": ["balance"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Reports"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reports/vendors-funnel": {
      "get": {
        "operationId": "ReportController_getVendorsFunnel",
        "parameters": [
          {
            "name": "receivePayout",
            "required": false,
            "in": "query",
            "example": "false",
            "schema": {}
          },
          {
            "name": "acceptPayments",
            "required": false,
            "in": "query",
            "example": "true",
            "schema": {}
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PAY_IN_SUCCESS",
                  "PAY_IN_IN_REVIEW",
                  "PAY_OUT_IN_REVIEW",
                  "PAY_OUT_SUCCESS",
                  "REJECTED",
                  "STARTED"
                ]
              }
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "example": "2023-07-19T10:11:44.917Z",
            "schema": {}
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "example": "2023-07-12T10:11:44.917Z",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vendors": {
                      "example": [
                        {
                          "status": "CREATED",
                          "count": 9,
                          "percentage": 100
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "overallConversion": {
                      "type": "number",
                      "example": 0.6
                    }
                  },
                  "required": ["vendors", "overallConversion"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Reports"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transfers": {
      "get": {
        "operationId": "TransferController_getTransfers",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eWalletId": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["USD", "GBP", "EUR"],
                        "example": "GBP",
                        "default": "GBP"
                      },
                      "creditedVendorId": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "initialized",
                          "pending",
                          "collected",
                          "sent",
                          "completed",
                          "failed",
                          "canceled"
                        ],
                        "example": "collected",
                        "default": "collected"
                      },
                      "merchantId": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "eWalletId",
                      "amount",
                      "currency",
                      "creditedVendorId",
                      "status",
                      "merchantId",
                      "vendorId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Transfer"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "TransferController_createTransfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eWalletId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "GBP", "EUR"],
                    "example": "GBP",
                    "default": "GBP"
                  },
                  "creditedVendorId": {
                    "type": "string"
                  }
                },
                "required": [
                  "eWalletId",
                  "amount",
                  "currency",
                  "creditedVendorId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "example": "GBP",
                      "default": "GBP"
                    },
                    "creditedVendorId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "collected",
                        "sent",
                        "completed",
                        "failed",
                        "canceled"
                      ],
                      "example": "collected",
                      "default": "collected"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "amount",
                    "currency",
                    "creditedVendorId",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Transfer"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transfers/{transferId}/commit": {
      "post": {
        "operationId": "TransferController_commitTransfer",
        "parameters": [
          {
            "name": "transferId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "example": "GBP",
                      "default": "GBP"
                    },
                    "creditedVendorId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "collected",
                        "sent",
                        "completed",
                        "failed",
                        "canceled"
                      ],
                      "example": "collected",
                      "default": "collected"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "amount",
                    "currency",
                    "creditedVendorId",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Transfer"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transfers/{transferId}/cancel": {
      "post": {
        "operationId": "TransferController_cancelTransfer",
        "parameters": [
          {
            "name": "transferId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "example": "GBP",
                      "default": "GBP"
                    },
                    "creditedVendorId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "collected",
                        "sent",
                        "completed",
                        "failed",
                        "canceled"
                      ],
                      "example": "collected",
                      "default": "collected"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "amount",
                    "currency",
                    "creditedVendorId",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Transfer"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/transfers/{transferId}": {
      "get": {
        "operationId": "TransferController_getTransferById",
        "parameters": [
          {
            "name": "transferId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eWalletId": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["USD", "GBP", "EUR"],
                      "example": "GBP",
                      "default": "GBP"
                    },
                    "creditedVendorId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "initialized",
                        "pending",
                        "collected",
                        "sent",
                        "completed",
                        "failed",
                        "canceled"
                      ],
                      "example": "collected",
                      "default": "collected"
                    },
                    "merchantId": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "eWalletId",
                    "amount",
                    "currency",
                    "creditedVendorId",
                    "status",
                    "merchantId",
                    "vendorId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Transfer"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/settings/logo": {
      "post": {
        "operationId": "VendorSettingsController_uploadVendorLogo",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["logo"],
                "properties": {
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "415": {
            "description": "Unsupported File Format"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VendorSettingsController_getVendorLogo",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "VendorSettingsController_deleteVendorLogo",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/open-banking/link": {
      "post": {
        "operationId": "OpenBankingController_link",
        "parameters": [
          {
            "name": "publicToken",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/open-banking/details": {
      "get": {
        "operationId": "OpenBankingController_details",
        "parameters": [
          {
            "name": "accessToken",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holderName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountNumber",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortCode",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountType",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/payments": {
      "get": {
        "operationId": "PaymentController_getPayments",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daterange",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["Charged", "Settled", "PaidIntoBank"]
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Auth",
                "Sale",
                "Auth3D",
                "Sale3D",
                "Settle",
                "Capture",
                "Void",
                "Refund",
                "Auth3D_Challange",
                "Init3D",
                "Funding",
                "Payout",
                "Transfer",
                "Chargeback",
                "Cancel Chargeback"
              ]
            }
          },
          {
            "name": "consumerEmail",
            "required": false,
            "in": "query",
            "schema": {
              "format": "email",
              "type": "string"
            }
          },
          {
            "name": "invoiceReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payoutReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "netAmount",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csv",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Payments"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/notifications": {
      "get": {
        "operationId": "NotificationController_getVendorNotifications",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daterange",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "name": "csv",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "example": [
                        {
                          "id": "624c567dfcb8145744c7a881",
                          "vendorId": "6384b75fc661567cd8b337b5",
                          "merchantId": "6384b75fc66156798567898a",
                          "group": "onboarding",
                          "subject": "You have reached 50% of your limit for accepting payments.",
                          "body": "You have reached 50% (750GBP) of your limit for accepting payments.\\nProvide additional details about your business in order to payout funds and lift any account limitations.",
                          "message": "You have reached 50% of your limit for accepting payments, please complete the onboarding process",
                          "actions": [
                            {
                              "text": "Call to action",
                              "payload": {
                                "action": "onboarding",
                                "method": "link"
                              }
                            }
                          ],
                          "status": "read",
                          "importance": "low",
                          "createdAt": "2022-12-04T14:41:46.410Z",
                          "updatedAt": "2022-12-04T14:41:46.410Z"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "array"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": ["items", "total"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/notifications/read": {
      "post": {
        "operationId": "NotificationController_updateVendorNotificationStatus",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notificationIds": {
                    "example": [52341, 56123, 123, 5232],
                    "type": "array"
                  }
                },
                "required": ["notificationIds"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/notifications/settings": {
      "get": {
        "operationId": "NotificationController_getVendorNotificationSettings",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "624c567dfcb8145744c7a881"
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "6384b75fc661567cd8b337b5"
                    },
                    "merchantId": {
                      "type": "string",
                      "example": "6384b75fc66156798567898a"
                    },
                    "settings": {
                      "type": "object",
                      "example": {
                        "numberShowNotification": 5,
                        "textOpenFullView": "See all Notifications",
                        "popupBubbleNotification": true,
                        "popupBubbleNotificationTime": 30,
                        "refreshInterval": 3600,
                        "disable": {
                          "byGroup": [],
                          "byImportance": [],
                          "allNotifications": false
                        }
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "merchantId",
                    "settings",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "NotificationController_updateVendorNotificationSettings",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disable": {
                    "type": "object",
                    "example": {
                      "disable": {
                        "byGroup": [],
                        "byImportance": [],
                        "allNotifications": false
                      }
                    }
                  },
                  "numberShowNotification": {
                    "type": "number"
                  },
                  "popupBubbleNotification": {
                    "type": "boolean"
                  },
                  "popupBubbleNotificationTime": {
                    "type": "number"
                  },
                  "refreshInterval": {
                    "type": "number"
                  },
                  "textOpenFullView": {
                    "type": "string"
                  }
                },
                "required": [
                  "disable",
                  "numberShowNotification",
                  "popupBubbleNotification",
                  "popupBubbleNotificationTime",
                  "refreshInterval",
                  "textOpenFullView"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "624c567dfcb8145744c7a881"
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "6384b75fc661567cd8b337b5"
                    },
                    "merchantId": {
                      "type": "string",
                      "example": "6384b75fc66156798567898a"
                    },
                    "settings": {
                      "type": "object",
                      "example": {
                        "numberShowNotification": 5,
                        "textOpenFullView": "See all Notifications",
                        "popupBubbleNotification": true,
                        "popupBubbleNotificationTime": 30,
                        "refreshInterval": 3600,
                        "disable": {
                          "byGroup": [],
                          "byImportance": [],
                          "allNotifications": false
                        }
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "merchantId",
                    "settings",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/notifications/templates": {
      "get": {
        "operationId": "NotificationController_getNotificationTemplate",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "type": "string"
                      },
                      "body": {
                        "type": "string"
                      }
                    },
                    "required": ["subject", "body"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/invoices": {
      "get": {
        "operationId": "InvoiceController_getListInvoices",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "example": [
                        {
                          "id": "6391fd42a38e34b15b118d9b",
                          "vendorId": "6384b75fc661567cd8b337b5",
                          "merchantId": "6384b75fc66156798567898a",
                          "currency": "GBP",
                          "totalAmount": 99.5,
                          "reference": "INV-123456",
                          "publicUrl": "http://yourcompany.com/invoice.pdf",
                          "invoiceObject": {},
                          "lineItems": [
                            {
                              "description": "line 1",
                              "unitPrice": 10.6,
                              "quantity": 3
                            },
                            {
                              "description": "line 2",
                              "unitPrice": 19.3,
                              "quantity": 1
                            }
                          ],
                          "customer": {
                            "id": "1234",
                            "email": "test@gmail.com",
                            "phone": "+447975777666"
                          },
                          "paymentStatus": "unpaid",
                          "isRecurring": true,
                          "subscriptionId": "12312312",
                          "dueDate": "2022-12-04T08:55:28.544Z",
                          "createdAt": "2022-12-04T08:55:28.544Z",
                          "updatedAt": "2022-12-04T08:55:28.544Z"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "array"
                      }
                    },
                    "total": {
                      "example": [
                        {
                          "count": 1
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "array"
                      }
                    }
                  },
                  "required": ["items", "total"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "InvoiceController_createInvoice",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "example": "GBP"
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 99.5
                  },
                  "totalPaid": {
                    "type": "number",
                    "example": 99.5
                  },
                  "reference": {
                    "type": "string",
                    "example": "INV-1234"
                  },
                  "vatAmount": {
                    "type": "number",
                    "example": 19.9
                  },
                  "publicUrl": {
                    "type": "string",
                    "example": "http://yourcompany.com/invoice.pdf"
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "paymentStatus": {
                    "example": "unpaid",
                    "type": "string",
                    "enum": [
                      "unpaid",
                      "paid",
                      "partially_paid",
                      "refunded",
                      "partially_refunded"
                    ]
                  },
                  "lineItems": {
                    "example": [
                      {
                        "description": "line 1",
                        "unitPrice": 10.6,
                        "quantity": 3
                      },
                      {
                        "description": "line 2",
                        "unitPrice": 19.3,
                        "quantity": 1
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "array"
                    }
                  },
                  "invoiceObject": {
                    "type": "object",
                    "description": "Raw Invoice Object",
                    "example": {}
                  },
                  "isRecurring": {
                    "type": "boolean",
                    "example": false
                  },
                  "subscriptionId": {
                    "type": "string"
                  },
                  "batchId": {
                    "type": "string",
                    "example": "a90ab923-a80a-4b40-b29c-e83d94faa36c"
                  },
                  "customer": {
                    "example": {
                      "reference": "customer-ref-1",
                      "id": "1234",
                      "email": "test@gmail.com",
                      "phone": "+447975777666"
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        },
                        "required": ["email"]
                      }
                    ]
                  },
                  "paymentMethods": {
                    "example": ["directDebit"],
                    "type": "array",
                    "items": {
                      "type": "array"
                    }
                  }
                },
                "required": [
                  "currency",
                  "totalAmount",
                  "reference",
                  "paymentStatus",
                  "lineItems",
                  "invoiceObject",
                  "isRecurring",
                  "customer"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6391fd42a38e34b15b118d9b"
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "6384b75fc661567cd8b337b5"
                    },
                    "merchantId": {
                      "type": "string",
                      "example": "6384b75fc66156798567898a"
                    },
                    "currency": {
                      "type": "string",
                      "example": "GBP"
                    },
                    "totalAmount": {
                      "type": "number",
                      "example": 99.5
                    },
                    "totalPaid": {
                      "type": "number",
                      "example": 99.5
                    },
                    "vatAmount": {
                      "type": "number",
                      "example": 19.9
                    },
                    "reference": {
                      "type": "string",
                      "example": "INV-123456"
                    },
                    "publicUrl": {
                      "type": "string",
                      "example": "http://yourcompany.com/invoice.pdf"
                    },
                    "lineItems": {
                      "example": [
                        {
                          "description": "line 1",
                          "unitPrice": 10.6,
                          "quantity": 3
                        },
                        {
                          "description": "line 2",
                          "unitPrice": 19.3,
                          "quantity": 1
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "array"
                      }
                    },
                    "invoiceObject": {
                      "type": "object",
                      "description": "Raw Invoice Object",
                      "example": {}
                    },
                    "isRecurring": {
                      "type": "boolean",
                      "example": false
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "customer": {
                      "example": {
                        "id": "1234",
                        "reference": "CUS-01",
                        "email": "test@gmail.com",
                        "phone": "+447975777666"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "reference": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            }
                          },
                          "required": ["email"]
                        }
                      ]
                    },
                    "paymentStatus": {
                      "example": "unpaid",
                      "type": "string",
                      "enum": [
                        "unpaid",
                        "paid",
                        "partially_paid",
                        "refunded",
                        "partially_refunded"
                      ]
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "merchantId",
                    "currency",
                    "totalAmount",
                    "totalPaid",
                    "vatAmount",
                    "reference",
                    "publicUrl",
                    "lineItems",
                    "invoiceObject",
                    "isRecurring",
                    "customer",
                    "paymentStatus",
                    "dueDate",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/invoices/{invoicesId}": {
      "get": {
        "operationId": "InvoiceController_getInvoice",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoicesId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6391fd42a38e34b15b118d9b"
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "6384b75fc661567cd8b337b5"
                    },
                    "merchantId": {
                      "type": "string",
                      "example": "6384b75fc66156798567898a"
                    },
                    "currency": {
                      "type": "string",
                      "example": "GBP"
                    },
                    "totalAmount": {
                      "type": "number",
                      "example": 99.5
                    },
                    "totalPaid": {
                      "type": "number",
                      "example": 99.5
                    },
                    "vatAmount": {
                      "type": "number",
                      "example": 19.9
                    },
                    "reference": {
                      "type": "string",
                      "example": "INV-123456"
                    },
                    "publicUrl": {
                      "type": "string",
                      "example": "http://yourcompany.com/invoice.pdf"
                    },
                    "lineItems": {
                      "example": [
                        {
                          "description": "line 1",
                          "unitPrice": 10.6,
                          "quantity": 3
                        },
                        {
                          "description": "line 2",
                          "unitPrice": 19.3,
                          "quantity": 1
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "array"
                      }
                    },
                    "invoiceObject": {
                      "type": "object",
                      "description": "Raw Invoice Object",
                      "example": {}
                    },
                    "isRecurring": {
                      "type": "boolean",
                      "example": false
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "customer": {
                      "example": {
                        "id": "1234",
                        "reference": "CUS-01",
                        "email": "test@gmail.com",
                        "phone": "+447975777666"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "reference": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            }
                          },
                          "required": ["email"]
                        }
                      ]
                    },
                    "paymentStatus": {
                      "example": "unpaid",
                      "type": "string",
                      "enum": [
                        "unpaid",
                        "paid",
                        "partially_paid",
                        "refunded",
                        "partially_refunded"
                      ]
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "merchantId",
                    "currency",
                    "totalAmount",
                    "totalPaid",
                    "vatAmount",
                    "reference",
                    "publicUrl",
                    "lineItems",
                    "invoiceObject",
                    "isRecurring",
                    "customer",
                    "paymentStatus",
                    "dueDate",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "InvoiceController_updateInvoice",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoicesId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "example": "GBP"
                  },
                  "totalAmount": {
                    "type": "number",
                    "example": 99.5
                  },
                  "totalPaid": {
                    "type": "number",
                    "example": 99.5
                  },
                  "vatAmount": {
                    "type": "number",
                    "example": 12.23
                  },
                  "publicUrl": {
                    "type": "string",
                    "example": "http://yourcompany.com/invoice.pdf"
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "lineItems": {
                    "example": [
                      {
                        "description": "line 1",
                        "unitPrice": 10.6,
                        "quantity": 3
                      },
                      {
                        "description": "line 2",
                        "unitPrice": 19.3,
                        "quantity": 1
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "array"
                    }
                  },
                  "invoiceObject": {
                    "type": "object",
                    "description": "Raw Invoice Object",
                    "example": {}
                  },
                  "paymentStatus": {
                    "example": "unpaid",
                    "type": "string",
                    "enum": [
                      "unpaid",
                      "paid",
                      "partially_paid",
                      "refunded",
                      "partially_refunded"
                    ]
                  },
                  "isRecurring": {
                    "type": "boolean",
                    "example": false
                  },
                  "subscriptionId": {
                    "type": "string"
                  },
                  "batchId": {
                    "type": "string",
                    "example": "a90ab923-a80a-4b40-b29c-e83d94faa36c"
                  },
                  "customer": {
                    "type": "object",
                    "example": {
                      "id": "1234",
                      "email": "test@gmail.com",
                      "phone": "+447975777666"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "6391fd42a38e34b15b118d9b"
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "6384b75fc661567cd8b337b5"
                    },
                    "merchantId": {
                      "type": "string",
                      "example": "6384b75fc66156798567898a"
                    },
                    "currency": {
                      "type": "string",
                      "example": "GBP"
                    },
                    "totalAmount": {
                      "type": "number",
                      "example": 99.5
                    },
                    "totalPaid": {
                      "type": "number",
                      "example": 99.5
                    },
                    "vatAmount": {
                      "type": "number",
                      "example": 19.9
                    },
                    "reference": {
                      "type": "string",
                      "example": "INV-123456"
                    },
                    "publicUrl": {
                      "type": "string",
                      "example": "http://yourcompany.com/invoice.pdf"
                    },
                    "lineItems": {
                      "example": [
                        {
                          "description": "line 1",
                          "unitPrice": 10.6,
                          "quantity": 3
                        },
                        {
                          "description": "line 2",
                          "unitPrice": 19.3,
                          "quantity": 1
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "array"
                      }
                    },
                    "invoiceObject": {
                      "type": "object",
                      "description": "Raw Invoice Object",
                      "example": {}
                    },
                    "isRecurring": {
                      "type": "boolean",
                      "example": false
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "customer": {
                      "example": {
                        "id": "1234",
                        "reference": "CUS-01",
                        "email": "test@gmail.com",
                        "phone": "+447975777666"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "reference": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            }
                          },
                          "required": ["email"]
                        }
                      ]
                    },
                    "paymentStatus": {
                      "example": "unpaid",
                      "type": "string",
                      "enum": [
                        "unpaid",
                        "paid",
                        "partially_paid",
                        "refunded",
                        "partially_refunded"
                      ]
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "merchantId",
                    "currency",
                    "totalAmount",
                    "totalPaid",
                    "vatAmount",
                    "reference",
                    "publicUrl",
                    "lineItems",
                    "invoiceObject",
                    "isRecurring",
                    "customer",
                    "paymentStatus",
                    "dueDate",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/consumers/{consumerId}/payment-options/{paymentOptionId}": {
      "delete": {
        "operationId": "ConsumerController_deletePaymentOption",
        "parameters": [
          {
            "name": "paymentOptionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Consumers"]
      }
    },
    "/consumers": {
      "post": {
        "operationId": "ConsumerController_createConsumer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "referenceConsumer": {
                    "type": "object"
                  }
                },
                "required": ["name", "email", "referenceConsumer"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Consumers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/mandates": {
      "post": {
        "operationId": "MandateController_createMandate",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consumer": {
                    "example": {
                      "name": "John Doe",
                      "email": "jdoe@mail.com",
                      "reference": "123456789"
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  },
                  "createMandateLink": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": ["consumer", "createMandateLink"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "MandateController_getMandates",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dates",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "consumerEmail",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumerName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mandateReference",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csv",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/mandates/{mandateId}/send": {
      "post": {
        "operationId": "MandateController_sendMandate",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mandateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "linkId": {
                    "type": "string"
                  }
                },
                "required": ["subject", "body", "linkId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/consumers/{consumerId}/mandates/{mandateId}/commit": {
      "post": {
        "operationId": "MandateController_commitMandate",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mandateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consumer": {
                    "example": {
                      "firstName": "John",
                      "lastName": "Doe",
                      "middleName": "A",
                      "companyName": "Company",
                      "address": {
                        "formattedAddress": "2-20 Western Rd, London NW10 7LW, UK",
                        "country": "GB",
                        "city": "London",
                        "state": "England",
                        "postCode": "NW10 7LW"
                      },
                      "phone": "+44929929229"
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  },
                  "paymentOption": {
                    "example": {
                      "bankAccount": {
                        "name": "John Doe",
                        "bankCode": "200415",
                        "accountNumber": "38290008"
                      }
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  }
                },
                "required": ["consumer", "paymentOption"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "consumer": {
                      "example": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "middleName": "A",
                        "companyName": "Company",
                        "address": {
                          "formattedAddress": "2-20 Western Rd, London NW10 7LW, UK",
                          "country": "GB",
                          "city": "London",
                          "state": "England",
                          "postCode": "NW10 7LW"
                        },
                        "phone": "+44929929229"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    },
                    "paymentOption": {
                      "example": {
                        "bankAccount": {
                          "name": "John Doe",
                          "bankCode": "200415",
                          "accountNumber": "38290008"
                        }
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  },
                  "required": ["consumer", "paymentOption"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/mandates/{mandateId}/cancel": {
      "post": {
        "operationId": "MandateController_cancelMandate",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mandateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/consumers/{consumerId}/mandates": {
      "get": {
        "operationId": "MandateController_getMandateByConsumerId",
        "parameters": [
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/consumers/reference/{consumerReference}/mandates": {
      "get": {
        "operationId": "MandateController_getMandateByConsumerReference",
        "parameters": [
          {
            "name": "consumerReference",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Vendor"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/processors/{processorId}/webhooks": {
      "get": {
        "operationId": "ProcessorController_getWebhooks",
        "parameters": [
          {
            "name": "processorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Processors"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ProcessorController_postWebhooks",
        "parameters": [
          {
            "name": "processorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["Processors"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vendors/{vendorId}/checkout-config": {
      "get": {
        "operationId": "CheckoutConfigController_getCheckoutConfig",
        "parameters": [
          {
            "name": "customer-reference",
            "required": true,
            "in": "query",
            "schema": {}
          },
          {
            "name": "reference",
            "required": true,
            "in": "query",
            "schema": {}
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Checkout Config"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "CheckoutConfigController_upsertCheckoutConfig",
        "parameters": [
          {
            "name": "customer-reference",
            "required": true,
            "in": "query",
            "schema": {}
          },
          {
            "name": "reference",
            "required": true,
            "in": "query",
            "schema": {}
          },
          {
            "name": "vendorId",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer": {
                    "example": {
                      "id": "1234",
                      "reference": "CUS-01",
                      "email": "test@gmail.com",
                      "phone": "+447975777666"
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        },
                        "required": ["email"]
                      }
                    ]
                  },
                  "paymentMethods": {
                    "type": "array",
                    "example": ["directDebit"],
                    "items": {
                      "type": "string",
                      "enum": [
                        "apm",
                        "bankTransfer",
                        "creditCard",
                        "directDebit"
                      ]
                    }
                  }
                },
                "required": ["customer", "paymentMethods"]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": ["Checkout Config"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  }
}
